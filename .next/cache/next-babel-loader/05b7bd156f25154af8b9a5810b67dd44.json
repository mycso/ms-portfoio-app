{"ast":null,"code":"import _defineProperty from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\\n        searchTerms: allProducts(\\n            where: {\\n                OR: [\\n                    {name_contains_i: $searchTerm}\\n                    {description_contains_i: $searchTerm}\\n                    {author_contains_i: $searchTerm}\\n                ]\\n            }\\n        ) {\\n            id\\n            name\\n            author\\n            photo {\\n                image {\\n                    publicUrlTransformed\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nimport { useLazyQuery } from '@apollo/client';\nimport debounce from 'lodash.debounce';\nvar SEARCH_PRODUCTS_QUERY = gql(_templateObject());\nexport default function Search() {\n  _s();\n\n  var _this = this;\n\n  var _useLazyQuery = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      findItems = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      loading = _useLazyQuery2$.loading,\n      data = _useLazyQuery2$.data,\n      error = _useLazyQuery2$.error;\n\n  console.log(data);\n  var items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  var findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n\n  var _useCombobox = useCombobox({\n    items: [],\n    onInputValueChange: function onInputValueChange(_ref) {\n      var inputValue = _ref.inputValue;\n      console.log('Input changed');\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n    onSelectedItemChange: function onSelectedItemChange() {\n      console.log('Selected Item change!');\n    }\n  }),\n      inputValue = _useCombobox.inputValue,\n      getMenuProps = _useCombobox.getMenuProps,\n      getInputProps = _useCombobox.getInputProps,\n      getComboboxProps = _useCombobox.getComboboxProps;\n\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for a book title or age...',\n        id: 'search',\n        className: 'loading'\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: items.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(DropDownItem, {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, _this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"Qs54yFuigTrAzxc3GFKHYHkiigE=\", false, function () {\n  return [useLazyQuery, useCombobox];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Search.js"],"names":["React","gql","resetIdCounter","useCombobox","DropDown","DropDownItem","SearchStyles","useLazyQuery","debounce","SEARCH_PRODUCTS_QUERY","Search","fetchPolicy","findItems","loading","data","error","console","log","items","searchTerms","findItemsButChill","onInputValueChange","inputValue","variables","searchTerm","onSelectedItemChange","getMenuProps","getInputProps","getComboboxProps","type","placeholder","id","className","map","item","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,IAAMC,qBAAqB,GAAGR,GAAH,mBAA3B;AAuBA,eAAe,SAASS,MAAT,GAAkB;AAAA;;AAAA;;AAAA,sBACeH,YAAY,CACpDE,qBADoD,EAEpD;AACIE,IAAAA,WAAW,EAAE;AADjB,GAFoD,CAD3B;AAAA;AAAA,MACtBC,SADsB;AAAA;AAAA,MACVC,OADU,mBACVA,OADU;AAAA,MACDC,IADC,mBACDA,IADC;AAAA,MACKC,KADL,mBACKA,KADL;;AAQ7BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAMI,KAAK,GAAG,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEK,WAAN,KAAqB,EAAnC;AACA,MAAMC,iBAAiB,GAAGZ,QAAQ,CAACI,SAAD,EAAY,GAAZ,CAAlC;AACAV,EAAAA,cAAc;;AAXe,qBAiBzBC,WAAW,CAAC;AACZe,IAAAA,KAAK,EAAE,EADK;AAEZG,IAAAA,kBAFY,oCAEuB;AAAA,UAAdC,UAAc,QAAdA,UAAc;AAC/BN,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAG,MAAAA,iBAAiB,CAAC;AACdG,QAAAA,SAAS,EAAE;AACPC,UAAAA,UAAU,EAAEF;AADL;AADG,OAAD,CAAjB;AAKH,KATW;AAUZG,IAAAA,oBAVY,kCAUW;AACnBT,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;AAZW,GAAD,CAjBc;AAAA,MAazBK,UAbyB,gBAazBA,UAbyB;AAAA,MAczBI,YAdyB,gBAczBA,YAdyB;AAAA,MAezBC,aAfyB,gBAezBA,aAfyB;AAAA,MAgBzBC,gBAhByB,gBAgBzBA,gBAhByB;;AAgC7B,sBACI,QAAC,YAAD;AAAA,4BACI,+CAASA,gBAAgB,EAAzB;AAAA,6BACI,mCAAWD,aAAa,CAAC;AACrBE,QAAAA,IAAI,EAAE,QADe;AAErBC,QAAAA,WAAW,EAAE,mCAFQ;AAGrBC,QAAAA,EAAE,EAAE,QAHiB;AAIrBC,QAAAA,SAAS,EAAE;AAJU,OAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,QAAD,kCAAcN,YAAY,EAA1B;AAAA,gBACKR,KAAK,CAACe,GAAN,CAAU,UAACC,IAAD;AAAA,4BACP,QAAC,YAAD;AAAA,oBAAeA,IAAI,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,iBADO;AAAA,OAAV;AADL;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAjDuBzB,M;UACwBH,Y,EAgBxCJ,W;;;KAjBgBO,M","sourcesContent":["import React from 'react'\r\nimport gql from 'graphql-tag';\r\nimport { resetIdCounter, useCombobox } from 'downshift';\r\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport debounce from 'lodash.debounce';\r\n\r\nconst SEARCH_PRODUCTS_QUERY = gql`\r\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\r\n        searchTerms: allProducts(\r\n            where: {\r\n                OR: [\r\n                    {name_contains_i: $searchTerm}\r\n                    {description_contains_i: $searchTerm}\r\n                    {author_contains_i: $searchTerm}\r\n                ]\r\n            }\r\n        ) {\r\n            id\r\n            name\r\n            author\r\n            photo {\r\n                image {\r\n                    publicUrlTransformed\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function Search() {\r\n    const [findItems, {loading, data, error}] = useLazyQuery(\r\n        SEARCH_PRODUCTS_QUERY,\r\n        {\r\n            fetchPolicy: 'no-cache',\r\n        }\r\n    );\r\n\r\n    console.log(data);\r\n    const items = data?.searchTerms || [];\r\n    const findItemsButChill = debounce(findItems, 350)\r\n    resetIdCounter();\r\n    const { \r\n        inputValue, \r\n        getMenuProps, \r\n        getInputProps, \r\n        getComboboxProps \r\n    } = useCombobox({\r\n        items: [],\r\n        onInputValueChange({ inputValue }) {\r\n            console.log('Input changed');\r\n            findItemsButChill({\r\n                variables: {\r\n                    searchTerm: inputValue,\r\n                }\r\n            });\r\n        },\r\n        onSelectedItemChange() {\r\n            console.log('Selected Item change!')\r\n        }\r\n    });\r\n\r\n    return (\r\n        <SearchStyles>\r\n            <div {...getComboboxProps()}>\r\n                <input {...getInputProps({\r\n                    type: 'search',\r\n                    placeholder: 'Search for a book title or age...',\r\n                    id: 'search',\r\n                    className: 'loading',\r\n                })} />\r\n            </div>\r\n            <DropDown {...getMenuProps()}>\r\n                {items.map((item) => (\r\n                    <DropDownItem>{item.name}</DropDownItem>\r\n                ))}\r\n            </DropDown>\r\n        </SearchStyles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}