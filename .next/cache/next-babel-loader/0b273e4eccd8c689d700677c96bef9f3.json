{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Checkout.js\";\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { CURRENT_USER_QUERY, useUser } from './User';\nimport { useRouter } from 'next/dist/client/router';\nimport { useCart } from '../lib/cartState';\nimport useForm from '../lib/useForm';\nimport emailjs from 'emailjs-com';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"yxfk2z-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\n        checkout(token: $token) {\n            id\n            charge\n            total\n            items {\n                id\n                name\n            }\n        }\n    }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const form = useRef();\n  const {\n    0: status,\n    1: setStatus\n  } = useState(undefined);\n  const {\n    inputs,\n    handleChange\n  } = useForm({\n    email: '',\n    name: ''\n  });\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const router = useRouter();\n  const elements = useElements();\n  const {\n    closeCart\n  } = useCart();\n  const [checkout, {\n    error: graphQLError\n  }] = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n  const user = useUser(); // console.log(user);\n\n  async function handleSubmit(e) {\n    //1. Stop the form from submitting and turn the loader one\n    e.preventDefault();\n    emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz').then(result => {\n      console.log(result.text);\n      setStatus({\n        type: 'result'\n      });\n    }, error => {\n      console.log(error.text);\n      setStatus({\n        type: 'error'\n      });\n    });\n    setLoading(true);\n    console.log('We gotta do some work...'); //2. Start the page transition\n\n    nProgress.start(); //3. Create the payment method via stripe\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod); //4. Handle any errors from stripe (Token comes back here if successful)\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return; //stops the checkout from happening\n    } //5. Send the token from step 3 to our keystone server, via a custom mutation!\n\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    });\n    console.log(`Finished with the order!!`);\n    console.log(order); //6. Change the page to vie the order\n\n    router.push({\n      pathname: `/order/[id]`,\n      query: {\n        id: order.data.checkout.id\n      }\n    }); //7. Close the cart \n\n    closeCart(); //8. Turn the loader off\n\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    ref: form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      name: \"email\",\n      placeholder: \"Your Email Address\",\n      value: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your Name\",\n      value: user.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: graphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"buyIt\",\n      className: \"btn btn-success checkout\",\n      type: \"submit\",\n      children: [\"Buy Now \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faChevronRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 91\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Checkout.js"],"names":["React","useRef","useState","styled","CardElement","Elements","useElements","useStripe","loadStripe","FontAwesomeIcon","faChevronRight","nProgress","gql","useMutation","CURRENT_USER_QUERY","useUser","useRouter","useCart","useForm","emailjs","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","status","setStatus","undefined","inputs","handleChange","email","name","error","setError","loading","setLoading","stripe","router","elements","closeCart","checkout","graphQLError","refetchQueries","query","user","handleSubmit","e","preventDefault","sendForm","current","then","result","console","log","text","type","start","paymentMethod","createPaymentMethod","card","getElement","done","order","variables","token","id","push","pathname","data","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    CardElement,\r\n    Elements,\r\n    useElements,\r\n    useStripe,\r\n  } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faChevronRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport nProgress from 'nprogress';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport { CURRENT_USER_QUERY, useUser } from './User';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport { useCart } from '../lib/cartState';\r\nimport useForm from '../lib/useForm';\r\nimport emailjs from 'emailjs-com';\r\n\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n    box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n    border: 1px solid rgba(0, 0, 0, 0.06);\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\r\n        checkout(token: $token) {\r\n            id\r\n            charge\r\n            total\r\n            items {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n\r\n    const form = useRef();\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    const { inputs, handleChange } = useForm({\r\n        email: '',\r\n        name: '',\r\n    });\r\n\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const router = useRouter();\r\n    const elements = useElements();\r\n    const { closeCart } = useCart();\r\n    const [checkout, {error: graphQLError}] = useMutation(\r\n        CREATE_ORDER_MUTATION,\r\n        {\r\n            refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n        }\r\n    );\r\n\r\n    const user = useUser();\r\n\t// console.log(user);\r\n\r\n    async function handleSubmit(e) {\r\n        //1. Stop the form from submitting and turn the loader one\r\n        e.preventDefault();\r\n\r\n        emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz')\r\n        .then((result) => {\r\n            console.log(result.text);\r\n            setStatus({type: 'result'});\r\n        }, (error) => {\r\n            console.log(error.text);\r\n            setStatus({type: 'error'})\r\n        });\r\n\r\n        setLoading(true);\r\n        console.log('We gotta do some work...');\r\n        //2. Start the page transition\r\n        nProgress.start();\r\n        //3. Create the payment method via stripe\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement),\r\n        });\r\n        console.log(paymentMethod)\r\n        //4. Handle any errors from stripe (Token comes back here if successful)\r\n        if (error) {\r\n            setError(error);\r\n            nProgress.done();\r\n            return; //stops the checkout from happening\r\n        }\r\n        //5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n        const order = await checkout({\r\n            variables: {\r\n                token: paymentMethod.id\r\n            },\r\n        });\r\n        console.log(`Finished with the order!!`);\r\n        console.log(order);\r\n        //6. Change the page to vie the order\r\n        router.push({\r\n            pathname: `/order/[id]`,\r\n            query: { id: order.data.checkout.id },\r\n        });\r\n        //7. Close the cart \r\n        closeCart()\r\n\r\n        //8. Turn the loader off\r\n        setLoading(false);\r\n        nProgress.done();\r\n    }\r\n\r\n    return (\r\n        <CheckoutFormStyles ref={form} onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"hidden\" \r\n                name=\"email\" \r\n                placeholder=\"Your Email Address\" \r\n                value={user.email}\r\n            />\r\n            <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                placeholder=\"Your Name\" \r\n                value={user.name}\r\n                onChange={handleChange}\r\n            />\r\n            {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n            {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\r\n            <CardElement />\r\n            <button id=\"buyIt\" className=\"btn btn-success checkout\" type=\"submit\">Buy Now <FontAwesomeIcon icon={faChevronRight} /></button>\r\n        </CheckoutFormStyles>\r\n    );\r\n}\r\n\r\nfunction Checkout() {\r\n    return (\r\n        <Elements stripe={stripeLib}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport {Checkout};"]},"metadata":{},"sourceType":"module"}