{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\lib\\\\cartState.js\";\nimport { createContext, useContext, useState } from 'react';\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({\n  children\n}) {\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer!\n  // Closed cart by default\n  const {\n    0: cartOpen,\n    1: setCartOpen\n  } = useState(false);\n  const {\n    0: toggle,\n    1: setToggle\n  } = useState(false);\n\n  function toggleCart() {\n    setCartOpen(!cartOpen);\n  }\n\n  function closeCart() {\n    setCartOpen(false);\n  }\n\n  function openCart() {\n    setCartOpen(true);\n  }\n\n  function handleToggle() {\n    setToggle(!toggle);\n    setCartOpen(!cartOpen);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen,\n      toggle,\n      setCartOpen,\n      toggleCart,\n      closeCart,\n      openCart,\n      handleToggle\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\nfunction useCart() {\n  // We use a consumer here to access the local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/lib/cartState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","toggle","setToggle","toggleCart","closeCart","openCart","handleToggle","useCart","all"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,MAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,MAAMI,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAyC;AACvC;AAEA;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,KAAD,CAApC;;AAEA,WAASU,UAAT,GAAsB;AACpBH,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,WAASK,SAAT,GAAqB;AACnBJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,WAASK,QAAT,GAAoB;AAClBL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,WAASM,YAAT,GAAyB;AACvBJ,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,sBACE,QAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,QADK;AAELE,MAAAA,MAFK;AAGLD,MAAAA,WAHK;AAILG,MAAAA,UAJK;AAKLC,MAAAA,SALK;AAMLC,MAAAA,QANK;AAOLC,MAAAA;AAPK,KADT;AAAA,cAWGR;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,C,CAED;;;AACA,SAASS,OAAT,GAAmB;AACjB;AACA,QAAMC,GAAG,GAAGhB,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOc,GAAP;AACD;;AACD,SAASX,iBAAT,EAA4BU,OAA5B","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst LocalStateContext = createContext();\r\nconst LocalStateProvider = LocalStateContext.Provider;\r\n\r\nfunction CartStateProvider({ children }) {\r\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer!\r\n\r\n  // Closed cart by default\r\n  const [cartOpen, setCartOpen] = useState(false);\r\n  const [toggle, setToggle] = useState(false)\r\n\r\n  function toggleCart() {\r\n    setCartOpen(!cartOpen);\r\n  }\r\n\r\n  function closeCart() {\r\n    setCartOpen(false);\r\n  }\r\n\r\n  function openCart() {\r\n    setCartOpen(true);\r\n  }\r\n\r\n  function handleToggle () {\r\n    setToggle(!toggle)\r\n    setCartOpen(!cartOpen)\r\n  }\r\n\r\n  return (\r\n    <LocalStateProvider\r\n      value={{\r\n        cartOpen,\r\n        toggle,\r\n        setCartOpen,\r\n        toggleCart,\r\n        closeCart,\r\n        openCart,\r\n        handleToggle,\r\n      }}\r\n    >\r\n      {children}\r\n    </LocalStateProvider>\r\n  );\r\n}\r\n\r\n// make a custom hook for accessing the cart local state\r\nfunction useCart() {\r\n  // We use a consumer here to access the local state\r\n  const all = useContext(LocalStateContext);\r\n  return all;\r\n}\r\nexport { CartStateProvider, useCart };"]},"metadata":{},"sourceType":"module"}