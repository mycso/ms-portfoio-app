{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\CreateShippingMethod.js\";\nimport { useState } from \"react\";\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport styled from 'styled-components';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nimport Form from './styles/Form';\nimport DisplayError from './ErrorMessage';\nimport Router from 'next/router';\nimport { StarsRating } from \"stars-rating-react-hooks\";\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION ($shipping: ShippingRelateToOneInput!) {\n        checkoutToShipping(\n            data: {\n                shipping: $shipping\n            }\n        ) {\n            id\n            shipping {\n                id\n                type\n                amount\n                description\n            }\n        }\n    }\n`;\nexport default function createShippingMethod({\n  order\n}) {\n  const {\n    inputs,\n    handleChange\n  } = useForm({\n    shipping: {\n      type: '',\n      amount: '',\n      connect: {\n        id: order.id\n      }\n    }\n  });\n  const [createProductReview, {\n    data,\n    error,\n    loading\n  }] = useMutation(CREATE_PRODUCT_REVIEW_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: \"transcode_profile\",\n    id: \"transcode_profile\",\n    onChange: e => {\n      setShippingMethod(e.target.value);\n    },\n    value: shippingMethod.type,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"Select Shipping Method\",\n      children: \"Select Shipping Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), data === null || data === void 0 ? void 0 : data.allShippings.map(shippingMethod => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: shippingMethod.id,\n      children: [shippingMethod.type, \" - \", shippingMethod.amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 59\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/CreateShippingMethod.js"],"names":["useState","useMutation","useQuery","gql","useForm","styled","ALL_PRODUCTS_QUERY","Form","DisplayError","Router","StarsRating","CREATE_ORDER_MUTATION","createShippingMethod","order","inputs","handleChange","shipping","type","amount","connect","id","createProductReview","data","error","loading","CREATE_PRODUCT_REVIEW_MUTATION","variables","refetchQueries","query","e","setShippingMethod","target","value","shippingMethod","allShippings","map"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAEA,MAAMC,qBAAqB,GAAGR,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,eAAe,SAASS,oBAAT,CAA+B;AAACC,EAAAA;AAAD,CAA/B,EAAwC;AAEnD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA2BX,OAAO,CAAC;AACrCY,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAEP,KAAK,CAACO;AAAZ;AAHH;AAD2B,GAAD,CAAxC;AAQA,QAAM,CAACC,mBAAD,EAAsB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAtB,IAAkDvB,WAAW,CAC/DwB,8BAD+D,EAE/D;AACIC,IAAAA,SAAS,EAAEZ,MADf;AAEIa,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEtB;AAAT,KAAD;AAFpB,GAF+D,CAAnE;AAQA,sBACI;AACI,IAAA,IAAI,EAAC,mBADT;AAEI,IAAA,EAAE,EAAC,mBAFP;AAGI,IAAA,QAAQ,EAAGuB,CAAD,IAAO;AACbC,MAAAA,iBAAiB,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAjB;AACH,KALL;AAMI,IAAA,KAAK,EAAEC,cAAc,CAAChB,IAN1B;AAAA,4BAQQ;AAAQ,MAAA,KAAK,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARR,EASSK,IATT,aASSA,IATT,uBASSA,IAAI,CAAEY,YAAN,CAAmBC,GAAnB,CAAuBF,cAAc,iBAAI;AAAQ,MAAA,KAAK,EAAEA,cAAc,CAACb,EAA9B;AAAA,iBAAmCa,cAAc,CAAChB,IAAlD,SAA2DgB,cAAc,CAACf,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzC,CATT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH","sourcesContent":["import { useState } from \"react\";\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport useForm from '../lib/useForm';\r\nimport styled from 'styled-components';\r\nimport { ALL_PRODUCTS_QUERY } from './Products';\r\nimport Form from './styles/Form';\r\nimport DisplayError from './ErrorMessage';\r\nimport Router from 'next/router';\r\nimport { StarsRating } from \"stars-rating-react-hooks\";\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION ($shipping: ShippingRelateToOneInput!) {\r\n        checkoutToShipping(\r\n            data: {\r\n                shipping: $shipping\r\n            }\r\n        ) {\r\n            id\r\n            shipping {\r\n                id\r\n                type\r\n                amount\r\n                description\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function createShippingMethod ({order}) {\r\n\r\n    const { inputs, handleChange } = useForm({\r\n        shipping: {\r\n            type: '',\r\n            amount: '',\r\n            connect: { id: order.id }\r\n        },\r\n    });\r\n\r\n    const [createProductReview, { data, error, loading }] = useMutation(\r\n        CREATE_PRODUCT_REVIEW_MUTATION, \r\n        {\r\n            variables: inputs,\r\n            refetchQueries: [{ query: ALL_PRODUCTS_QUERY }],\r\n        }\r\n    );\r\n    \r\n    return (\r\n        <select\r\n            name=\"transcode_profile\"\r\n            id=\"transcode_profile\"\r\n            onChange={(e) => {\r\n                setShippingMethod(e.target.value);\r\n            }}\r\n            value={shippingMethod.type}\r\n            >\r\n                <option value=\"Select Shipping Method\">Select Shipping Method</option>\r\n                {data?.allShippings.map(shippingMethod => <option value={shippingMethod.id}>{shippingMethod.type} - {shippingMethod.amount}</option>)}\r\n        </select>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}