{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\pages\\\\order\\\\[id].js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport Head from 'next/head';\nimport formatMoney from '../../lib/formatMoney';\nconst SINGLE_ORDER_QUERY = gql`\n    query SINGLE_ORDER_QUERY($id: ID!) {\n        order: Order(where: { id: $id }) {\n            id\n            charge\n            total\n            user {\n                id\n            }\n            items {\n                id\n                name\n                description\n                price\n                quantity\n                photo { \n                    image {\n                        publicUrlTransformed\n                    }\n                }\n            }\n        }\n    }\n`;\nexport default function SingleOrderPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 22\n  }, this);\n  const {\n    order\n  } = data;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Stax of Stories \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), \"Hey Order page \", order.total, \" \", order.charge]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Charge:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.charge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMoney(order.total)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"ItemCount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.items.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photo.image.publicUrlTransformed,\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Oty: \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Each: \", formatMoney(item.price)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"SubTotal: \", formatMoney(item.price * item.quantity)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/pages/order/[id].js"],"names":["useQuery","gql","ErrorMessage","OrderStyles","Head","formatMoney","SINGLE_ORDER_QUERY","SingleOrderPage","query","data","error","loading","variables","id","order","total","charge","items","length","map","item","photo","image","publicUrlTransformed","title","name","quantity","price","description"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport OrderStyles from '../../components/styles/OrderStyles';\r\nimport Head from 'next/head';\r\nimport formatMoney from '../../lib/formatMoney';\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n    query SINGLE_ORDER_QUERY($id: ID!) {\r\n        order: Order(where: { id: $id }) {\r\n            id\r\n            charge\r\n            total\r\n            user {\r\n                id\r\n            }\r\n            items {\r\n                id\r\n                name\r\n                description\r\n                price\r\n                quantity\r\n                photo { \r\n                    image {\r\n                        publicUrlTransformed\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function SingleOrderPage({ query }) {\r\n    const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\r\n        variables: { id: query.id }\r\n    });\r\n    if(loading) return <p>Loading...</p>;\r\n    if(error) return <ErrorMessage error={error} />;\r\n    const { order } = data;\r\n    return (\r\n        <OrderStyles>\r\n            <Head>\r\n                <title>Stax of Stories {order.id}</title>\r\n                Hey Order page { order.total } { order.charge }\r\n            </Head>\r\n            <p>\r\n                <span>Order Id:</span>\r\n                <span>{order.id}</span>\r\n            </p>\r\n            <p>\r\n                <span>Charge:</span>\r\n                <span>{order.charge}</span>\r\n            </p>\r\n            <p>\r\n                <span>Order Total:</span>\r\n                <span>{formatMoney(order.total)}</span>\r\n            </p>\r\n            <p>\r\n                <span>ItemCount:</span>\r\n                <span>{order.items.length}</span>\r\n            </p>\r\n            <div className=\"items\">\r\n                {order.items.map((item) => (\r\n                    <div className=\"order-item\" key={item.id}>\r\n                        <img src={item.photo.image.publicUrlTransformed} alt={item.title} />\r\n                        <div className=\"item-details\">\r\n                            <h2>{item.name}</h2>\r\n                            <p>Oty: {item.quantity}</p>\r\n                            <p>Each: {formatMoney(item.price)}</p>\r\n                            <p>SubTotal: {formatMoney(item.price * item.quantity)}</p>\r\n                            <p>{item.description}</p>\r\n                        </div>\r\n                    </div>        \r\n                ))}\r\n            </div>\r\n        </OrderStyles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}