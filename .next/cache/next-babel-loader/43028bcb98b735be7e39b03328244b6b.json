{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\SomeProduct.js\";\nimport styled from 'styled-components';\nimport gql from \"graphql-tag\";\nimport { useQuery } from '@apollo/client';\nimport DisplayError from \"./ErrorMessage\";\nimport Product from \"./Product\";\nimport { perPage } from '../config';\nconst ItemsList = styled.div.withConfig({\n  displayName: \"SomeProduct__ItemsList\",\n  componentId: \"sc-14eb46l-0\"\n})([\"display:grid;grid-template-columns:auto auto auto auto;grid-gap:60px;max-width:\", \";margin:0 auto;@media (max-width:830px){grid-template-columns:1fr 1fr;grid-gap:0%;a{font-size:1.2rem;}}@media (max-width:500px){grid-template-columns:1fr;grid-gap:0%;}\"], props => props.theme.maxWidth);\nexport const ALL_PRODUCTS_QUERY = gql`\n    query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n        allProducts(first: $first, skip: $skip){\n            id\n            name\n            price\n            ageRange\n            author\n            inStock\n            photo {\n                id\n                image {\n                publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nexport default function SomeProduct({\n  page\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ItemsList, {\n      children: data === null || data === void 0 ? void 0 : data.allProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/SomeProduct.js"],"names":["styled","gql","useQuery","DisplayError","Product","perPage","ItemsList","div","props","theme","maxWidth","ALL_PRODUCTS_QUERY","SomeProduct","page","data","loading","error","variables","skip","first","allProducts","map","product","id"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,mQAIDC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QAJpB,CAAf;AAmBA,OAAO,MAAMC,kBAAkB,GAAGV,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBO;AAmBP,eAAe,SAASW,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAA+B;AAE1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2Bd,QAAQ,CACpCS,kBADoC,EAChB;AACjBM,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEL,IAAI,GAAGR,OAAP,GAAiBA,OADhB;AAEPc,MAAAA,KAAK,EAAEd;AAFA;AADM,GADgB,CAAzC;AAQA,MAAIU,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBAEI;AAAA,2BACI,QAAC,SAAD;AAAA,gBACKF,IADL,aACKA,IADL,uBACKA,IAAI,CAAEM,WAAN,CAAkBC,GAAlB,CAAuBC,OAAD,iBACnB,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA;AAAlB,SAAgCA,OAAO,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAUH","sourcesContent":["import styled from 'styled-components';\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from '@apollo/client';\r\nimport DisplayError from \"./ErrorMessage\";\r\nimport Product from \"./Product\";\r\nimport { perPage } from '../config';\r\n\r\nconst ItemsList = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: auto auto auto auto;\r\n\tgrid-gap: 60px;\r\n\tmax-width: ${props => props.theme.maxWidth};\r\n\tmargin: 0 auto;\r\n\t@media (max-width: 830px) {\r\n\t\tgrid-template-columns: 1fr 1fr;\r\n\t\tgrid-gap: 0%;\r\n\t\ta {\r\n    \t\tfont-size: 1.2rem;\r\n\t\t}\r\n\t}\r\n\t@media (max-width: 500px) {\r\n\t\tgrid-template-columns: 1fr;\r\n\t\tgrid-gap: 0%;\r\n\t}\r\n`;\r\n\r\nexport const ALL_PRODUCTS_QUERY = gql`\r\n    query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\r\n        allProducts(first: $first, skip: $skip){\r\n            id\r\n            name\r\n            price\r\n            ageRange\r\n            author\r\n            inStock\r\n            photo {\r\n                id\r\n                image {\r\n                publicUrlTransformed\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function SomeProduct({ page }) {\r\n\r\n    const { data, loading, error } = useQuery\r\n        (ALL_PRODUCTS_QUERY, {\r\n            variables: {\r\n                skip: page * perPage - perPage,\r\n                first: perPage,\r\n            },\r\n        });\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <DisplayError error={error} />;\r\n    \r\n    return (\r\n\r\n        <div>\r\n            <ItemsList>\r\n                {data?.allProducts.map((product) => (\r\n                    <Product product={product} key={product.id} />\r\n                ))}\r\n            </ItemsList>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}