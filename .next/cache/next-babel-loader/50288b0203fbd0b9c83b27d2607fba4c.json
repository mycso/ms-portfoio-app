{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\\n        checkout(token: $token) {\\n            id\\n            charge\\n            total\\n            items {\\n                id\\n                name\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { CURRENT_USER_QUERY } from './User';\nimport { useRouter } from 'next/dist/client/router';\nimport { useCart } from '../lib/cartState';\nimport emailjs from 'emailjs-com';\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"yxfk2z-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var form = useRef();\n\n  var _useState = useState(undefined),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var stripe = useStripe();\n  var router = useRouter();\n  var elements = useElements();\n\n  var _useCart = useCart(),\n      closeCart = _useCart.closeCart;\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      graphQLError = _useMutation2[1].error;\n\n  var user = useUser();\n  console.log(user);\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod, order;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //1. Stop the form from submitting and turn the loader one\n              e.preventDefault();\n              emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz').then(function (result) {\n                console.log(result.text);\n                setStatus({\n                  type: 'result'\n                });\n              }, function (error) {\n                console.log(error.text);\n                setStatus({\n                  type: 'error'\n                });\n              });\n              setLoading(true);\n              console.log('We gotta do some work...'); //2. Start the page transition\n\n              nProgress.start(); //3. Create the payment method via stripe\n\n              _context.next = 7;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n              });\n\n            case 7:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod); //4. Handle any errors from stripe (Token comes back here if successful)\n\n              if (!error) {\n                _context.next = 15;\n                break;\n              }\n\n              setError(error);\n              nProgress.done();\n              return _context.abrupt(\"return\");\n\n            case 15:\n              _context.next = 17;\n              return checkout({\n                variables: {\n                  token: paymentMethod.id\n                }\n              });\n\n            case 17:\n              order = _context.sent;\n              console.log(\"Finished with the order!!\");\n              console.log(order); //6. Change the page to vie the order\n\n              router.push({\n                pathname: \"/order/[id]\",\n                query: {\n                  id: order.data.checkout.id\n                }\n              }); //7. Close the cart \n\n              closeCart(); //8. Turn the loader off\n\n              setLoading(false);\n              nProgress.done();\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    ref: form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      name: \"email\",\n      placeholder: \"Your Email Address\",\n      value: inputs.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: graphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"buyIt\",\n      className: \"btn btn-success checkout\",\n      type: \"submit\",\n      children: [\"Buy Now \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faChevronRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 91\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckoutForm, \"awQ6aaAyJk2beucYES/s3Zrqiq0=\", true, function () {\n  return [useStripe, useRouter, useElements, useCart, useMutation];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Checkout.js"],"names":["React","useRef","useState","styled","CardElement","Elements","useElements","useStripe","loadStripe","FontAwesomeIcon","faChevronRight","nProgress","gql","useMutation","CURRENT_USER_QUERY","useRouter","useCart","emailjs","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","undefined","status","setStatus","error","setError","loading","setLoading","stripe","router","elements","closeCart","refetchQueries","query","checkout","graphQLError","user","useUser","console","log","handleSubmit","e","preventDefault","sendForm","current","then","result","text","type","start","createPaymentMethod","card","getElement","paymentMethod","done","variables","token","id","order","push","pathname","data","inputs","email","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    CardElement,\r\n    Elements,\r\n    useElements,\r\n    useStripe,\r\n  } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faChevronRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport nProgress from 'nprogress';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport { CURRENT_USER_QUERY } from './User';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport { useCart } from '../lib/cartState';\r\nimport emailjs from 'emailjs-com';\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n    box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n    border: 1px solid rgba(0, 0, 0, 0.06);\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\r\n        checkout(token: $token) {\r\n            id\r\n            charge\r\n            total\r\n            items {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n\r\n    const form = useRef();\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const router = useRouter();\r\n    const elements = useElements();\r\n    const { closeCart } = useCart();\r\n    const [checkout, {error: graphQLError}] = useMutation(\r\n        CREATE_ORDER_MUTATION,\r\n        {\r\n            refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n        }\r\n    );\r\n\r\n    const user = useUser();\r\n\tconsole.log(user);\r\n\r\n    async function handleSubmit(e) {\r\n        //1. Stop the form from submitting and turn the loader one\r\n        e.preventDefault();\r\n\r\n        emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz')\r\n        .then((result) => {\r\n            console.log(result.text);\r\n            setStatus({type: 'result'});\r\n        }, (error) => {\r\n            console.log(error.text);\r\n            setStatus({type: 'error'})\r\n        });\r\n\r\n        setLoading(true);\r\n        console.log('We gotta do some work...');\r\n        //2. Start the page transition\r\n        nProgress.start();\r\n        //3. Create the payment method via stripe\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement),\r\n        });\r\n        console.log(paymentMethod)\r\n        //4. Handle any errors from stripe (Token comes back here if successful)\r\n        if (error) {\r\n            setError(error);\r\n            nProgress.done();\r\n            return; //stops the checkout from happening\r\n        }\r\n        //5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n        const order = await checkout({\r\n            variables: {\r\n                token: paymentMethod.id\r\n            },\r\n        });\r\n        console.log(`Finished with the order!!`);\r\n        console.log(order);\r\n        //6. Change the page to vie the order\r\n        router.push({\r\n            pathname: `/order/[id]`,\r\n            query: { id: order.data.checkout.id },\r\n        });\r\n        //7. Close the cart \r\n        closeCart()\r\n\r\n        //8. Turn the loader off\r\n        setLoading(false);\r\n        nProgress.done();\r\n    }\r\n\r\n    return (\r\n        <CheckoutFormStyles ref={form} onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"hidden\" \r\n                name=\"email\" \r\n                placeholder=\"Your Email Address\" \r\n                value={inputs.email}\r\n            />\r\n            {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n            {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\r\n            <CardElement />\r\n            <button id=\"buyIt\" className=\"btn btn-success checkout\" type=\"submit\">Buy Now <FontAwesomeIcon icon={faChevronRight} /></button>\r\n        </CheckoutFormStyles>\r\n    );\r\n}\r\n\r\nfunction Checkout() {\r\n    return (\r\n        <Elements stripe={stripeLib}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport {Checkout};"]},"metadata":{},"sourceType":"module"}