{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\CreateShippingMethod.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CREATE_ORDER_MUTATION ($shipping: ShippingRelateToOneInput!) {\\n        checkoutToShipping(\\n            data: {\\n                shipping: $shipping\\n            }\\n        ) {\\n            id\\n            shipping {\\n                id\\n                type\\n                amount\\n                description\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SHIPPING_QUERY {\\n        allShippings {\\n            id\\n            type\\n            amount\\n            description\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from \"react\";\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport styled from 'styled-components';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nvar SHIPPING_QUERY = gql(_templateObject());\nvar CREATE_ORDER_MUTATION = gql(_templateObject2());\nexport default function createShippingMethod(_ref) {\n  _s();\n\n  var _this = this;\n\n  var order = _ref.order;\n\n  var _useForm = useForm({\n    shipping: {\n      type: '',\n      amount: '',\n      connect: {\n        id: order.id\n      }\n    }\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange;\n\n  function onChangeValue(_x) {\n    return _onChangeValue.apply(this, arguments);\n  }\n\n  function _onChangeValue() {\n    _onChangeValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var order;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setShippingMethod(e.target.value);\n              _context.next = 3;\n              return checkoutToShipping({\n                variables: {\n                  shipping: {\n                    type: inputs.type,\n                    amount: inputs.amount,\n                    connect: {\n                      id: order.id\n                    }\n                  }\n                }\n              });\n\n            case 3:\n              order = _context.sent;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onChangeValue.apply(this, arguments);\n  }\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkoutToShipping = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      error = _useMutation2$.error,\n      loading = _useMutation2$.loading;\n\n  var _useQuery = useQuery(SHIPPING_QUERY),\n      AllShipping = _useQuery.AllShipping;\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: \"transcode_profile\",\n    id: \"transcode_profile\",\n    onChange: onChangeValue,\n    value: shippingMethod.type,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"Select Shipping Method\",\n      children: \"Select Shipping Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), data === null || data === void 0 ? void 0 : data.allShippings.map(function (shippingMethod) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: shippingMethod.id,\n        children: [shippingMethod.type, \" - \", shippingMethod.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 59\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(createShippingMethod, \"0fLNL1xks7FZZEjYeIY7kKSxaHQ=\", false, function () {\n  return [useForm, useMutation, useQuery];\n});","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/CreateShippingMethod.js"],"names":["useState","useMutation","useQuery","gql","useForm","styled","ALL_PRODUCTS_QUERY","SHIPPING_QUERY","CREATE_ORDER_MUTATION","createShippingMethod","order","shipping","type","amount","connect","id","inputs","handleChange","onChangeValue","e","setShippingMethod","target","value","checkoutToShipping","variables","refetchQueries","query","data","error","loading","AllShipping","shippingMethod","allShippings","map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,kBAAT,QAAmC,YAAnC;AAEA,IAAMC,cAAc,GAAGJ,GAAH,mBAApB;AAWA,IAAMK,qBAAqB,GAAGL,GAAH,oBAA3B;AAkBA,eAAe,SAASM,oBAAT,OAAwC;AAAA;;AAAA;;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AAAA,iBAElBN,OAAO,CAAC;AACrCO,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAEL,KAAK,CAACK;AAAZ;AAHH;AAD2B,GAAD,CAFW;AAAA,MAE3CC,MAF2C,YAE3CA,MAF2C;AAAA,MAEnCC,YAFmC,YAEnCA,YAFmC;;AAAA,WAUpCC,aAVoC;AAAA;AAAA;;AAAA;AAAA,8EAUnD,iBAA6BC,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,cAAAA,iBAAiB,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAjB;AAFJ;AAAA,qBAIwBC,kBAAkB,CAAC;AACnCC,gBAAAA,SAAS,EAAE;AACPb,kBAAAA,QAAQ,EAAE;AACNC,oBAAAA,IAAI,EAAEI,MAAM,CAACJ,IADP;AAENC,oBAAAA,MAAM,EAAEG,MAAM,CAACH,MAFT;AAGNC,oBAAAA,OAAO,EAAE;AAAEC,sBAAAA,EAAE,EAAEL,KAAK,CAACK;AAAZ;AAHH;AADH;AADwB,eAAD,CAJ1C;;AAAA;AAIUL,cAAAA,KAJV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVmD;AAAA;AAAA;;AAAA,qBAyBIT,WAAW,CAC9DO,qBAD8D,EAE9D;AACIgB,IAAAA,SAAS,EAAER,MADf;AAEIS,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEpB;AAAT,KAAD;AAFpB,GAF8D,CAzBf;AAAA;AAAA,MAyB5CiB,kBAzB4C;AAAA;AAAA,MAyBtBI,IAzBsB,kBAyBtBA,IAzBsB;AAAA,MAyBhBC,KAzBgB,kBAyBhBA,KAzBgB;AAAA,MAyBTC,OAzBS,kBAyBTA,OAzBS;;AAAA,kBAiC3B3B,QAAQ,CAACK,cAAD,CAjCmB;AAAA,MAiC3CuB,WAjC2C,aAiC3CA,WAjC2C;;AAmCnD,sBACI;AACI,IAAA,IAAI,EAAC,mBADT;AAEI,IAAA,EAAE,EAAC,mBAFP;AAGI,IAAA,QAAQ,EAAEZ,aAHd;AAII,IAAA,KAAK,EAAEa,cAAc,CAACnB,IAJ1B;AAAA,4BAMQ;AAAQ,MAAA,KAAK,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANR,EAOSe,IAPT,aAOSA,IAPT,uBAOSA,IAAI,CAAEK,YAAN,CAAmBC,GAAnB,CAAuB,UAAAF,cAAc;AAAA,0BAAI;AAAQ,QAAA,KAAK,EAAEA,cAAc,CAAChB,EAA9B;AAAA,mBAAmCgB,cAAc,CAACnB,IAAlD,SAA2DmB,cAAc,CAAClB,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,eAAJ;AAAA,KAArC,CAPT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA9CuBJ,oB;UAEaL,O,EAuBsBH,W,EAQ/BC,Q","sourcesContent":["import { useState } from \"react\";\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport useForm from '../lib/useForm';\r\nimport styled from 'styled-components';\r\nimport { ALL_PRODUCTS_QUERY } from './Products';\r\n\r\nconst SHIPPING_QUERY = gql`\r\n    query SHIPPING_QUERY {\r\n        allShippings {\r\n            id\r\n            type\r\n            amount\r\n            description\r\n        }\r\n    }\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION ($shipping: ShippingRelateToOneInput!) {\r\n        checkoutToShipping(\r\n            data: {\r\n                shipping: $shipping\r\n            }\r\n        ) {\r\n            id\r\n            shipping {\r\n                id\r\n                type\r\n                amount\r\n                description\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function createShippingMethod ({order}) {\r\n\r\n    const { inputs, handleChange } = useForm({\r\n        shipping: {\r\n            type: '',\r\n            amount: '',\r\n            connect: { id: order.id }\r\n        },\r\n    });\r\n    \r\n    async function onChangeValue(e) {\r\n\r\n        setShippingMethod(e.target.value);\r\n\r\n        const order = await checkoutToShipping({\r\n            variables: {\r\n                shipping: {\r\n                    type: inputs.type,\r\n                    amount: inputs.amount,\r\n                    connect: { id: order.id }\r\n                },  \r\n            },\r\n        });\r\n    }\r\n\r\n    const [checkoutToShipping, { data, error, loading }] = useMutation(\r\n        CREATE_ORDER_MUTATION, \r\n        {\r\n            variables: inputs,\r\n            refetchQueries: [{ query: ALL_PRODUCTS_QUERY }],\r\n        }\r\n    );\r\n\r\n    const { AllShipping } = useQuery(SHIPPING_QUERY);\r\n    \r\n    return (\r\n        <select\r\n            name=\"transcode_profile\"\r\n            id=\"transcode_profile\"\r\n            onChange={onChangeValue}\r\n            value={shippingMethod.type}\r\n            >\r\n                <option value=\"Select Shipping Method\">Select Shipping Method</option>\r\n                {data?.allShippings.map(shippingMethod => <option value={shippingMethod.id}>{shippingMethod.type} - {shippingMethod.amount}</option>)}\r\n        </select>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}