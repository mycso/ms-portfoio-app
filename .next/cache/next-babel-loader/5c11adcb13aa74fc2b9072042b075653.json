{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Checkout.js\";\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { CURRENT_USER_QUERY, useUser } from './User';\nimport { useRouter } from 'next/dist/client/router';\nimport { useCart } from '../lib/cartState';\nimport useForm from '../lib/useForm';\nimport emailjs from 'emailjs-com';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"yxfk2z-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;grid-gap:1rem;height:398px;input{font-size:15px;margin-right:5px;width:100%;}\"]);\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\n        checkout(token: $token) {\n            id\n            charge\n            total\n            items {\n                id\n                name\n            }\n        }\n    }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const form = useRef();\n  const {\n    0: status,\n    1: setStatus\n  } = useState(undefined);\n  const user = useUser(); // const { inputs, handleChange } = useForm({\n  //     email: '',\n  //     name: '',\n  // });\n\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const router = useRouter();\n  const elements = useElements();\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState(user.email);\n  const {\n    0: postal,\n    1: setPostal\n  } = useState('');\n  const {\n    0: city,\n    1: setCity\n  } = useState('');\n  const {\n    0: country,\n    1: setCountry\n  } = useState('');\n  const {\n    0: line1,\n    1: setLine1\n  } = useState('');\n  const {\n    0: line2,\n    1: setLine2\n  } = useState('');\n  const {\n    0: state,\n    1: setState\n  } = useState('');\n  const {\n    closeCart\n  } = useCart();\n  const [checkout, {\n    error: graphQLError\n  }] = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  async function handleSubmit(e) {\n    //1. Stop the form from submitting and turn the loader one\n    e.preventDefault();\n    emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz').then(result => {\n      console.log(result.text);\n      setStatus({\n        type: 'result'\n      });\n    }, error => {\n      console.log(error.text);\n      setStatus({\n        type: 'error'\n      });\n    });\n    setLoading(true);\n    console.log('We gotta do some work...'); //2. Start the page transition\n\n    nProgress.start(); //3. Create the payment method via stripe\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: {\n        email,\n        name,\n        address: {\n          city: city,\n          country: country,\n          line1: line1,\n          line2: line2,\n          postal_code: postal,\n          state: state\n        }\n      }\n    });\n    console.log(paymentMethod); //4. Handle any errors from stripe (Token comes back here if successful)\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return; //stops the checkout from happening\n    } //5. Send the token from step 3 to our keystone server, via a custom mutation!\n\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    });\n    console.log(`Finished with the order!!`);\n    console.log(order); //6. Change the page to vie the order\n\n    router.push({\n      pathname: `/order/[id]`,\n      query: {\n        id: order.data.checkout.id\n      }\n    }); //7. Close the cart \n\n    closeCart(); //8. Turn the loader off\n\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    ref: form,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"hidden\",\n        required: true,\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), \"Billing Details\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          required: true,\n          placeholder: \"Full Name\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"line1\",\n          required: true,\n          placeholder: \"Address Line1\",\n          value: line1,\n          onChange: e => {\n            setLine1(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"line2\",\n          placeholder: \"Address Line2\",\n          value: line2,\n          onChange: e => {\n            setLine2(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"city\",\n          required: true,\n          placeholder: \"City\",\n          value: city,\n          onChange: e => {\n            setCity(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"country\",\n          required: true,\n          placeholder: \"Country\",\n          value: country,\n          onChange: e => {\n            setCountry(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"state\",\n          required: true,\n          placeholder: \"State/County\",\n          value: state,\n          onChange: e => {\n            setState(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postal\",\n          required: true,\n          placeholder: \"e.g. E8 2DA\",\n          value: postal,\n          onChange: e => {\n            setPostal(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 12\n        },\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 27\n      }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 12\n        },\n        children: graphQLError.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"buyIt\",\n        className: \"btn btn-success checkout\",\n        type: \"submit\",\n        children: [\"Buy Now \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faChevronRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 95\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 9\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Checkout.js"],"names":["React","useRef","useState","styled","CardElement","Elements","useElements","useStripe","loadStripe","FontAwesomeIcon","faChevronRight","nProgress","gql","useMutation","CURRENT_USER_QUERY","useUser","useRouter","useCart","useForm","emailjs","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","status","setStatus","undefined","user","error","setError","loading","setLoading","stripe","router","elements","name","setName","email","setEmail","postal","setPostal","city","setCity","country","setCountry","line1","setLine1","line2","setLine2","state","setState","closeCart","checkout","graphQLError","refetchQueries","query","handleSubmit","e","preventDefault","sendForm","current","then","result","console","log","text","type","start","paymentMethod","createPaymentMethod","card","getElement","billing_details","address","postal_code","done","order","variables","token","id","push","pathname","data","target","value","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    CardElement,\r\n    Elements,\r\n    useElements,\r\n    useStripe,\r\n  } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faChevronRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport nProgress from 'nprogress';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport { CURRENT_USER_QUERY, useUser } from './User';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport { useCart } from '../lib/cartState';\r\nimport useForm from '../lib/useForm';\r\nimport emailjs from 'emailjs-com';\r\n\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n    box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n    border: 1px solid rgba(0, 0, 0, 0.06);\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    grid-gap: 1rem;\r\n    height: 398px;\r\n    \r\n    input {\r\n        font-size: 15px;\r\n        margin-right: 5px;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\r\n        checkout(token: $token) {\r\n            id\r\n            charge\r\n            total\r\n            items {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n\r\n    const form = useRef();\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    const user = useUser();\r\n\r\n    // const { inputs, handleChange } = useForm({\r\n    //     email: '',\r\n    //     name: '',\r\n    // });\r\n\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const router = useRouter();\r\n    const elements = useElements();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState(user.email);\r\n    const [postal, setPostal] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [line1, setLine1] = useState('');\r\n    const [line2, setLine2] = useState('');\r\n    const [state, setState] = useState('');\r\n\r\n\r\n    const { closeCart } = useCart();\r\n    const [checkout, {error: graphQLError}] = useMutation(\r\n        CREATE_ORDER_MUTATION,\r\n        {\r\n            refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n        }\r\n    );\r\n\r\n    async function handleSubmit(e) {\r\n        //1. Stop the form from submitting and turn the loader one\r\n        e.preventDefault();\r\n\r\n        emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz')\r\n        .then((result) => {\r\n            console.log(result.text);\r\n            setStatus({type: 'result'});\r\n        }, (error) => {\r\n            console.log(error.text);\r\n            setStatus({type: 'error'})\r\n        });\r\n\r\n        setLoading(true);\r\n        console.log('We gotta do some work...');\r\n        //2. Start the page transition\r\n        nProgress.start();\r\n        //3. Create the payment method via stripe\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement),\r\n            billing_details: {\r\n                email,\r\n                name,\r\n                address: {\r\n                    city: city,\r\n                    country: country,\r\n                    line1: line1,\r\n                    line2: line2,\r\n                    postal_code: postal,\r\n                    state: state\r\n                }\r\n            }\r\n        });\r\n        console.log(paymentMethod)\r\n        //4. Handle any errors from stripe (Token comes back here if successful)\r\n        if (error) {\r\n            setError(error);\r\n            nProgress.done();\r\n            return; //stops the checkout from happening\r\n        }\r\n        //5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n        const order = await checkout({\r\n            variables: {\r\n                token: paymentMethod.id\r\n            },\r\n        });\r\n        console.log(`Finished with the order!!`);\r\n        console.log(order);\r\n        //6. Change the page to vie the order\r\n        router.push({\r\n            pathname: `/order/[id]`,\r\n            query: { id: order.data.checkout.id },\r\n        });\r\n        //7. Close the cart \r\n        closeCart()\r\n\r\n        //8. Turn the loader off\r\n        setLoading(false);\r\n        nProgress.done();\r\n    }\r\n\r\n    return (\r\n        <CheckoutFormStyles ref={form} onSubmit={handleSubmit}>\r\n            <fieldset>\r\n                <input\r\n                    id=\"email\"\r\n                    type=\"hidden\"\r\n                    required\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                    }}\r\n                />\r\n\r\n                Billing Details\r\n                <div>\r\n                <input\r\n                    id=\"name\"\r\n                    required\r\n                    placeholder=\"Full Name\"\r\n                    value={name}\r\n                    onChange={(e) => {\r\n                    setName(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"line1\"\r\n                    required\r\n                    placeholder=\"Address Line1\"\r\n                    value={line1}\r\n                    onChange={(e) => {\r\n                    setLine1(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"line2\"\r\n                    placeholder=\"Address Line2\"\r\n                    value={line2}\r\n                    onChange={(e) => {\r\n                    setLine2(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"city\"\r\n                    required\r\n                    placeholder=\"City\"\r\n                    value={city}\r\n                    onChange={(e) => {\r\n                    setCity(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"country\"\r\n                    required\r\n                    placeholder=\"Country\"\r\n                    value={country}\r\n                    onChange={(e) => {\r\n                    setCountry(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"state\"\r\n                    required\r\n                    placeholder=\"State/County\"\r\n                    value={state}\r\n                    onChange={(e) => {\r\n                    setState(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"postal\"\r\n                    required\r\n                    placeholder=\"e.g. E8 2DA\"\r\n                    value={postal}\r\n                    onChange={(e) => {\r\n                    setPostal(e.target.value);\r\n                    }}\r\n                />\r\n                </div>\r\n                {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n                {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\r\n                <CardElement />\r\n                <button id=\"buyIt\" className=\"btn btn-success checkout\" type=\"submit\">Buy Now <FontAwesomeIcon icon={faChevronRight} /></button>\r\n            </fieldset>\r\n        </CheckoutFormStyles>\r\n    );\r\n}\r\n\r\nfunction Checkout() {\r\n    return (\r\n        <Elements stripe={stripeLib}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport {Checkout};"]},"metadata":{},"sourceType":"module"}