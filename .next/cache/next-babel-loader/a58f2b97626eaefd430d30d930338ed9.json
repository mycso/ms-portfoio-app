{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\\n        checkout(token: $token) {\\n            id\\n            charge\\n            total\\n            items {\\n                id\\n                name\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { CURRENT_USER_QUERY, useUser } from './User';\nimport { useRouter } from 'next/dist/client/router';\nimport { useCart } from '../lib/cartState';\nimport useForm from '../lib/useForm';\nimport emailjs from 'emailjs-com';\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"yxfk2z-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;overflow-y:scroll;height:398px;input{font-size:15px;grid-gap:20px;grid-template-columns:1fr 1fr 1fr 1fr;width:160px;margin-right:5px;}\"]);\n_c = CheckoutFormStyles;\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var form = useRef();\n\n  var _useState = useState(undefined),\n      status = _useState[0],\n      setStatus = _useState[1]; // const { inputs, handleChange } = useForm({\n  //     email: '',\n  //     name: '',\n  // });\n\n\n  var _useState2 = useState(),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var stripe = useStripe();\n  var router = useRouter();\n  var elements = useElements();\n\n  var _useState4 = useState(''),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      email = _useState5[0],\n      setEmail = _useState5[1];\n\n  var _useState6 = useState(''),\n      postal = _useState6[0],\n      setPostal = _useState6[1];\n\n  var _useState7 = useState(''),\n      city = _useState7[0],\n      setCity = _useState7[1];\n\n  var _useState8 = useState(''),\n      country = _useState8[0],\n      setCountry = _useState8[1];\n\n  var _useState9 = useState(''),\n      line1 = _useState9[0],\n      setLine1 = _useState9[1];\n\n  var _useState10 = useState(''),\n      line2 = _useState10[0],\n      setLine2 = _useState10[1];\n\n  var _useState11 = useState(''),\n      state = _useState11[0],\n      setState = _useState11[1];\n\n  var _useCart = useCart(),\n      closeCart = _useCart.closeCart;\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      graphQLError = _useMutation2[1].error;\n\n  var user = useUser(); // console.log(user);\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod, order;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //1. Stop the form from submitting and turn the loader one\n              e.preventDefault();\n              emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz').then(function (result) {\n                console.log(result.text);\n                setStatus({\n                  type: 'result'\n                });\n              }, function (error) {\n                console.log(error.text);\n                setStatus({\n                  type: 'error'\n                });\n              });\n              setLoading(true);\n              console.log('We gotta do some work...'); //2. Start the page transition\n\n              nProgress.start(); //3. Create the payment method via stripe\n\n              _context.next = 7;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement),\n                billing_details: {\n                  email: email,\n                  name: name,\n                  address: {\n                    city: city,\n                    country: country,\n                    line1: line1,\n                    line2: line2,\n                    postal_code: postal,\n                    state: state\n                  }\n                }\n              });\n\n            case 7:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod); //4. Handle any errors from stripe (Token comes back here if successful)\n\n              if (!error) {\n                _context.next = 15;\n                break;\n              }\n\n              setError(error);\n              nProgress.done();\n              return _context.abrupt(\"return\");\n\n            case 15:\n              _context.next = 17;\n              return checkout({\n                variables: {\n                  token: paymentMethod.id\n                }\n              });\n\n            case 17:\n              order = _context.sent;\n              console.log(\"Finished with the order!!\");\n              console.log(order); //6. Change the page to vie the order\n\n              router.push({\n                pathname: \"/order/[id]\",\n                query: {\n                  id: order.data.checkout.id\n                }\n              }); //7. Close the cart \n\n              closeCart(); //8. Turn the loader off\n\n              setLoading(false);\n              nProgress.done();\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    ref: form,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"hidden\",\n        required: true,\n        placeholder: \"Email\",\n        value: user.email,\n        onChange: function onChange(e) {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        required: true,\n        placeholder: \"Full Name\",\n        value: name,\n        onChange: function onChange(e) {\n          setName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"line1\",\n        required: true,\n        placeholder: \"Address Line1\",\n        value: line1,\n        onChange: function onChange(e) {\n          setLine1(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"line2\",\n        placeholder: \"Address Line2\",\n        value: line2,\n        onChange: function onChange(e) {\n          setLine2(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"city\",\n        required: true,\n        placeholder: \"City\",\n        value: city,\n        onChange: function onChange(e) {\n          setCity(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"country\",\n        required: true,\n        placeholder: \"Country\",\n        value: country,\n        onChange: function onChange(e) {\n          setCountry(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"state\",\n        required: true,\n        placeholder: \"State/County\",\n        value: state,\n        onChange: function onChange(e) {\n          setState(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"postal\",\n        required: true,\n        placeholder: \"e.g. E8 2DA\",\n        value: postal,\n        onChange: function onChange(e) {\n          setPostal(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 12\n        },\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 27\n      }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 12\n        },\n        children: graphQLError.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"buyIt\",\n        className: \"btn btn-success checkout\",\n        type: \"submit\",\n        children: [\"Buy Now \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faChevronRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 95\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckoutForm, \"Ed1hBr2ZGAPoHgSEAZdDsghHVv0=\", false, function () {\n  return [useStripe, useRouter, useElements, useCart, useMutation, useUser];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Checkout.js"],"names":["React","useRef","useState","styled","CardElement","Elements","useElements","useStripe","loadStripe","FontAwesomeIcon","faChevronRight","nProgress","gql","useMutation","CURRENT_USER_QUERY","useUser","useRouter","useCart","useForm","emailjs","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","undefined","status","setStatus","error","setError","loading","setLoading","stripe","router","elements","name","setName","email","setEmail","postal","setPostal","city","setCity","country","setCountry","line1","setLine1","line2","setLine2","state","setState","closeCart","refetchQueries","query","checkout","graphQLError","user","handleSubmit","e","preventDefault","sendForm","current","then","result","console","log","text","type","start","createPaymentMethod","card","getElement","billing_details","address","postal_code","paymentMethod","done","variables","token","id","order","push","pathname","data","target","value","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    CardElement,\r\n    Elements,\r\n    useElements,\r\n    useStripe,\r\n  } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faChevronRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport nProgress from 'nprogress';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport { CURRENT_USER_QUERY, useUser } from './User';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport { useCart } from '../lib/cartState';\r\nimport useForm from '../lib/useForm';\r\nimport emailjs from 'emailjs-com';\r\n\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n    box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n    border: 1px solid rgba(0, 0, 0, 0.06);\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n    overflow-y: scroll;\r\n    height: 398px;\r\n    \r\n    input {\r\n        font-size: 15px;\r\n        grid-gap: 20px;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        width: 160px;\r\n        margin-right: 5px;\r\n    }\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\r\n        checkout(token: $token) {\r\n            id\r\n            charge\r\n            total\r\n            items {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n\r\n    const form = useRef();\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    // const { inputs, handleChange } = useForm({\r\n    //     email: '',\r\n    //     name: '',\r\n    // });\r\n\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const router = useRouter();\r\n    const elements = useElements();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [postal, setPostal] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [line1, setLine1] = useState('');\r\n    const [line2, setLine2] = useState('');\r\n    const [state, setState] = useState('');\r\n\r\n\r\n    const { closeCart } = useCart();\r\n    const [checkout, {error: graphQLError}] = useMutation(\r\n        CREATE_ORDER_MUTATION,\r\n        {\r\n            refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n        }\r\n    );\r\n\r\n    const user = useUser();\r\n\t// console.log(user);\r\n\r\n    async function handleSubmit(e) {\r\n        //1. Stop the form from submitting and turn the loader one\r\n        e.preventDefault();\r\n\r\n        emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz')\r\n        .then((result) => {\r\n            console.log(result.text);\r\n            setStatus({type: 'result'});\r\n        }, (error) => {\r\n            console.log(error.text);\r\n            setStatus({type: 'error'})\r\n        });\r\n\r\n        setLoading(true);\r\n        console.log('We gotta do some work...');\r\n        //2. Start the page transition\r\n        nProgress.start();\r\n        //3. Create the payment method via stripe\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement),\r\n            billing_details: {\r\n                email,\r\n                name,\r\n                address: {\r\n                    city: city,\r\n                    country: country,\r\n                    line1: line1,\r\n                    line2: line2,\r\n                    postal_code: postal,\r\n                    state: state\r\n                }\r\n            }\r\n        });\r\n        console.log(paymentMethod)\r\n        //4. Handle any errors from stripe (Token comes back here if successful)\r\n        if (error) {\r\n            setError(error);\r\n            nProgress.done();\r\n            return; //stops the checkout from happening\r\n        }\r\n        //5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n        const order = await checkout({\r\n            variables: {\r\n                token: paymentMethod.id\r\n            },\r\n        });\r\n        console.log(`Finished with the order!!`);\r\n        console.log(order);\r\n        //6. Change the page to vie the order\r\n        router.push({\r\n            pathname: `/order/[id]`,\r\n            query: { id: order.data.checkout.id },\r\n        });\r\n        //7. Close the cart \r\n        closeCart()\r\n\r\n        //8. Turn the loader off\r\n        setLoading(false);\r\n        nProgress.done();\r\n    }\r\n\r\n    return (\r\n        <CheckoutFormStyles ref={form} onSubmit={handleSubmit}>\r\n            <fieldset>\r\n                <input\r\n                    id=\"email\"\r\n                    type=\"hidden\"\r\n                    required\r\n                    placeholder=\"Email\"\r\n                    value={user.email}\r\n                    onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"name\"\r\n                    required\r\n                    placeholder=\"Full Name\"\r\n                    value={name}\r\n                    onChange={(e) => {\r\n                    setName(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"line1\"\r\n                    required\r\n                    placeholder=\"Address Line1\"\r\n                    value={line1}\r\n                    onChange={(e) => {\r\n                    setLine1(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"line2\"\r\n                    placeholder=\"Address Line2\"\r\n                    value={line2}\r\n                    onChange={(e) => {\r\n                    setLine2(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"city\"\r\n                    required\r\n                    placeholder=\"City\"\r\n                    value={city}\r\n                    onChange={(e) => {\r\n                    setCity(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"country\"\r\n                    required\r\n                    placeholder=\"Country\"\r\n                    value={country}\r\n                    onChange={(e) => {\r\n                    setCountry(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"state\"\r\n                    required\r\n                    placeholder=\"State/County\"\r\n                    value={state}\r\n                    onChange={(e) => {\r\n                    setState(e.target.value);\r\n                    }}\r\n                />\r\n                <input\r\n                    id=\"postal\"\r\n                    required\r\n                    placeholder=\"e.g. E8 2DA\"\r\n                    value={postal}\r\n                    onChange={(e) => {\r\n                    setPostal(e.target.value);\r\n                    }}\r\n                />\r\n                {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n                {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\r\n                <CardElement />\r\n                <button id=\"buyIt\" className=\"btn btn-success checkout\" type=\"submit\">Buy Now <FontAwesomeIcon icon={faChevronRight} /></button>\r\n            </fieldset>\r\n        </CheckoutFormStyles>\r\n    );\r\n}\r\n\r\nfunction Checkout() {\r\n    return (\r\n        <Elements stripe={stripeLib}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport {Checkout};"]},"metadata":{},"sourceType":"module"}