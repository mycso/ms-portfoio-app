{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\pages\\\\order\\\\[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_ORDER_QUERY($id: ID!) {\\n        order: Order(where: { id: $id }) {\\n            id\\n            charge\\n            total\\n            user {\\n                id\\n            }\\n            items {\\n                id\\n                name\\n                description\\n                price\\n                quantity\\n                photo { \\n                    image {\\n                        publicUrlTransformed\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport Head from 'next/head';\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\nexport default function SingleOrderPage(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 22\n  }, this);\n  var order = data.order;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Stax of Stories \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), \"Hey Order page \", order.total, \" \", order.charge]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Charge:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.charge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SingleOrderPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleOrderPage\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/pages/order/[id].js"],"names":["useQuery","gql","ErrorMessage","OrderStyles","Head","SINGLE_ORDER_QUERY","SingleOrderPage","query","variables","id","data","error","loading","order","total","charge"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAMC,kBAAkB,GAAGJ,GAAH,mBAAxB;AAyBA,eAAe,SAASK,eAAT,OAAoC;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACdP,QAAQ,CAACK,kBAAD,EAAqB;AAC1DG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEF,KAAK,CAACE;AAAZ;AAD+C,GAArB,CADM;AAAA,MACvCC,IADuC,aACvCA,IADuC;AAAA,MACjCC,KADiC,aACjCA,KADiC;AAAA,MAC1BC,OAD0B,aAC1BA,OAD0B;;AAI/C,MAAGA,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGD,KAAH,EAAU,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AALqC,MAMvCE,KANuC,GAM7BH,IAN6B,CAMvCG,KANuC;AAO/C,sBACI,QAAC,WAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,uCAAwBA,KAAK,CAACJ,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,qBAEqBI,KAAK,CAACC,KAF3B,OAEqCD,KAAK,CAACE,MAF3C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOF,KAAK,CAACJ;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOI,KAAK,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAvBuBT,e;UACaN,Q;;;KADbM,e","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport OrderStyles from '../../components/styles/OrderStyles';\r\nimport Head from 'next/head';\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n    query SINGLE_ORDER_QUERY($id: ID!) {\r\n        order: Order(where: { id: $id }) {\r\n            id\r\n            charge\r\n            total\r\n            user {\r\n                id\r\n            }\r\n            items {\r\n                id\r\n                name\r\n                description\r\n                price\r\n                quantity\r\n                photo { \r\n                    image {\r\n                        publicUrlTransformed\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function SingleOrderPage({ query }) {\r\n    const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\r\n        variables: { id: query.id }\r\n    });\r\n    if(loading) return <p>Loading...</p>;\r\n    if(error) return <ErrorMessage error={error} />;\r\n    const { order } = data;\r\n    return (\r\n        <OrderStyles>\r\n            <Head>\r\n                <title>Stax of Stories {order.id}</title>\r\n                Hey Order page { order.total } { order.charge }\r\n            </Head>\r\n            <p>\r\n                <span>Order Id:</span>\r\n                <span>{order.id}</span>\r\n            </p>\r\n            <p>\r\n                <span>Charge:</span>\r\n                <span>{order.charge}</span>\r\n            </p>\r\n        </OrderStyles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}