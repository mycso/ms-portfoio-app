{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\lib\\\\checkoutState.js\";\nimport { createContext, useContext, useState } from 'react';\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nconst useCheckoutMethod = () => {\n  const context = React.useContext(LocalStateContext);\n\n  if (!context) {\n    throw new Error(\"useBasket must be used within a BasketProvider\");\n  }\n\n  return context;\n};\n\nfunction CheckoutStateProvider({\n  children\n}) {\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer!\n  // Closed cart by default\n  // const [cartOpen, setCartOpen] = useState(false);\n  // const [toggle, setToggle] = useState(false)\n  const {\n    0: shipName,\n    1: setShipName\n  } = useState('hello');\n  const {\n    0: shipEmail,\n    1: setShipEmail\n  } = useState('');\n  const {\n    0: shipPostal,\n    1: setShipPostal\n  } = useState('');\n  const {\n    0: shipCity,\n    1: setShipCity\n  } = useState('');\n  const {\n    0: shipCountry,\n    1: setShipCountry\n  } = useState('');\n  const {\n    0: shipLine1,\n    1: setShipLine1\n  } = useState('');\n  const {\n    0: shipLine2,\n    1: setShipLine2\n  } = useState('');\n  const {\n    0: shipState,\n    1: setShipState\n  } = useState('');\n  const {\n    0: shippingMethod,\n    1: setShippingMethod\n  } = useState('');\n\n  const useCheckoutMethod = ({}) => {\n    setShipName(''), setShipEmail(''), setShipPostal(''), setShipCity(''), setShipCountry(''), setShipLine1(''), setShipLine2(''), setShipState(''), setShippingMethod('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      shipName,\n      shipEmail,\n      shipPostal,\n      shipCity,\n      shipCountry,\n      shipLine1,\n      shipLine2,\n      shipState,\n      shippingMethod,\n      useCheckoutMethod\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n} // // make a custom hook for accessing the cart local state\n// function useCheckoutMethod() {\n//   // We use a consumer here to access the local state\n//   const all = useContext(LocalStateContext);\n//   return all;\n// }\n\n\nexport { CheckoutStateProvider, useCheckoutMethod };","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/lib/checkoutState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","useCheckoutMethod","context","React","Error","CheckoutStateProvider","children","shipName","setShipName","shipEmail","setShipEmail","shipPostal","setShipPostal","shipCity","setShipCity","shipCountry","setShipCountry","shipLine1","setShipLine1","shipLine2","setShipLine2","shipState","setShipState","shippingMethod","setShippingMethod"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,MAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,MAAMI,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAMC,OAAO,GAAGC,KAAK,CAACP,UAAN,CAAiBE,iBAAjB,CAAhB;;AAEA,MAAI,CAACI,OAAL,EAAc;AACZ,UAAM,IAAIE,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,SAAOF,OAAP;AACH,CARD;;AAUA,SAASG,qBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA6C;AAC3C;AAEE;AACA;AACA;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BX,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM;AAAA,OAACY,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACc,UAAD;AAAA,OAAaC;AAAb,MAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACgB,QAAD;AAAA,OAAWC;AAAX,MAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACkB,WAAD;AAAA,OAAcC;AAAd,MAAgCnB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACoB,SAAD;AAAA,OAAYC;AAAZ,MAA4BrB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACsB,SAAD;AAAA,OAAYC;AAAZ,MAA4BvB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACwB,SAAD;AAAA,OAAYC;AAAZ,MAA4BzB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAAC0B,cAAD;AAAA,OAAiBC;AAAjB,MAAsC3B,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMI,iBAAiB,GAAG,CAAC,EAAD,KAAQ;AAC9BO,IAAAA,WAAW,CAAC,EAAD,CAAX,EACAE,YAAY,CAAC,EAAD,CADZ,EAEAE,aAAa,CAAC,EAAD,CAFb,EAGAE,WAAW,CAAC,EAAD,CAHX,EAIAE,cAAc,CAAC,EAAD,CAJd,EAKAE,YAAY,CAAC,EAAD,CALZ,EAMAE,YAAY,CAAC,EAAD,CANZ,EAOAE,YAAY,CAAC,EAAD,CAPZ,EAQAE,iBAAiB,CAAC,EAAD,CARjB;AASH,GAVD;;AAYF,sBACE,QAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AACLjB,MAAAA,QADK;AAELE,MAAAA,SAFK;AAGLE,MAAAA,UAHK;AAILE,MAAAA,QAJK;AAKLE,MAAAA,WALK;AAMLE,MAAAA,SANK;AAOLE,MAAAA,SAPK;AAQLE,MAAAA,SARK;AASLE,MAAAA,cATK;AAULtB,MAAAA;AAVK,KADT;AAAA,cAcGK;AAdH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,C,CAED;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACID,qBADJ,EAEIJ,iBAFJ","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst LocalStateContext = createContext();\r\nconst LocalStateProvider = LocalStateContext.Provider;\r\n\r\nconst useCheckoutMethod = () => {\r\n    const context = React.useContext(LocalStateContext);\r\n  \r\n    if (!context) {\r\n      throw new Error(\"useBasket must be used within a BasketProvider\");\r\n    }\r\n  \r\n    return context;\r\n};\r\n\r\nfunction CheckoutStateProvider({ children }) {\r\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer!\r\n\r\n    // Closed cart by default\r\n    // const [cartOpen, setCartOpen] = useState(false);\r\n    // const [toggle, setToggle] = useState(false)\r\n    const [shipName, setShipName] = useState('hello');\r\n    const [shipEmail, setShipEmail] = useState('');\r\n    const [shipPostal, setShipPostal] = useState('');\r\n    const [shipCity, setShipCity] = useState('');\r\n    const [shipCountry, setShipCountry] = useState('');\r\n    const [shipLine1, setShipLine1] = useState('');\r\n    const [shipLine2, setShipLine2] = useState('');\r\n    const [shipState, setShipState] = useState('');\r\n    const [shippingMethod, setShippingMethod] = useState('');\r\n    \r\n    const useCheckoutMethod = ({}) => {\r\n        setShipName(''),\r\n        setShipEmail(''),\r\n        setShipPostal(''),\r\n        setShipCity(''),\r\n        setShipCountry(''),\r\n        setShipLine1(''),\r\n        setShipLine2(''),\r\n        setShipState(''),\r\n        setShippingMethod('')\r\n    }\r\n\r\n  return (\r\n    <LocalStateProvider\r\n      value={{\r\n        shipName,\r\n        shipEmail,\r\n        shipPostal,\r\n        shipCity,\r\n        shipCountry,\r\n        shipLine1,\r\n        shipLine2,\r\n        shipState,\r\n        shippingMethod,\r\n        useCheckoutMethod,\r\n      }}\r\n    >\r\n      {children}\r\n    </LocalStateProvider>\r\n  );\r\n}\r\n\r\n// // make a custom hook for accessing the cart local state\r\n// function useCheckoutMethod() {\r\n//   // We use a consumer here to access the local state\r\n//   const all = useContext(LocalStateContext);\r\n//   return all;\r\n// }\r\n\r\nexport { \r\n    CheckoutStateProvider, \r\n    useCheckoutMethod\r\n};"]},"metadata":{},"sourceType":"module"}