{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\ms-portfolio\\\\lib\\\\checkoutState.js\";\nimport { createContext, useContext, useState } from 'react';\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nconst useCheckoutMethod = () => {\n  const context = useContext(LocalStateContext);\n\n  if (!context) {\n    throw new Error(\"useCheckoutMethod must be used within a CheckoutStateProvider\");\n  }\n\n  return context;\n};\n\nfunction CheckoutStateProvider({\n  children\n}) {\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer!\n  // Closed cart by default\n  // const [cartOpen, setCartOpen] = useState(false);\n  // const [toggle, setToggle] = useState(false)\n  const {\n    0: shipName,\n    1: setShipName\n  } = useState('');\n  const {\n    0: shipEmail,\n    1: setShipEmail\n  } = useState('');\n  const {\n    0: shipPostal,\n    1: setShipPostal\n  } = useState('');\n  const {\n    0: shipCity,\n    1: setShipCity\n  } = useState('');\n  const {\n    0: shipCountry,\n    1: setShipCountry\n  } = useState('');\n  const {\n    0: shipLine1,\n    1: setShipLine1\n  } = useState('');\n  const {\n    0: shipLine2,\n    1: setShipLine2\n  } = useState('');\n  const {\n    0: shipState,\n    1: setShipState\n  } = useState('');\n  const {\n    0: shippingMethod,\n    1: setShippingMethod\n  } = useState('');\n  const {\n    0: paymentInfo,\n    1: setPaymentInfo\n  } = useState(''); // const useCheckoutMethod = ({}) => {\n\n  function onChangeShipName(e) {\n    setShipName(e.target.value);\n  }\n\n  function onChangeShipEmail(e) {\n    setShipEmail(e.target.value);\n  }\n\n  function onChangeShipPostal(e) {\n    setShipPostal(e.target.value);\n  }\n\n  function onChangeShipCity(e) {\n    setShipCity(e.target.value);\n  }\n\n  function onChangeShipCountry(e) {\n    setShipCountry(e.target.value);\n  }\n\n  function onChangeShipLine1(e) {\n    setShipLine1(e.target.value);\n  }\n\n  function onChangeShipLine2(e) {\n    setShipLine2(e.target.value);\n  }\n\n  function onChangeShipState(e) {\n    setShipState(e.target.value);\n  }\n\n  function onChangeShippingMethod(e) {\n    setShippingMethod(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      shipName,\n      shipEmail,\n      shipPostal,\n      shipCity,\n      shipCountry,\n      shipLine1,\n      shipLine2,\n      shipState,\n      shippingMethod,\n      paymentInfo,\n      onChangeShipName,\n      onChangeShipEmail,\n      onChangeShipPostal,\n      onChangeShipCity,\n      onChangeShipCountry,\n      onChangeShipLine1,\n      onChangeShipLine2,\n      onChangeShipState,\n      onChangeShippingMethod,\n      setPaymentInfo,\n      useCheckoutMethod\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n} // // make a custom hook for accessing the cart local state\n// function useCheckoutMethod() {\n//   // We use a consumer here to access the local state\n//   const all = useContext(LocalStateContext);\n//   return all;\n// }\n\n\nexport { CheckoutStateProvider, useCheckoutMethod };","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/ms-portfolio/lib/checkoutState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","useCheckoutMethod","context","Error","CheckoutStateProvider","children","shipName","setShipName","shipEmail","setShipEmail","shipPostal","setShipPostal","shipCity","setShipCity","shipCountry","setShipCountry","shipLine1","setShipLine1","shipLine2","setShipLine2","shipState","setShipState","shippingMethod","setShippingMethod","paymentInfo","setPaymentInfo","onChangeShipName","e","target","value","onChangeShipEmail","onChangeShipPostal","onChangeShipCity","onChangeShipCountry","onChangeShipLine1","onChangeShipLine2","onChangeShipState","onChangeShippingMethod"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst LocalStateContext = createContext();\r\nconst LocalStateProvider = LocalStateContext.Provider;\r\n\r\nconst useCheckoutMethod = () => {\r\n    const context = useContext(LocalStateContext);\r\n  \r\n    if (!context) {\r\n      throw new Error(\"useCheckoutMethod must be used within a CheckoutStateProvider\");\r\n    }\r\n  \r\n    return context;\r\n};\r\n\r\nfunction CheckoutStateProvider({ children }) {\r\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer!\r\n\r\n    // Closed cart by default\r\n    // const [cartOpen, setCartOpen] = useState(false);\r\n    // const [toggle, setToggle] = useState(false)\r\n    const [shipName, setShipName] = useState('');\r\n    const [shipEmail, setShipEmail] = useState('');\r\n    const [shipPostal, setShipPostal] = useState('');\r\n    const [shipCity, setShipCity] = useState('');\r\n    const [shipCountry, setShipCountry] = useState('');\r\n    const [shipLine1, setShipLine1] = useState('');\r\n    const [shipLine2, setShipLine2] = useState('');\r\n    const [shipState, setShipState] = useState('');\r\n    const [shippingMethod, setShippingMethod] = useState('');\r\n    const [paymentInfo, setPaymentInfo] = useState('');\r\n    \r\n    // const useCheckoutMethod = ({}) => {\r\n\r\n        function onChangeShipName (e) {\r\n            setShipName(e.target.value);\r\n        }\r\n\r\n        function onChangeShipEmail (e) {\r\n            setShipEmail(e.target.value);\r\n        }\r\n\r\n        function onChangeShipPostal (e) {\r\n            setShipPostal(e.target.value);\r\n        }\r\n\r\n        function onChangeShipCity (e) {\r\n            setShipCity(e.target.value);\r\n        }\r\n\r\n        function onChangeShipCountry (e) {\r\n            setShipCountry(e.target.value);\r\n        }\r\n\r\n        function onChangeShipLine1 (e) {\r\n            setShipLine1(e.target.value);\r\n        }\r\n\r\n        function onChangeShipLine2 (e) {\r\n            setShipLine2(e.target.value);\r\n        }\r\n\r\n        function onChangeShipState (e) {\r\n            setShipState(e.target.value);\r\n        }\r\n\r\n        function onChangeShippingMethod (e) {\r\n            setShippingMethod(e.target.value);\r\n        }\r\n\r\n  return (\r\n    <LocalStateProvider\r\n      value={{\r\n        shipName,\r\n        shipEmail,\r\n        shipPostal,\r\n        shipCity,\r\n        shipCountry,\r\n        shipLine1,\r\n        shipLine2,\r\n        shipState,\r\n        shippingMethod,\r\n        paymentInfo,\r\n        onChangeShipName,\r\n        onChangeShipEmail,\r\n        onChangeShipPostal,\r\n        onChangeShipCity,\r\n        onChangeShipCountry,\r\n        onChangeShipLine1,\r\n        onChangeShipLine2,\r\n        onChangeShipState,\r\n        onChangeShippingMethod,\r\n        setPaymentInfo,\r\n        useCheckoutMethod,\r\n      }}\r\n    >\r\n      {children}\r\n    </LocalStateProvider>\r\n  );\r\n}\r\n\r\n// // make a custom hook for accessing the cart local state\r\n// function useCheckoutMethod() {\r\n//   // We use a consumer here to access the local state\r\n//   const all = useContext(LocalStateContext);\r\n//   return all;\r\n// }\r\n\r\nexport { \r\n    CheckoutStateProvider, \r\n    useCheckoutMethod\r\n};"]},"metadata":{},"sourceType":"module"}