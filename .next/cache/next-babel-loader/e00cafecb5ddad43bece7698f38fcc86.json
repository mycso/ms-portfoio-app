{"ast":null,"code":"import _objectDestructuringEmpty from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\lib\\\\checkoutState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nvar LocalStateContext = /*#__PURE__*/createContext();\nvar LocalStateProvider = LocalStateContext.Provider;\n\nvar useCheckoutMethod = function useCheckoutMethod() {\n  _s();\n\n  var context = React.useContext(LocalStateContext);\n\n  if (!context) {\n    throw new Error(\"useBasket must be used within a BasketProvider\");\n  }\n\n  return context;\n};\n\n_s(useCheckoutMethod, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nfunction CheckoutStateProvider(_ref) {\n  _s2();\n\n  var children = _ref.children;\n\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer!\n  // Closed cart by default\n  // const [cartOpen, setCartOpen] = useState(false);\n  // const [toggle, setToggle] = useState(false)\n  var _useState = useState('hello'),\n      shipName = _useState[0],\n      setShipName = _useState[1];\n\n  var _useState2 = useState(''),\n      shipEmail = _useState2[0],\n      setShipEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      shipPostal = _useState3[0],\n      setShipPostal = _useState3[1];\n\n  var _useState4 = useState(''),\n      shipCity = _useState4[0],\n      setShipCity = _useState4[1];\n\n  var _useState5 = useState(''),\n      shipCountry = _useState5[0],\n      setShipCountry = _useState5[1];\n\n  var _useState6 = useState(''),\n      shipLine1 = _useState6[0],\n      setShipLine1 = _useState6[1];\n\n  var _useState7 = useState(''),\n      shipLine2 = _useState7[0],\n      setShipLine2 = _useState7[1];\n\n  var _useState8 = useState(''),\n      shipState = _useState8[0],\n      setShipState = _useState8[1];\n\n  var _useState9 = useState(''),\n      shippingMethod = _useState9[0],\n      setShippingMethod = _useState9[1];\n\n  var useCheckoutMethod = function useCheckoutMethod(_ref2) {\n    _objectDestructuringEmpty(_ref2);\n\n    setShipName(''), setShipEmail(''), setShipPostal(''), setShipCity(''), setShipCountry(''), setShipLine1(''), setShipLine2(''), setShipState(''), setShippingMethod('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      shipName: shipName,\n      shipEmail: shipEmail,\n      shipPostal: shipPostal,\n      shipCity: shipCity,\n      shipCountry: shipCountry,\n      shipLine1: shipLine1,\n      shipLine2: shipLine2,\n      shipState: shipState,\n      shippingMethod: shippingMethod,\n      useCheckoutMethod: useCheckoutMethod\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n} // // make a custom hook for accessing the cart local state\n// function useCheckoutMethod() {\n//   // We use a consumer here to access the local state\n//   const all = useContext(LocalStateContext);\n//   return all;\n// }\n\n\n_s2(CheckoutStateProvider, \"bPWhfqXZ5neE7Px0z4ff/DPBOgs=\");\n\n_c = CheckoutStateProvider;\nexport { CheckoutStateProvider, useCheckoutMethod };\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutStateProvider\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/lib/checkoutState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","useCheckoutMethod","context","React","Error","CheckoutStateProvider","children","shipName","setShipName","shipEmail","setShipEmail","shipPostal","setShipPostal","shipCity","setShipCity","shipCountry","setShipCountry","shipLine1","setShipLine1","shipLine2","setShipLine2","shipState","setShipState","shippingMethod","setShippingMethod"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,IAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,IAAMI,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAC5B,MAAMC,OAAO,GAAGC,KAAK,CAACP,UAAN,CAAiBE,iBAAjB,CAAhB;;AAEA,MAAI,CAACI,OAAL,EAAc;AACZ,UAAM,IAAIE,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,SAAOF,OAAP;AACH,CARD;;GAAMD,iB;;AAUN,SAASI,qBAAT,OAA6C;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAC3C;AAEE;AACA;AACA;AALyC,kBAMTT,QAAQ,CAAC,OAAD,CANC;AAAA,MAMlCU,QANkC;AAAA,MAMxBC,WANwB;;AAAA,mBAOPX,QAAQ,CAAC,EAAD,CAPD;AAAA,MAOlCY,SAPkC;AAAA,MAOvBC,YAPuB;;AAAA,mBAQLb,QAAQ,CAAC,EAAD,CARH;AAAA,MAQlCc,UARkC;AAAA,MAQtBC,aARsB;;AAAA,mBASTf,QAAQ,CAAC,EAAD,CATC;AAAA,MASlCgB,QATkC;AAAA,MASxBC,WATwB;;AAAA,mBAUHjB,QAAQ,CAAC,EAAD,CAVL;AAAA,MAUlCkB,WAVkC;AAAA,MAUrBC,cAVqB;;AAAA,mBAWPnB,QAAQ,CAAC,EAAD,CAXD;AAAA,MAWlCoB,SAXkC;AAAA,MAWvBC,YAXuB;;AAAA,mBAYPrB,QAAQ,CAAC,EAAD,CAZD;AAAA,MAYlCsB,SAZkC;AAAA,MAYvBC,YAZuB;;AAAA,mBAaPvB,QAAQ,CAAC,EAAD,CAbD;AAAA,MAalCwB,SAbkC;AAAA,MAavBC,YAbuB;;AAAA,mBAcGzB,QAAQ,CAAC,EAAD,CAdX;AAAA,MAclC0B,cAdkC;AAAA,MAclBC,iBAdkB;;AAgBzC,MAAMvB,iBAAiB,GAAG,SAApBA,iBAAoB,QAAQ;AAAA;;AAC9BO,IAAAA,WAAW,CAAC,EAAD,CAAX,EACAE,YAAY,CAAC,EAAD,CADZ,EAEAE,aAAa,CAAC,EAAD,CAFb,EAGAE,WAAW,CAAC,EAAD,CAHX,EAIAE,cAAc,CAAC,EAAD,CAJd,EAKAE,YAAY,CAAC,EAAD,CALZ,EAMAE,YAAY,CAAC,EAAD,CANZ,EAOAE,YAAY,CAAC,EAAD,CAPZ,EAQAE,iBAAiB,CAAC,EAAD,CARjB;AASH,GAVD;;AAYF,sBACE,QAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AACLjB,MAAAA,QAAQ,EAARA,QADK;AAELE,MAAAA,SAAS,EAATA,SAFK;AAGLE,MAAAA,UAAU,EAAVA,UAHK;AAILE,MAAAA,QAAQ,EAARA,QAJK;AAKLE,MAAAA,WAAW,EAAXA,WALK;AAMLE,MAAAA,SAAS,EAATA,SANK;AAOLE,MAAAA,SAAS,EAATA,SAPK;AAQLE,MAAAA,SAAS,EAATA,SARK;AASLE,MAAAA,cAAc,EAAdA,cATK;AAULtB,MAAAA,iBAAiB,EAAjBA;AAVK,KADT;AAAA,cAcGK;AAdH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,C,CAED;AACA;AACA;AACA;AACA;AACA;;;IArDSD,qB;;KAAAA,qB;AAuDT,SACIA,qBADJ,EAEIJ,iBAFJ","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst LocalStateContext = createContext();\r\nconst LocalStateProvider = LocalStateContext.Provider;\r\n\r\nconst useCheckoutMethod = () => {\r\n    const context = React.useContext(LocalStateContext);\r\n  \r\n    if (!context) {\r\n      throw new Error(\"useBasket must be used within a BasketProvider\");\r\n    }\r\n  \r\n    return context;\r\n};\r\n\r\nfunction CheckoutStateProvider({ children }) {\r\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer!\r\n\r\n    // Closed cart by default\r\n    // const [cartOpen, setCartOpen] = useState(false);\r\n    // const [toggle, setToggle] = useState(false)\r\n    const [shipName, setShipName] = useState('hello');\r\n    const [shipEmail, setShipEmail] = useState('');\r\n    const [shipPostal, setShipPostal] = useState('');\r\n    const [shipCity, setShipCity] = useState('');\r\n    const [shipCountry, setShipCountry] = useState('');\r\n    const [shipLine1, setShipLine1] = useState('');\r\n    const [shipLine2, setShipLine2] = useState('');\r\n    const [shipState, setShipState] = useState('');\r\n    const [shippingMethod, setShippingMethod] = useState('');\r\n    \r\n    const useCheckoutMethod = ({}) => {\r\n        setShipName(''),\r\n        setShipEmail(''),\r\n        setShipPostal(''),\r\n        setShipCity(''),\r\n        setShipCountry(''),\r\n        setShipLine1(''),\r\n        setShipLine2(''),\r\n        setShipState(''),\r\n        setShippingMethod('')\r\n    }\r\n\r\n  return (\r\n    <LocalStateProvider\r\n      value={{\r\n        shipName,\r\n        shipEmail,\r\n        shipPostal,\r\n        shipCity,\r\n        shipCountry,\r\n        shipLine1,\r\n        shipLine2,\r\n        shipState,\r\n        shippingMethod,\r\n        useCheckoutMethod,\r\n      }}\r\n    >\r\n      {children}\r\n    </LocalStateProvider>\r\n  );\r\n}\r\n\r\n// // make a custom hook for accessing the cart local state\r\n// function useCheckoutMethod() {\r\n//   // We use a consumer here to access the local state\r\n//   const all = useContext(LocalStateContext);\r\n//   return all;\r\n// }\r\n\r\nexport { \r\n    CheckoutStateProvider, \r\n    useCheckoutMethod\r\n};"]},"metadata":{},"sourceType":"module"}