{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Reviews.js\";\nimport { useQuery } from '@apollo/client';\nimport ItemStyles from './styles/ItemStyles';\nimport Title from './styles/Title';\nimport PriceTag from './styles/PriceTag';\nimport Link from 'next/link';\nimport formatMoney from '../lib/formatMoney';\nimport DeleteProduct from './DeleteProduct';\nimport AddToCart from './AddToCart';\nimport { useUser } from './User';\nimport ReviewTitle from './styles/ReviewTitle';\nimport ReviewStyles from './styles/ReviewStyles';\nimport Review from './styles/Review';\nimport { StarsRating } from \"stars-rating-react-hooks\";\nimport { perPage } from '../config';\nexport const ALL_PRODUCT_REVIEWS_QUERY = gql`\n    query ALL_PRODUCT_REVIEWS_QUERY($skip: Int = 0, $first: Int) {\n        allProductReviews(first: $first, skip: $skip){\n            id\n            reviewTitle\n            comment\n            stars\n        }\n    }\n`;\nexport default function Reviews({\n  review,\n  page\n}) {\n  const user = useUser();\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCT_REVIEWS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  });\n  const config = {\n    totalStars: 5,\n    initialSelectedValue: review.stars,\n    renderFull: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"star\",\n      src: \"https://img.icons8.com/color/30/000000/filled-star--v1.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this),\n    renderEmpty: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"star\",\n      src: \"https://img.icons8.com/windows/30/000000/filled-star.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  };\n  console.log(data, error, loading);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ReviewStyles, {\n    children: data.allProductReviews.map(product => /*#__PURE__*/_jsxDEV(Review, {\n      product: product\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Reviews.js"],"names":["useQuery","ItemStyles","Title","PriceTag","Link","formatMoney","DeleteProduct","AddToCart","useUser","ReviewTitle","ReviewStyles","Review","StarsRating","perPage","ALL_PRODUCT_REVIEWS_QUERY","gql","Reviews","review","page","user","data","error","loading","variables","skip","first","config","totalStars","initialSelectedValue","stars","renderFull","renderEmpty","console","log","message","allProductReviews","map","product","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,yBAAyB,GAAGC,GAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAYP,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAjB,EAAmC;AAC9C,QAAMC,IAAI,GAAGX,OAAO,EAApB;AAEA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BtB,QAAQ,CAACc,yBAAD,EAA4B;AACjES,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEN,IAAI,GAAGL,OAAP,GAAiBA,OADhB;AAEPY,MAAAA,KAAK,EAAEZ;AAFA;AADsD,GAA5B,CAAzC;AAOA,QAAMa,MAAM,GAAG;AACXC,IAAAA,UAAU,EAAE,CADD;AAEXC,IAAAA,oBAAoB,EAAEX,MAAM,CAACY,KAFlB;AAGXC,IAAAA,UAAU,eACN;AACA,MAAA,GAAG,EAAC,MADJ;AAEA,MAAA,GAAG,EAAC;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJO;AASXC,IAAAA,WAAW,eACP;AAAK,MAAA,GAAG,EAAC,MAAT;AAAgB,MAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AAVO,GAAf;AAcAC,EAAAA,OAAO,CAACC,GAAR,CAAab,IAAb,EAAmBC,KAAnB,EAA0BC,OAA1B;AACA,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACa,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACI,QAAC,YAAD;AAAA,cACKd,IAAI,CAACe,iBAAL,CAAuBC,GAAvB,CAA4BC,OAAD,iBACxB,QAAC,MAAD;AAAyB,MAAA,OAAO,EAAEA;AAAlC,OAAaA,OAAO,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport ItemStyles from './styles/ItemStyles';\r\nimport Title from './styles/Title';\r\nimport PriceTag from './styles/PriceTag';\r\nimport Link from 'next/link';\r\nimport formatMoney from '../lib/formatMoney';\r\nimport DeleteProduct from './DeleteProduct';\r\nimport AddToCart from './AddToCart';\r\nimport { useUser } from './User';\r\nimport ReviewTitle from './styles/ReviewTitle'\r\nimport ReviewStyles from './styles/ReviewStyles';\r\nimport Review from './styles/Review';\r\nimport { StarsRating } from \"stars-rating-react-hooks\";\r\nimport { perPage } from '../config';\r\n\r\nexport const ALL_PRODUCT_REVIEWS_QUERY = gql`\r\n    query ALL_PRODUCT_REVIEWS_QUERY($skip: Int = 0, $first: Int) {\r\n        allProductReviews(first: $first, skip: $skip){\r\n            id\r\n            reviewTitle\r\n            comment\r\n            stars\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport default function Reviews({ review, page }) {\r\n    const user = useUser();\r\n\r\n    const { data, error, loading } = useQuery(ALL_PRODUCT_REVIEWS_QUERY, {\r\n        variables: {\r\n            skip: page * perPage - perPage,\r\n            first: perPage,\r\n        },\r\n    });\r\n\r\n    const config = {\r\n        totalStars: 5,\r\n        initialSelectedValue: review.stars,\r\n        renderFull: (\r\n            <img\r\n            alt=\"star\"\r\n            src=\"https://img.icons8.com/color/30/000000/filled-star--v1.png\"\r\n            />\r\n        ),\r\n        renderEmpty: (\r\n            <img alt=\"star\" src=\"https://img.icons8.com/windows/30/000000/filled-star.png\" />\r\n        ),\r\n    };\r\n\r\n    console.log( data, error, loading )\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error: {error.message}</p>;\r\n\r\n    return (\r\n        <ReviewStyles>\r\n            {data.allProductReviews.map((product) => (\r\n                <Review key={product.id} product={product} />\r\n            ))}\r\n        </ReviewStyles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}