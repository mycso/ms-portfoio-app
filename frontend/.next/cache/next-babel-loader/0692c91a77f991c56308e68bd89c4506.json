{"ast":null,"code":"// import React, { useRef, useState, useContext } from 'react';\n// import styled from 'styled-components';\n// import {\n//     CardElement,\n//     Elements,\n//     useElements,\n//     useStripe,\n//   } from '@stripe/react-stripe-js';\n// import { loadStripe } from '@stripe/stripe-js';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { \n//     faChevronRight,\n// } from '@fortawesome/free-solid-svg-icons';\n// import nProgress from 'nprogress';\n// import gql from 'graphql-tag';\n// import { useMutation, useQuery } from '@apollo/client';\n// import { CURRENT_USER_QUERY, useUser } from './User';\n// import { useRouter } from 'next/dist/client/router';\n// import { useCart } from '../lib/cartState';\n// import { useCheckoutMethod } from '../lib/checkoutState';\n// import emailjs from 'emailjs-com';\n// const CheckoutFormStyles = styled.form`\n//     box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n//     border: 1px solid rgba(0, 0, 0, 0.06);\n//     border-radius: 5px;\n//     padding: 1rem;\n//     grid-gap: 1rem;\n//     height: 398px;\n//     overflow-y: scroll;\n//     input {\n//         font-size: 15px;\n//         margin-right: 5px;\n//         width: 100%;\n//     }\n//     select {\n//         font-size: 15px !important;\n//         margin-right: 5px;\n//         width: 100%;\n//         max-width: none !important;\n//         height: 37px;\n//         option {\n//             font-size: 15px;\n//         }\n//     }\n//     .side-by-side {\n//         display: grid;\n//         grid-template-columns: 1fr 1fr;\n//         grid-gap: 22px;\n//     }\n// `;\n// const SHIPPING_QUERY = gql`\n//     query SHIPPING_QUERY {\n//         allShippings {\n//             id\n//             type\n//             amount\n//             description\n//         }\n//     }\n// `;\n// const CREATE_ORDER_MUTATION = gql`\n//     mutation CREATE_ORDER_MUTATION ($token: String!) {\n//         checkout(token: $token) {\n//             id\n//             charge\n//             total\n//             items {\n//                 id\n//                 name\n//             }\n//         }\n//     }\n// `;\n// const stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n// function CheckoutForm() {\n//     const form = useRef();\n//     const [status, setStatus] = useState(undefined);\n//     const user = useUser();\n//     const [error, setError] = useState();\n//     const [loading, setLoading] = useState(false);\n//     const stripe = useStripe();\n//     const router = useRouter();\n//     const elements = useElements();\n//     const [name, setName] = useState('');\n//     const [email, setEmail] = useState(user.email);\n//     const [postal, setPostal] = useState('');\n//     const [city, setCity] = useState('');\n//     const [country, setCountry] = useState('');\n//     const [line1, setLine1] = useState('');\n//     const [line2, setLine2] = useState('');\n//     const [state, setState] = useState('');\n//     const [shipEmail, setShipEmail] = useState(user.email);\n//     const { closeCart } = useCart();\n//     const { \n//         // Shipping States\n//         shipName, \n//         shipPostal,\n//         shipCity,\n//         shipCountry,\n//         shipLine1,\n//         shipLine2,\n//         shipState,\n//         shippingMethod,\n//         paymentInfo,\n//         //Shipping Set States\n//         onChangeShipName,\n//         onChangeShipPostal,\n//         onChangeShipCity,\n//         onChangeShipCountry,\n//         onChangeShipLine1,\n//         onChangeShipLine2,\n//         onChangeShipState,\n//         onChangeShippingMethod,\n//         setPaymentInfo\n//     } = useCheckoutMethod();\n//     console.log(shippingMethod, shipName, shipEmail, 'test');\n//     // console.log(setShipName);\n//     const [checkout, {error: graphQLError}] = useMutation(\n//         CREATE_ORDER_MUTATION,\n//         {\n//             refetchQueries: [{ query: CURRENT_USER_QUERY }],\n//         }\n//     );\n//     const { data } = useQuery(SHIPPING_QUERY);\n//     console.log(data?.allShippings);\n//     async function handleSubmit(e) {\n//         //1. Stop the form from submitting and turn the loader one\n//         e.preventDefault();\n//         emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz')\n//         .then((result) => {\n//             console.log(result.text);\n//             setStatus({type: 'result'});\n//         }, (error) => {\n//             console.log(error.text);\n//             setStatus({type: 'error'})\n//         });\n//         setLoading(true);\n//         console.log('We gotta do some work...');\n//         //2. Start the page transition\n//         nProgress.start();\n//         //3. Create the payment method via stripe\n//         const { error, paymentMethod } = await stripe.createPaymentMethod({\n//             type: 'card',\n//             card: elements.getElement(CardElement),\n//             billing_details: {\n//                 email,\n//                 name,\n//                 address: {\n//                     city: city,\n//                     country: country,\n//                     line1: line1,\n//                     line2: line2,\n//                     postal_code: postal,\n//                     state: state\n//                 }\n//             }\n//         });\n//         //4. Handle any errors from stripe (Token comes back here if successful)\n//         if (error) {\n//             setError(error);\n//             nProgress.done();\n//             return; //stops the checkout from happening\n//         }\n//         //5. Send the token from step 3 to our keystone server, via a custom mutation!\n//         const order = await checkout({\n//             variables: {\n//                 token: paymentMethod.id,\n//             },\n//         });\n//         console.log(`Finished with the order!!`);\n//         setPaymentInfo(order.data.checkout.total);\n//         console.log(paymentInfo, \"test\");\n//         // console.log(option);\n//         //6. Change the page to vie the order\n//         router.push({\n//             pathname: `/order/[id]`,\n//             query: { id: order.data.checkout.id },\n//         });\n//         //7. Close the cart \n//         closeCart()\n//         //8. Turn the loader off\n//         setLoading(false);\n//         nProgress.done();\n//     }\n//     return (\n//         <CheckoutFormStyles ref={form} method=\"POST\" onSubmit={handleSubmit}>\n//             <fieldset>\n//                 <div className=\"side-by-side\">\n//                     <div>\n//                          <input\n//                             id=\"email\"\n//                             type=\"hidden\"\n//                             required\n//                             placeholder=\"Email\"\n//                             value={paymentInfo}\n//                         />\n//                         <input\n//                             id=\"email\"\n//                             type=\"hidden\"\n//                             required\n//                             placeholder=\"Email\"\n//                             value={email}\n//                             onChange={(e) => {\n//                             setEmail(e.target.value);\n//                             }}\n//                         />\n//                         Billing Details\n//                         <input\n//                             id=\"name\"\n//                             required\n//                             placeholder=\"Full Name\"\n//                             value={name}\n//                             onChange={(e) => {\n//                             setName(e.target.value);\n//                             }}\n//                         />\n//                         <input\n//                             id=\"line1\"\n//                             required\n//                             placeholder=\"Address Line1\"\n//                             value={line1}\n//                             onChange={(e) => {\n//                             setLine1(e.target.value);\n//                             }}\n//                         />\n//                         <input\n//                             id=\"line2\"\n//                             placeholder=\"Address Line2\"\n//                             value={line2}\n//                             onChange={(e) => {\n//                             setLine2(e.target.value);\n//                             }}\n//                         />\n//                         <input\n//                             id=\"city\"\n//                             required\n//                             placeholder=\"City\"\n//                             value={city}\n//                             onChange={(e) => {\n//                             setCity(e.target.value);\n//                             }}\n//                         />\n//                         <input\n//                             id=\"country\"\n//                             required\n//                             placeholder=\"Country\"\n//                             value={country}\n//                             onChange={(e) => {\n//                             setCountry(e.target.value);\n//                             }}\n//                         />\n//                         <input\n//                             id=\"state\"\n//                             required\n//                             placeholder=\"State/County\"\n//                             value={state}\n//                             onChange={(e) => {\n//                             setState(e.target.value);\n//                             }}\n//                         />\n//                         <input\n//                             id=\"postal\"\n//                             required\n//                             placeholder=\"Post Code\"\n//                             value={postal}\n//                             onChange={(e) => {\n//                             setPostal(e.target.value);\n//                             }}\n//                         />\n//                     </div>\n//                     <div>\n//                         <input\n//                             id=\"email\"\n//                             type=\"hidden\"\n//                             required\n//                             placeholder=\"Email\"\n//                             value={shipEmail}\n//                             onChange={(e) => {\n//                             setShipEmail(e.target.value);\n//                             }}\n//                         />\n//                         Shipping Details\n//                         <input\n//                             id=\"shipName\"\n//                             required\n//                             placeholder=\"Full Name\"\n//                             value={shipName}\n//                             onChange={onChangeShipName}\n//                         />\n//                         <input\n//                             id=\"shipLine1\"\n//                             required\n//                             placeholder=\"Address Line1\"\n//                             value={shipLine1}\n//                             onChange={onChangeShipLine1}\n//                         />\n//                         <input\n//                             id=\"shipLine2\"\n//                             placeholder=\"Address Line2\"\n//                             value={shipLine2}\n//                             onChange={onChangeShipLine2}\n//                         />\n//                         <input\n//                             id=\"shipCity\"\n//                             required\n//                             placeholder=\"City\"\n//                             value={shipCity}\n//                             onChange={onChangeShipCity}\n//                         />\n//                         <input\n//                             id=\"shipCountry\"\n//                             required\n//                             placeholder=\"Country\"\n//                             value={shipCountry}\n//                             onChange={onChangeShipCountry}\n//                         />\n//                         <input\n//                             id=\"shipState\"\n//                             required\n//                             placeholder=\"State/County\"\n//                             value={shipState}\n//                             onChange={onChangeShipState}\n//                         />\n//                         <input\n//                             id=\"shipPostal\"\n//                             required\n//                             placeholder=\"Post Code\"\n//                             value={shipPostal}\n//                             onChange={onChangeShipPostal}\n//                         />\n//                     </div>\n//                 </div>\n//                 <select\n//                     name=\"selectPaymentMethod\"\n//                     id=\"selectPaymentMethod\"\n//                     onChange={onChangeShippingMethod}\n//                     value={shippingMethod}\n//                     >\n//                         <option value=\"Select Shipping Method\">Select Shipping Method</option>\n//                         {data?.allShippings.map(shippingMethod => <option value={`${shippingMethod.type} - ${shippingMethod.amount}`}>{shippingMethod.type} - {shippingMethod.amount}</option>)}\n//                 </select>\n//                 {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\n//                 {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\n//                 <CardElement />\n//                 <button id=\"buyIt\" className=\"btn btn-success checkout\" type=\"submit\">Buy Now <FontAwesomeIcon icon={faChevronRight} /></button>\n//             </fieldset>\n//         </CheckoutFormStyles>\n//     );\n// }\n// function Checkout() {\n//     return (\n//         <Elements stripe={stripeLib}>\n//             <CheckoutForm />\n//         </Elements>\n//     )\n// }\n// export {Checkout};","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Checkout.js"],"names":[],"mappingssourcesContent":["// import React, { useRef, useState, useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import {\r\n//     CardElement,\r\n//     Elements,\r\n//     useElements,\r\n//     useStripe,\r\n//   } from '@stripe/react-stripe-js';\r\n// import { loadStripe } from '@stripe/stripe-js';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { \r\n//     faChevronRight,\r\n// } from '@fortawesome/free-solid-svg-icons';\r\n// import nProgress from 'nprogress';\r\n// import gql from 'graphql-tag';\r\n// import { useMutation, useQuery } from '@apollo/client';\r\n// import { CURRENT_USER_QUERY, useUser } from './User';\r\n// import { useRouter } from 'next/dist/client/router';\r\n// import { useCart } from '../lib/cartState';\r\n// import { useCheckoutMethod } from '../lib/checkoutState';\r\n// import emailjs from 'emailjs-com';\r\n\r\n\r\n// const CheckoutFormStyles = styled.form`\r\n//     box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n//     border: 1px solid rgba(0, 0, 0, 0.06);\r\n//     border-radius: 5px;\r\n//     padding: 1rem;\r\n//     grid-gap: 1rem;\r\n//     height: 398px;\r\n//     overflow-y: scroll;\r\n    \r\n//     input {\r\n//         font-size: 15px;\r\n//         margin-right: 5px;\r\n//         width: 100%;\r\n//     }\r\n\r\n//     select {\r\n//         font-size: 15px !important;\r\n//         margin-right: 5px;\r\n//         width: 100%;\r\n//         max-width: none !important;\r\n//         height: 37px;\r\n\r\n//         option {\r\n//             font-size: 15px;\r\n//         }\r\n//     }\r\n\r\n\r\n//     .side-by-side {\r\n//         display: grid;\r\n//         grid-template-columns: 1fr 1fr;\r\n//         grid-gap: 22px;\r\n//     }\r\n// `;\r\n\r\n// const SHIPPING_QUERY = gql`\r\n//     query SHIPPING_QUERY {\r\n//         allShippings {\r\n//             id\r\n//             type\r\n//             amount\r\n//             description\r\n//         }\r\n//     }\r\n// `;\r\n\r\n// const CREATE_ORDER_MUTATION = gql`\r\n//     mutation CREATE_ORDER_MUTATION ($token: String!) {\r\n//         checkout(token: $token) {\r\n//             id\r\n//             charge\r\n//             total\r\n//             items {\r\n//                 id\r\n//                 name\r\n//             }\r\n//         }\r\n//     }\r\n// `;\r\n\r\n// const stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\n// function CheckoutForm() {\r\n\r\n//     const form = useRef();\r\n//     const [status, setStatus] = useState(undefined);\r\n\r\n//     const user = useUser();\r\n\r\n//     const [error, setError] = useState();\r\n//     const [loading, setLoading] = useState(false);\r\n//     const stripe = useStripe();\r\n//     const router = useRouter();\r\n//     const elements = useElements();\r\n//     const [name, setName] = useState('');\r\n//     const [email, setEmail] = useState(user.email);\r\n//     const [postal, setPostal] = useState('');\r\n//     const [city, setCity] = useState('');\r\n//     const [country, setCountry] = useState('');\r\n//     const [line1, setLine1] = useState('');\r\n//     const [line2, setLine2] = useState('');\r\n//     const [state, setState] = useState('');\r\n\r\n//     const [shipEmail, setShipEmail] = useState(user.email);\r\n\r\n//     const { closeCart } = useCart();\r\n\r\n//     const { \r\n//         // Shipping States\r\n//         shipName, \r\n//         shipPostal,\r\n//         shipCity,\r\n//         shipCountry,\r\n//         shipLine1,\r\n//         shipLine2,\r\n//         shipState,\r\n//         shippingMethod,\r\n//         paymentInfo,\r\n\r\n//         //Shipping Set States\r\n//         onChangeShipName,\r\n//         onChangeShipPostal,\r\n//         onChangeShipCity,\r\n//         onChangeShipCountry,\r\n//         onChangeShipLine1,\r\n//         onChangeShipLine2,\r\n//         onChangeShipState,\r\n//         onChangeShippingMethod,\r\n//         setPaymentInfo\r\n//     } = useCheckoutMethod();\r\n\r\n//     console.log(shippingMethod, shipName, shipEmail, 'test');\r\n\r\n//     // console.log(setShipName);\r\n\r\n//     const [checkout, {error: graphQLError}] = useMutation(\r\n//         CREATE_ORDER_MUTATION,\r\n//         {\r\n//             refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n//         }\r\n//     );\r\n\r\n//     const { data } = useQuery(SHIPPING_QUERY);\r\n\r\n//     console.log(data?.allShippings);\r\n\r\n//     async function handleSubmit(e) {\r\n//         //1. Stop the form from submitting and turn the loader one\r\n//         e.preventDefault();\r\n\r\n//         emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz')\r\n//         .then((result) => {\r\n//             console.log(result.text);\r\n//             setStatus({type: 'result'});\r\n//         }, (error) => {\r\n//             console.log(error.text);\r\n//             setStatus({type: 'error'})\r\n//         });\r\n\r\n//         setLoading(true);\r\n//         console.log('We gotta do some work...');\r\n//         //2. Start the page transition\r\n//         nProgress.start();\r\n//         //3. Create the payment method via stripe\r\n//         const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n//             type: 'card',\r\n//             card: elements.getElement(CardElement),\r\n//             billing_details: {\r\n//                 email,\r\n//                 name,\r\n//                 address: {\r\n//                     city: city,\r\n//                     country: country,\r\n//                     line1: line1,\r\n//                     line2: line2,\r\n//                     postal_code: postal,\r\n//                     state: state\r\n//                 }\r\n//             }\r\n//         });\r\n\r\n//         //4. Handle any errors from stripe (Token comes back here if successful)\r\n//         if (error) {\r\n//             setError(error);\r\n//             nProgress.done();\r\n//             return; //stops the checkout from happening\r\n//         }\r\n//         //5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n//         const order = await checkout({\r\n//             variables: {\r\n//                 token: paymentMethod.id,\r\n//             },\r\n//         });\r\n//         console.log(`Finished with the order!!`);\r\n\r\n//         setPaymentInfo(order.data.checkout.total);\r\n\r\n//         console.log(paymentInfo, \"test\");\r\n\r\n//         // console.log(option);\r\n\r\n//         //6. Change the page to vie the order\r\n//         router.push({\r\n//             pathname: `/order/[id]`,\r\n//             query: { id: order.data.checkout.id },\r\n//         });\r\n        \r\n//         //7. Close the cart \r\n//         closeCart()\r\n\r\n//         //8. Turn the loader off\r\n//         setLoading(false);\r\n//         nProgress.done();\r\n//     }\r\n\r\n//     return (\r\n//         <CheckoutFormStyles ref={form} method=\"POST\" onSubmit={handleSubmit}>\r\n//             <fieldset>\r\n//                 <div className=\"side-by-side\">\r\n//                     <div>\r\n//                          <input\r\n//                             id=\"email\"\r\n//                             type=\"hidden\"\r\n//                             required\r\n//                             placeholder=\"Email\"\r\n//                             value={paymentInfo}\r\n//                         />\r\n//                         <input\r\n//                             id=\"email\"\r\n//                             type=\"hidden\"\r\n//                             required\r\n//                             placeholder=\"Email\"\r\n//                             value={email}\r\n//                             onChange={(e) => {\r\n//                             setEmail(e.target.value);\r\n//                             }}\r\n//                         />\r\n//                         Billing Details\r\n//                         <input\r\n//                             id=\"name\"\r\n//                             required\r\n//                             placeholder=\"Full Name\"\r\n//                             value={name}\r\n//                             onChange={(e) => {\r\n//                             setName(e.target.value);\r\n//                             }}\r\n//                         />\r\n//                         <input\r\n//                             id=\"line1\"\r\n//                             required\r\n//                             placeholder=\"Address Line1\"\r\n//                             value={line1}\r\n//                             onChange={(e) => {\r\n//                             setLine1(e.target.value);\r\n//                             }}\r\n//                         />\r\n//                         <input\r\n//                             id=\"line2\"\r\n//                             placeholder=\"Address Line2\"\r\n//                             value={line2}\r\n//                             onChange={(e) => {\r\n//                             setLine2(e.target.value);\r\n//                             }}\r\n//                         />\r\n//                         <input\r\n//                             id=\"city\"\r\n//                             required\r\n//                             placeholder=\"City\"\r\n//                             value={city}\r\n//                             onChange={(e) => {\r\n//                             setCity(e.target.value);\r\n//                             }}\r\n//                         />\r\n//                         <input\r\n//                             id=\"country\"\r\n//                             required\r\n//                             placeholder=\"Country\"\r\n//                             value={country}\r\n//                             onChange={(e) => {\r\n//                             setCountry(e.target.value);\r\n//                             }}\r\n//                         />\r\n//                         <input\r\n//                             id=\"state\"\r\n//                             required\r\n//                             placeholder=\"State/County\"\r\n//                             value={state}\r\n//                             onChange={(e) => {\r\n//                             setState(e.target.value);\r\n//                             }}\r\n//                         />\r\n//                         <input\r\n//                             id=\"postal\"\r\n//                             required\r\n//                             placeholder=\"Post Code\"\r\n//                             value={postal}\r\n//                             onChange={(e) => {\r\n//                             setPostal(e.target.value);\r\n//                             }}\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <input\r\n//                             id=\"email\"\r\n//                             type=\"hidden\"\r\n//                             required\r\n//                             placeholder=\"Email\"\r\n//                             value={shipEmail}\r\n//                             onChange={(e) => {\r\n//                             setShipEmail(e.target.value);\r\n//                             }}\r\n//                         />\r\n//                         Shipping Details\r\n//                         <input\r\n//                             id=\"shipName\"\r\n//                             required\r\n//                             placeholder=\"Full Name\"\r\n//                             value={shipName}\r\n//                             onChange={onChangeShipName}\r\n//                         />\r\n//                         <input\r\n//                             id=\"shipLine1\"\r\n//                             required\r\n//                             placeholder=\"Address Line1\"\r\n//                             value={shipLine1}\r\n//                             onChange={onChangeShipLine1}\r\n//                         />\r\n//                         <input\r\n//                             id=\"shipLine2\"\r\n//                             placeholder=\"Address Line2\"\r\n//                             value={shipLine2}\r\n//                             onChange={onChangeShipLine2}\r\n//                         />\r\n//                         <input\r\n//                             id=\"shipCity\"\r\n//                             required\r\n//                             placeholder=\"City\"\r\n//                             value={shipCity}\r\n//                             onChange={onChangeShipCity}\r\n//                         />\r\n//                         <input\r\n//                             id=\"shipCountry\"\r\n//                             required\r\n//                             placeholder=\"Country\"\r\n//                             value={shipCountry}\r\n//                             onChange={onChangeShipCountry}\r\n//                         />\r\n//                         <input\r\n//                             id=\"shipState\"\r\n//                             required\r\n//                             placeholder=\"State/County\"\r\n//                             value={shipState}\r\n//                             onChange={onChangeShipState}\r\n//                         />\r\n//                         <input\r\n//                             id=\"shipPostal\"\r\n//                             required\r\n//                             placeholder=\"Post Code\"\r\n//                             value={shipPostal}\r\n//                             onChange={onChangeShipPostal}\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <select\r\n//                     name=\"selectPaymentMethod\"\r\n//                     id=\"selectPaymentMethod\"\r\n//                     onChange={onChangeShippingMethod}\r\n//                     value={shippingMethod}\r\n//                     >\r\n//                         <option value=\"Select Shipping Method\">Select Shipping Method</option>\r\n//                         {data?.allShippings.map(shippingMethod => <option value={`${shippingMethod.type} - ${shippingMethod.amount}`}>{shippingMethod.type} - {shippingMethod.amount}</option>)}\r\n//                 </select>\r\n\r\n//                 {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n//                 {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\r\n//                 <CardElement />\r\n//                 <button id=\"buyIt\" className=\"btn btn-success checkout\" type=\"submit\">Buy Now <FontAwesomeIcon icon={faChevronRight} /></button>\r\n//             </fieldset>\r\n//         </CheckoutFormStyles>\r\n//     );\r\n// }\r\n\r\n// function Checkout() {\r\n//     return (\r\n//         <Elements stripe={stripeLib}>\r\n//             <CheckoutForm />\r\n//         </Elements>\r\n//     )\r\n// }\r\n\r\n// export {Checkout};"]},"metadata":{},"sourceType":"script"}