{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Checkout.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { CURRENT_USER_QUERY, useUser } from './User';\nimport { useRouter } from 'next/dist/client/router';\nimport { useCart } from '../lib/cartState';\nimport useForm from '../lib/useForm';\nimport emailjs from 'emailjs-com';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"yxfk2z-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\n        checkout(token: $token) {\n            id\n            charge\n            total\n            items {\n                id\n                name\n            }\n        }\n    }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  var _billingDetails$addre, _billingDetails$addre2, _billingDetails$addre3, _billingDetails$addre4, _billingDetails$addre5;\n\n  const form = useRef();\n  const {\n    0: status,\n    1: setStatus\n  } = useState(undefined); // const { inputs, handleChange } = useForm({\n  //     email: '',\n  //     name: '',\n  // });\n\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const router = useRouter();\n  const elements = useElements();\n  const {\n    0: billingDetails,\n    1: setBillingDetails\n  } = useState({\n    email: \"\",\n    phone: \"\",\n    name: \"\",\n    address: {\n      city: \"\",\n      country: \"\",\n      line1: \"\",\n      line2: \"\",\n      postal_code: \"\",\n      state: \"\"\n    }\n  });\n  const {\n    0: shippingDetails,\n    1: setShippingDetails\n  } = useState({\n    email: \"\",\n    phone: \"\",\n    name: \"\",\n    address: {\n      city: \"\",\n      country: \"\",\n      line1: \"\",\n      line2: \"\",\n      postal_code: \"\",\n      state: \"\"\n    }\n  });\n  const {\n    closeCart\n  } = useCart();\n  const [checkout, {\n    error: graphQLError\n  }] = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n  const user = useUser(); // console.log(user);\n\n  async function handleSubmit(e) {\n    //1. Stop the form from submitting and turn the loader one\n    e.preventDefault();\n    emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz').then(result => {\n      console.log(result.text);\n      setStatus({\n        type: 'result'\n      });\n    }, error => {\n      console.log(error.text);\n      setStatus({\n        type: 'error'\n      });\n    });\n    setLoading(true);\n    console.log('We gotta do some work...'); //2. Start the page transition\n\n    nProgress.start(); //3. Create the payment method via stripe\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: billingDetails\n    });\n    console.log(paymentMethod); //4. Handle any errors from stripe (Token comes back here if successful)\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return; //stops the checkout from happening\n    } //5. Send the token from step 3 to our keystone server, via a custom mutation!\n\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    });\n    console.log(`Finished with the order!!`);\n    console.log(order); //6. Change the page to vie the order\n\n    router.push({\n      pathname: `/order/[id]`,\n      query: {\n        id: order.data.checkout.id\n      }\n    }); //7. Close the cart \n\n    closeCart(); //8. Turn the loader off\n\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    ref: form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      name: \"email\",\n      placeholder: \"Your Email Address\",\n      value: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"FormGroup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        label: \"Name\",\n        id: \"name\",\n        type: \"text\",\n        placeholder: \"Jane Doe\",\n        required: true,\n        autoComplete: \"name\",\n        value: billingDetails.name,\n        onChange: e => {\n          setBillingDetails(_objectSpread(_objectSpread({}, billingDetails), {}, {\n            name: e.target.value\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        label: \"Email\",\n        id: \"email\",\n        type: \"email\",\n        placeholder: \"janedoe@gmail.com\",\n        required: true,\n        autoComplete: \"email\",\n        value: billingDetails.email,\n        onChange: e => {\n          setBillingDetails(_objectSpread(_objectSpread({}, billingDetails), {}, {\n            email: e.target.value\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        label: \"Phone\",\n        id: \"phone\",\n        type: \"tel\",\n        placeholder: \"(941) 555-0123\",\n        required: true,\n        autoComplete: \"tel\",\n        value: billingDetails.phone,\n        onChange: e => {\n          setBillingDetails(_objectSpread(_objectSpread({}, billingDetails), {}, {\n            phone: e.target.value\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        label: \"Line1\",\n        id: \"line1\",\n        type: \"text\",\n        placeholder: \"Address Line 1\",\n        required: true,\n        autoComplete: \"line1\",\n        value: billingDetails === null || billingDetails === void 0 ? void 0 : (_billingDetails$addre = billingDetails.address) === null || _billingDetails$addre === void 0 ? void 0 : _billingDetails$addre.line1,\n        onChange: e => {\n          setBillingDetails(_objectSpread(_objectSpread({}, billingDetails.address), {}, {\n            line1: e.target.value\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        label: \"Line2\",\n        id: \"line2\",\n        type: \"text\",\n        placeholder: \"Address Line 2\",\n        required: true,\n        autoComplete: \"line2\",\n        value: billingDetails === null || billingDetails === void 0 ? void 0 : (_billingDetails$addre2 = billingDetails.address) === null || _billingDetails$addre2 === void 0 ? void 0 : _billingDetails$addre2.line2,\n        onChange: e => {\n          setBillingDetails(_objectSpread(_objectSpread({}, billingDetails.address), {}, {\n            line2: e.target.value\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        label: \"City\",\n        id: \"city\",\n        type: \"text\",\n        placeholder: \"City\",\n        required: true,\n        autoComplete: \"city\",\n        value: billingDetails === null || billingDetails === void 0 ? void 0 : (_billingDetails$addre3 = billingDetails.address) === null || _billingDetails$addre3 === void 0 ? void 0 : _billingDetails$addre3.city,\n        onChange: e => {\n          setBillingDetails(_objectSpread(_objectSpread({}, billingDetails.address), {}, {\n            city: e.target.value\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        label: \"Country\",\n        id: \"country\",\n        type: \"text\",\n        placeholder: \"Country\",\n        required: true,\n        autoComplete: \"country\",\n        value: billingDetails === null || billingDetails === void 0 ? void 0 : (_billingDetails$addre4 = billingDetails.address) === null || _billingDetails$addre4 === void 0 ? void 0 : _billingDetails$addre4.country,\n        onChange: e => {\n          setBillingDetails(_objectSpread(_objectSpread({}, billingDetails.address), {}, {\n            country: e.target.value\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        label: \"State\",\n        id: \"state\",\n        type: \"text\",\n        placeholder: \"State/County\",\n        required: true,\n        autoComplete: \"state\",\n        value: billingDetails === null || billingDetails === void 0 ? void 0 : (_billingDetails$addre5 = billingDetails.address) === null || _billingDetails$addre5 === void 0 ? void 0 : _billingDetails$addre5.state,\n        onChange: e => {\n          setBillingDetails(_objectSpread(_objectSpread({}, billingDetails.address), {}, {\n            state: e.target.value\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 23\n    }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: graphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"buyIt\",\n      className: \"btn btn-success checkout\",\n      type: \"submit\",\n      children: [\"Buy Now \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faChevronRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 91\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 9\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Checkout.js"],"names":["React","useRef","useState","styled","CardElement","Elements","useElements","useStripe","loadStripe","FontAwesomeIcon","faChevronRight","nProgress","gql","useMutation","CURRENT_USER_QUERY","useUser","useRouter","useCart","useForm","emailjs","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","status","setStatus","undefined","error","setError","loading","setLoading","stripe","router","elements","billingDetails","setBillingDetails","email","phone","name","address","city","country","line1","line2","postal_code","state","shippingDetails","setShippingDetails","closeCart","checkout","graphQLError","refetchQueries","query","user","handleSubmit","e","preventDefault","sendForm","current","then","result","console","log","text","type","start","paymentMethod","createPaymentMethod","card","getElement","billing_details","done","order","variables","token","id","push","pathname","data","target","value","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    CardElement,\r\n    Elements,\r\n    useElements,\r\n    useStripe,\r\n  } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faChevronRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport nProgress from 'nprogress';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport { CURRENT_USER_QUERY, useUser } from './User';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport { useCart } from '../lib/cartState';\r\nimport useForm from '../lib/useForm';\r\nimport emailjs from 'emailjs-com';\r\n\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n    box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n    border: 1px solid rgba(0, 0, 0, 0.06);\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\r\n        checkout(token: $token) {\r\n            id\r\n            charge\r\n            total\r\n            items {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n\r\n    const form = useRef();\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    // const { inputs, handleChange } = useForm({\r\n    //     email: '',\r\n    //     name: '',\r\n    // });\r\n\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const router = useRouter();\r\n    const elements = useElements();\r\n    const [billingDetails, setBillingDetails] = useState({\r\n        email: \"\",\r\n        phone: \"\",\r\n        name: \"\",\r\n        address: {\r\n            city: \"\",\r\n            country: \"\",\r\n            line1: \"\",\r\n            line2: \"\",\r\n            postal_code: \"\",\r\n            state: \"\",\r\n        }\r\n    });\r\n\r\n    const [shippingDetails, setShippingDetails] = useState({\r\n        email: \"\",\r\n        phone: \"\",\r\n        name: \"\",\r\n        address: {\r\n            city: \"\",\r\n            country: \"\",\r\n            line1: \"\",\r\n            line2: \"\",\r\n            postal_code: \"\",\r\n            state: \"\",\r\n        }\r\n    });\r\n\r\n\r\n    const { closeCart } = useCart();\r\n    const [checkout, {error: graphQLError}] = useMutation(\r\n        CREATE_ORDER_MUTATION,\r\n        {\r\n            refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n        }\r\n    );\r\n\r\n    const user = useUser();\r\n\t// console.log(user);\r\n\r\n    async function handleSubmit(e) {\r\n        //1. Stop the form from submitting and turn the loader one\r\n        e.preventDefault();\r\n\r\n        emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz')\r\n        .then((result) => {\r\n            console.log(result.text);\r\n            setStatus({type: 'result'});\r\n        }, (error) => {\r\n            console.log(error.text);\r\n            setStatus({type: 'error'})\r\n        });\r\n\r\n        setLoading(true);\r\n        console.log('We gotta do some work...');\r\n        //2. Start the page transition\r\n        nProgress.start();\r\n        //3. Create the payment method via stripe\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement),\r\n            billing_details: billingDetails\r\n        });\r\n        console.log(paymentMethod)\r\n        //4. Handle any errors from stripe (Token comes back here if successful)\r\n        if (error) {\r\n            setError(error);\r\n            nProgress.done();\r\n            return; //stops the checkout from happening\r\n        }\r\n        //5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n        const order = await checkout({\r\n            variables: {\r\n                token: paymentMethod.id\r\n            },\r\n        });\r\n        console.log(`Finished with the order!!`);\r\n        console.log(order);\r\n        //6. Change the page to vie the order\r\n        router.push({\r\n            pathname: `/order/[id]`,\r\n            query: { id: order.data.checkout.id },\r\n        });\r\n        //7. Close the cart \r\n        closeCart()\r\n\r\n        //8. Turn the loader off\r\n        setLoading(false);\r\n        nProgress.done();\r\n    }\r\n\r\n    return (\r\n        <CheckoutFormStyles ref={form} onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"hidden\" \r\n                name=\"email\" \r\n                placeholder=\"Your Email Address\" \r\n                value={user.email}\r\n            />\r\n            <fieldset className=\"FormGroup\">\r\n                <input\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Jane Doe\"\r\n                    required\r\n                    autoComplete=\"name\"\r\n                    value={billingDetails.name}\r\n                    onChange={(e) => {\r\n                        setBillingDetails({ ...billingDetails, name: e.target.value });\r\n                    }}\r\n                />\r\n                <input\r\n                    label=\"Email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"janedoe@gmail.com\"\r\n                    required\r\n                    autoComplete=\"email\"\r\n                    value={billingDetails.email}\r\n                    onChange={(e) => {\r\n                        setBillingDetails({ ...billingDetails, email: e.target.value });\r\n                    }}\r\n                />\r\n                <input\r\n                    label=\"Phone\"\r\n                    id=\"phone\"\r\n                    type=\"tel\"\r\n                    placeholder=\"(941) 555-0123\"\r\n                    required\r\n                    autoComplete=\"tel\"\r\n                    value={billingDetails.phone}\r\n                    onChange={(e) => {\r\n                        setBillingDetails({ ...billingDetails, phone: e.target.value });\r\n                    }}\r\n                />\r\n                <input\r\n                    label=\"Line1\"\r\n                    id=\"line1\"\r\n                    type=\"text\"\r\n                    placeholder=\"Address Line 1\"\r\n                    required\r\n                    autoComplete=\"line1\"\r\n                    value={billingDetails?.address?.line1}\r\n                    onChange={(e) => {\r\n                        setBillingDetails({ ...billingDetails.address, line1: e.target.value });\r\n                    }}\r\n                />\r\n                <input\r\n                    label=\"Line2\"\r\n                    id=\"line2\"\r\n                    type=\"text\"\r\n                    placeholder=\"Address Line 2\"\r\n                    required\r\n                    autoComplete=\"line2\"\r\n                    value={billingDetails?.address?.line2}\r\n                    onChange={(e) => {\r\n                        setBillingDetails({ ...billingDetails.address, line2: e.target.value });\r\n                    }}\r\n                />\r\n                <input\r\n                    label=\"City\"\r\n                    id=\"city\"\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    required\r\n                    autoComplete=\"city\"\r\n                    value={billingDetails?.address?.city}\r\n                    onChange={(e) => {\r\n                        setBillingDetails({ ...billingDetails.address, city: e.target.value });\r\n                    }}\r\n                />\r\n                <input\r\n                    label=\"Country\"\r\n                    id=\"country\"\r\n                    type=\"text\"\r\n                    placeholder=\"Country\"\r\n                    required\r\n                    autoComplete=\"country\"\r\n                    value={billingDetails?.address?.country}\r\n                    onChange={(e) => {\r\n                        setBillingDetails({ ...billingDetails.address, country: e.target.value });\r\n                    }}\r\n                />\r\n                <input\r\n                    label=\"State\"\r\n                    id=\"state\"\r\n                    type=\"text\"\r\n                    placeholder=\"State/County\"\r\n                    required\r\n                    autoComplete=\"state\"\r\n                    value={billingDetails?.address?.state}\r\n                    onChange={(e) => {\r\n                        setBillingDetails({ ...billingDetails.address, state: e.target.value });\r\n                    }}\r\n                />\r\n            </fieldset>\r\n            {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n            {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\r\n            <CardElement />\r\n            <button id=\"buyIt\" className=\"btn btn-success checkout\" type=\"submit\">Buy Now <FontAwesomeIcon icon={faChevronRight} /></button>\r\n        </CheckoutFormStyles>\r\n    );\r\n}\r\n\r\nfunction Checkout() {\r\n    return (\r\n        <Elements stripe={stripeLib}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport {Checkout};"]},"metadata":{},"sourceType":"module"}