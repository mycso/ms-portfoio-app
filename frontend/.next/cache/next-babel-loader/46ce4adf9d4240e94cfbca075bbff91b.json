{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\UpdateProduct.js\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport styled from 'styled-components';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nimport Form from './styles/Form';\nimport DisplayError from './ErrorMessage';\nimport Router from 'next/router';\nimport { useState } from 'react';\nconst SINGLE_PRODUCT_QUERY = gql`\n    query SINGLE_PRODUCT_QUERY($id: ID!) {\n        Product(where: { id: $id }) {\n            id\n            name\n            description\n            inStock\n            ageRange\n            author\n            price   \n            photo {\n                id\n                image {\n                publicUrlTransformed\n                }\n            }\n            photo2 {\n                id\n                image {\n                publicUrlTransformed\n                }\n            }\n            photo3 {\n                id\n                image {\n                publicUrlTransformed\n                }\n            }\n            photo4 {\n                id\n                image {\n                publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION (\n        $id: ID!\n        $name: String!\n        $ageRange: String!\n        $inStock: String!\n        $author: String!\n        $price: Int!\n        $image: Upload\n        $image2: Upload\n        $image3: Upload\n        $image4: Upload\n        $description: String!\n    ){\n        updateProduct(\n            id: $id\n            data: {\n                name: $name\n                ageRange: $ageRange\n                inStock: $inStock\n                author: $author\n                price: $price\n                description: $description\n                status: \"AVAILABLE\"\n                photo: { update: { image: $image, altText: $name } }\n                photo2: { update: { image: $image2, altText: $name } }\n                photo3: { update: { image: $image3, altText: $name } }\n                photo4: { update: { image: $image4, altText: $name } }\n            }\n        ) {\n            id\n            name\n            description\n            inStock\n            ageRange\n            author\n            price\n            photo {\n                id\n                image {\n                publicUrlTransformed\n                }\n            }\n            photo2 {\n                id\n                image {\n                publicUrlTransformed\n                }\n            }\n            photo3 {\n                id\n                image {\n                publicUrlTransformed\n                }\n            }\n            photo4 {\n                id\n                image {\n                publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nconst StyledUploadFileBtn = styled.div.withConfig({\n  displayName: \"UpdateProduct__StyledUploadFileBtn\",\n  componentId: \"sc-8gjxqg-0\"\n})([\"label{padding:5px 10px;background:#efefef;position:relative;color:#606060;border-radius:2px;text-align:center;cursor:pointer}.upload-btn-file{position:absolute;z-index:1000;opacity:0;cursor:pointer;background:#efefef;color:#606060;right:0;top:0;height:100%;font-size:24px;width:100%;cursor:pointer}\"]);\nexport default function UpdateProduct({\n  id\n}) {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id\n    }\n  });\n  const [updateProduct, {\n    data: updateData,\n    error: updateError,\n    loading: updateLoading\n  }] = useMutation(UPDATE_PRODUCT_MUTATION);\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm(data === null || data === void 0 ? void 0 : data.Product);\n  const {\n    0: imageUpload,\n    1: setImageUpload\n  } = useState('');\n  const {\n    0: url,\n    1: setUrl\n  } = useState('');\n\n  const uploadFile = () => {\n    console.log('uploading file...'); // const files = e.target.files;\n\n    const data = new FormData();\n    data.append('file', imageUpload);\n    data.append('upload_preset', 'staxxxx');\n    fetch('https://api.cloudinary.com/v1_1/dcnxv4ksy/image/upload', {\n      method: 'POST',\n      body: data\n    }).then(resp => resp.json()).then(data => {\n      setUrl(data.url);\n    }).catch(err => console.log(err));\n  }; // console.log(inputs);\n  // console.log(imageUpload);\n  // console.log(url);\n\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault();\n      const res = await updateProduct({\n        variables: {\n          id,\n          name: inputs.name,\n          description: inputs.description,\n          price: inputs.price,\n          inStock: inputs.inStock,\n          ageRange: inputs.ageRange,\n          author: inputs.author,\n          image: inputs.image,\n          image2: inputs.image2,\n          image3: inputs.image3,\n          image4: inputs.image4\n        }\n      }).catch(console.error);\n      console.log(res); //Submit the inputfield to the backend\n      // const res = await createProduct();\n      // clearForm();\n\n      Router.push({\n        pathname: `/`\n      }); //     pathname: `/product/${res.data.createProduct.id}`,\n      // });\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(StyledUploadFileBtn, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          width: \"200\",\n          src: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload Book Image 1 Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image\",\n            name: \"image\",\n            className: \"upload-btn-file\",\n            required: true,\n            onChange: e => setImageUpload(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: uploadFile,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Book Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Book Title\",\n          required: true,\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: [\"Book Author\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"author\",\n          name: \"author\",\n          placeholder: \"Book Author\",\n          required: true,\n          value: inputs.author,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"Price - (e.g 499 = \\xA34.99)\",\n          required: true,\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ageRange\",\n        children: [\"In Stock\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"inStock\",\n          name: \"inStock\",\n          placeholder: \"In Stock - (e.g Only 5 left)\",\n          required: true,\n          value: inputs.inStock,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ageRange\",\n        children: [\"Age Range\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ageRange\",\n          name: \"ageRange\",\n          placeholder: \"Enter an Age Range\",\n          required: true,\n          value: inputs.ageRange,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          rows: \"10\",\n          placeholder: \"Enter A Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/UpdateProduct.js"],"names":["useQuery","useMutation","gql","useForm","styled","ALL_PRODUCTS_QUERY","Form","DisplayError","Router","useState","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","StyledUploadFileBtn","div","UpdateProduct","id","loading","error","data","variables","updateProduct","updateData","updateError","updateLoading","inputs","handleChange","clearForm","resetForm","Product","imageUpload","setImageUpload","url","setUrl","uploadFile","console","log","FormData","append","fetch","method","body","then","resp","json","catch","err","e","preventDefault","res","name","description","price","inStock","ageRange","author","image","image2","image3","image4","push","pathname","target","files"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,MAAMC,oBAAoB,GAAGR,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApCA;AAsCA,MAAMS,uBAAuB,GAAGT,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/DA;AAiEA,MAAMU,mBAAmB,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,kTAAzB;AA2BA,eAAe,SAASC,aAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAgC;AAE3C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BlB,QAAQ,CACxCU,oBADwC,EAClB;AACnBS,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AADQ,GADkB,CAAzC;AAKA,QAAM,CAACK,aAAD,EAAgB;AAAEF,IAAAA,IAAI,EAAEG,UAAR;AAAoBJ,IAAAA,KAAK,EAAEK,WAA3B;A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","sourcesContent":["import { useQuery, useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport useForm from '../lib/useForm';\r\nimport styled from 'styled-components';\r\nimport { ALL_PRODUCTS_QUERY } from './Products';\r\nimport Form from './styles/Form';\r\nimport DisplayError from './ErrorMessage';\r\nimport Router from 'next/router';\r\nimport { useState } from 'react';\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n    query SINGLE_PRODUCT_QUERY($id: ID!) {\r\n        Product(where: { id: $id }) {\r\n            id\r\n            name\r\n            description\r\n            inStock\r\n            ageRange\r\n            author\r\n            price   \r\n            photo {\r\n                id\r\n                image {\r\n                publicUrlTransformed\r\n                }\r\n            }\r\n            photo2 {\r\n                id\r\n                image {\r\n                publicUrlTransformed\r\n                }\r\n            }\r\n            photo3 {\r\n                id\r\n                image {\r\n                publicUrlTransformed\r\n                }\r\n            }\r\n            photo4 {\r\n                id\r\n                image {\r\n                publicUrlTransformed\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n    mutation UPDATE_PRODUCT_MUTATION (\r\n        $id: ID!\r\n        $name: String!\r\n        $ageRange: String!\r\n        $inStock: String!\r\n        $author: String!\r\n        $price: Int!\r\n        $image: Upload\r\n        $image2: Upload\r\n        $image3: Upload\r\n        $image4: Upload\r\n        $description: String!\r\n    ){\r\n        updateProduct(\r\n            id: $id\r\n            data: {\r\n                name: $name\r\n                ageRange: $ageRange\r\n                inStock: $inStock\r\n                author: $author\r\n                price: $price\r\n                description: $description\r\n                status: \"AVAILABLE\"\r\n                photo: { update: { image: $image, altText: $name } }\r\n                photo2: { update: { image: $image2, altText: $name } }\r\n                photo3: { update: { image: $image3, altText: $name } }\r\n                photo4: { update: { image: $image4, altText: $name } }\r\n            }\r\n        ) {\r\n            id\r\n            name\r\n            description\r\n            inStock\r\n            ageRange\r\n            author\r\n            price\r\n            photo {\r\n                id\r\n                image {\r\n                publicUrlTransformed\r\n                }\r\n            }\r\n            photo2 {\r\n                id\r\n                image {\r\n                publicUrlTransformed\r\n                }\r\n            }\r\n            photo3 {\r\n                id\r\n                image {\r\n                publicUrlTransformed\r\n                }\r\n            }\r\n            photo4 {\r\n                id\r\n                image {\r\n                publicUrlTransformed\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst StyledUploadFileBtn = styled.div`\r\nlabel{\r\n  padding:5px 10px;\r\n  background:#efefef;\r\n  position:relative;\r\n  color:#606060;\r\n  border-radius:2px;\r\n  text-align:center;\r\n  cursor:pointer\r\n}\r\n\r\n.upload-btn-file {\r\n    position: absolute;\r\n    z-index: 1000;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n    background:#efefef;\r\n    color:#606060;\r\n    right: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    font-size: 24px;\r\n    width: 100%;\r\n    cursor:pointer\r\n}\r\n`;\r\n\r\nexport default function UpdateProduct ({ id }) {\r\n\r\n    const { loading, error, data } = useQuery\r\n    (SINGLE_PRODUCT_QUERY, {\r\n        variables: { id }\r\n    });\r\n\r\n    const [updateProduct, { data: updateData, error: updateError, loading: updateLoading }] = useMutation\r\n    (UPDATE_PRODUCT_MUTATION);\r\n\r\n    const { inputs, handleChange, clearForm, resetForm } = useForm(data?.Product);\r\n\r\n    const [imageUpload, setImageUpload] = useState('');\r\n    const [url, setUrl] = useState('');\r\n\r\n    const uploadFile = () => {\r\n\t\tconsole.log('uploading file...');\r\n\r\n\t\t// const files = e.target.files;\r\n\t\tconst data = new FormData();\r\n\t\tdata.append('file', imageUpload);\r\n\t\tdata.append('upload_preset', 'staxxxx');\r\n\r\n\t\tfetch('https://api.cloudinary.com/v1_1/dcnxv4ksy/image/upload', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: data,\r\n\t\t})\r\n\t\t.then(resp => resp.json())\r\n        .then(data => {\r\n        setUrl(data.url)\r\n        })\r\n        .catch(err => console.log(err))\r\n    };\r\n\r\n    // console.log(inputs);\r\n    // console.log(imageUpload);\r\n    // console.log(url);\r\n\r\n    if (loading) return <p>loading...</p>;\r\n\r\n    return (\r\n        <Form \r\n            onSubmit={async (e) => {\r\n                e.preventDefault();\r\n                const res = await updateProduct({\r\n                    variables: {\r\n                        id,\r\n                        name: inputs.name,\r\n                        description: inputs.description,\r\n                        price: inputs.price,    \r\n                        inStock: inputs.inStock,\r\n                        ageRange: inputs.ageRange,\r\n                        author: inputs.author,\r\n                        image: inputs.image, \r\n                        image2: inputs.image2,      \r\n                        image3: inputs.image3,  \r\n                        image4: inputs.image4,                      \r\n                    },\r\n                }).catch(console.error);\r\n                console.log(res);\r\n                //Submit the inputfield to the backend\r\n                // const res = await createProduct();\r\n                // clearForm();\r\n                Router.push({ pathname: `/`})\r\n                //     pathname: `/product/${res.data.createProduct.id}`,\r\n                // });\r\n            }}\r\n        >\r\n            <DisplayError error={error || updateError} />\r\n            <fieldset disabled={updateLoading} aria-busy={updateLoading}>\r\n                <StyledUploadFileBtn>\r\n                        <img \r\n                            type=\"file\" \r\n                            id=\"image\" \r\n                            name=\"image\"\r\n                            width=\"200\"    \r\n                            src={url}\r\n                        />\r\n                    <label htmlFor=\"image\">\r\n                        <p>Upload Book Image 1 Here</p>\r\n\r\n                        <input \r\n                            type=\"file\" \r\n                            id=\"image\" \r\n                            name=\"image\"\r\n                            className=\"upload-btn-file\"\r\n                            required\r\n                            onChange={(e) => setImageUpload(e.target.files[0])}\r\n                        />\r\n                        <button onClick={uploadFile}>Upload</button>\r\n\r\n                    </label>\r\n                </StyledUploadFileBtn>\r\n                {/* <StyledUploadFileBtn>\r\n                    <label htmlFor=\"image2\">\r\n\r\n                        {inputs?.photo2?.image?.publicUrlTransformed && (\r\n                            <img \r\n                                type=\"file\" \r\n                                id=\"image2\" \r\n                                name=\"image2\"\r\n                                width=\"200\"    \r\n                                src={inputs?.photo2?.image?.publicUrlTransformed} \r\n                                alt={inputs?.photo2?.name} \r\n                            />\r\n                        )}\r\n\r\n                        {!inputs?.image2 && (\r\n                            <p>Upload Book Image 2 Here</p>\r\n                        )}\r\n\r\n                        {inputs?.image2 && (\r\n                            <p>{inputs?.image2?.name}</p>\r\n                        )}\r\n\r\n                        <input \r\n                            type=\"file\" \r\n                            id=\"image2\" \r\n                            name=\"image2\"\r\n                            className=\"upload-btn-file\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            alt={inputs?.image2?.name}\r\n                        />\r\n\r\n                    </label>\r\n                </StyledUploadFileBtn>\r\n                <StyledUploadFileBtn>\r\n                    <label htmlFor=\"image3\">\r\n\r\n                        {inputs?.photo3?.image?.publicUrlTransformed && (\r\n                            <img \r\n                                type=\"file\" \r\n                                id=\"image3\" \r\n                                name=\"image3\"\r\n                                width=\"200\"    \r\n                                src={inputs?.photo3?.image?.publicUrlTransformed} \r\n                                alt={inputs?.photo3?.name} \r\n                            />\r\n                        )}\r\n\r\n                        {!inputs?.image3 && (\r\n                            <p>Upload Book Image 3 Here</p>\r\n                        )}\r\n\r\n                        {inputs?.image3 && (\r\n                            <p>{inputs?.image3?.name}</p>\r\n                        )}\r\n\r\n                        <input \r\n                            type=\"file\" \r\n                            id=\"image3\" \r\n                            name=\"image3\"\r\n                            className=\"upload-btn-file\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            alt={inputs?.image3?.name}\r\n                        />\r\n\r\n                    </label>\r\n                </StyledUploadFileBtn>\r\n                <StyledUploadFileBtn>\r\n                    <label htmlFor=\"image\">\r\n\r\n                        {inputs?.photo4?.image?.publicUrlTransformed && (\r\n                            <img \r\n                                type=\"file\" \r\n                                id=\"image4\" \r\n                                name=\"image4\"\r\n                                width=\"200\"    \r\n                                src={inputs?.photo4?.image4?.publicUrlTransformed}\r\n                                alt={inputs?.photo4?.name} \r\n                            />\r\n                        )}\r\n                        \r\n                        {!inputs?.image4 && (\r\n                            <p>Upload Book Image 4 Here</p>\r\n                        )}\r\n\r\n                        {inputs?.image4 && (\r\n                            <p>{inputs?.image4?.name}</p>\r\n                        )}\r\n                        \r\n                        <input \r\n                            type=\"file\" \r\n                            id=\"image4\" \r\n                            name=\"image4\"\r\n                            className=\"upload-btn-file\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            alt={inputs?.image4?.name}\r\n                        />\r\n\r\n                    </label>\r\n                </StyledUploadFileBtn> */}\r\n                <label htmlFor=\"name\">\r\n                   Book Title\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"name\" \r\n                        name=\"name\" \r\n                        placeholder=\"Book Title\"\r\n                        required\r\n                        value={inputs.name}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <label htmlFor=\"author\">\r\n                    Book Author\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"author\" \r\n                        name=\"author\" \r\n                        placeholder=\"Book Author\"\r\n                        required\r\n                        value={inputs.author}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <label htmlFor=\"price\">\r\n                    Price\r\n                    <input \r\n                        type=\"number\" \r\n                        id=\"price\" \r\n                        name=\"price\" \r\n                        placeholder=\"Price - (e.g 499 = £4.99)\"\r\n                        required\r\n                        value={inputs.price}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <label htmlFor=\"ageRange\">\r\n                    In Stock\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"inStock\" \r\n                        name=\"inStock\" \r\n                        placeholder=\"In Stock - (e.g Only 5 left)\"\r\n                        required\r\n                        value={inputs.inStock}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <label htmlFor=\"ageRange\">\r\n                    Age Range\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"ageRange\" \r\n                        name=\"ageRange\" \r\n                        placeholder=\"Enter an Age Range\"\r\n                        required\r\n                        value={inputs.ageRange}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <label htmlFor=\"description\">\r\n                    Description\r\n                    <textarea \r\n                        id=\"description\" \r\n                        name=\"description\" \r\n                        rows=\"10\"\r\n                        placeholder=\"Enter A Description\" \r\n                        value={inputs.description}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Update Product</button>\r\n            </fieldset>\r\n        </Form>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}