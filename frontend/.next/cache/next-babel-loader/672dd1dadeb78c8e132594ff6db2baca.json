{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\\n        checkout(token: $token) {\\n            id\\n            charge\\n            total\\n            items {\\n                id\\n                name\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { CURRENT_USER_QUERY } from './User';\nimport { useRouter } from 'next/dist/client/router';\nimport { useCart } from '../lib/cartState';\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"yxfk2z-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar Overlay = styled.div.withConfig({\n  displayName: \"Checkout__Overlay\",\n  componentId: \"yxfk2z-1\"\n})([\"&:before{content:\\\"\\\";display:\", \";background:rgba(0,0,0,0.6);position:fixed;top:0;left:-860px;right:0;bottom:0;z-index:1031;}\"], function (props) {\n  return props.toggleOverlay ? 'block' : 'none';\n});\n_c2 = Overlay;\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var stripe = useStripe();\n  var router = useRouter();\n  var elements = useElements();\n\n  var _useCart = useCart(),\n      toggle = _useCart.toggle,\n      closeCart = _useCart.closeCart;\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      graphQLError = _useMutation2[1].error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod, order;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //1. Stop the form from submitting and turn the loader one\n              e.preventDefault();\n              setLoading(true);\n              console.log('We gotta do some work...'); //2. Start the page transition\n\n              nProgress.start(); //3. Create the payment method via stripe\n\n              _context.next = 6;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n              });\n\n            case 6:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod); //4. Handle any errors from stripe (Token comes back here if successful)\n\n              if (!error) {\n                _context.next = 14;\n                break;\n              }\n\n              setError(error);\n              nProgress.done();\n              return _context.abrupt(\"return\");\n\n            case 14:\n              _context.next = 16;\n              return checkout({\n                variables: {\n                  token: paymentMethod.id\n                }\n              });\n\n            case 16:\n              order = _context.sent;\n              console.log(\"Finished with the order!!\");\n              console.log(order);\n              closeCart(); //6. Change the page to vie the order\n\n              router.push({\n                pathname: \"/order/[id]\",\n                query: {\n                  id: order.data.checkout.id\n                }\n              }); //7. Close the cart \n\n              closeCart(); //8. Turn the loader off\n\n              setLoading(false);\n              nProgress.done();\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Overlay, {\n      toggleOverlay: !toggle,\n      onClick: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n      onSubmit: handleSubmit,\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 12\n        },\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 27\n      }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 12\n        },\n        children: graphQLError.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"buyIt\",\n        className: \"btn btn-success checkout\",\n        type: \"submit\",\n        children: [\"Buy Now \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faChevronRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 95\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CheckoutForm, \"UBjcq3LoHrdLm+MtObexweb+gvI=\", false, function () {\n  return [useStripe, useRouter, useElements, useCart, useMutation];\n});\n\n_c3 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"Overlay\");\n$RefreshReg$(_c3, \"CheckoutForm\");\n$RefreshReg$(_c4, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Checkout.js"],"names":["useState","styled","CardElement","Elements","useElements","useStripe","loadStripe","FontAwesomeIcon","faChevronRight","nProgress","gql","useMutation","CURRENT_USER_QUERY","useRouter","useCart","CheckoutFormStyles","form","Overlay","div","props","toggleOverlay","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","router","elements","toggle","closeCart","refetchQueries","query","checkout","graphQLError","handleSubmit","e","preventDefault","console","log","start","createPaymentMethod","type","card","getElement","paymentMethod","done","variables","token","id","order","push","pathname","data","handleToggle","fontSize","message","Checkout"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACIC,WADJ,EAEIC,QAFJ,EAGIC,WAHJ,EAIIC,SAJJ,QAKS,yBALT;AAMA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACIC,cADJ,QAEO,mCAFP;AAGA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,IAAMC,kBAAkB,GAAGd,MAAM,CAACe,IAAV;AAAA;AAAA;AAAA,8IAAxB;KAAMD,kB;AASN,IAAME,OAAO,GAAGhB,MAAM,CAACiB,GAAV;AAAA;AAAA;AAAA,uIAGE,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,aAAN,GAAsB,OAAtB,GAA+B,MAAnC;AAAA,CAHP,CAAb;MAAMH,O;AAcN,IAAMI,qBAAqB,GAAGX,GAAH,mBAA3B;AAcA,IAAMY,SAAS,GAAGhB,UAAU,CAACiB,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAAA,kBACM1B,QAAQ,EADd;AAAA,MACb2B,KADa;AAAA,MACNC,QADM;;AAAA,mBAEU5B,QAAQ,CAAC,KAAD,CAFlB;AAAA,MAEb6B,OAFa;AAAA,MAEJC,UAFI;;AAGpB,MAAMC,MAAM,GAAG1B,SAAS,EAAxB;AACA,MAAM2B,MAAM,GAAGnB,SAAS,EAAxB;AACA,MAAMoB,QAAQ,GAAG7B,WAAW,EAA5B;;AALoB,iBAMSU,OAAO,EANhB;AAAA,MAMZoB,MANY,YAMZA,MANY;AAAA,MAMLC,SANK,YAMLA,SANK;;AAAA,qBAOsBxB,WAAW,CACjDU,qBADiD,EAEjD;AACIe,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEzB;AAAT,KAAD;AADpB,GAFiD,CAPjC;AAAA;AAAA,MAOb0B,QAPa;AAAA,MAOKC,YAPL,oBAOFZ,KAPE;;AAAA,WAaLa,YAbK;AAAA;AAAA;;AAAA;AAAA,6EAapB,iBAA4BC,CAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACI;AACAA,cAAAA,CAAC,CAACC,cAAF;AACAZ,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAa,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAJJ,CAKI;;AACAnC,cAAAA,SAAS,CAACoC,KAAV,GANJ,CAOI;;AAPJ;AAAA,qBAQ2Cd,MAAM,CAACe,mBAAP,CAA2B;AAC9DC,gBAAAA,IAAI,EAAE,MADwD;AAE9DC,gBAAAA,IAAI,EAAEf,QAAQ,CAACgB,UAAT,CAAoB/C,WAApB;AAFwD,eAA3B,CAR3C;;AAAA;AAAA;AAQYyB,cAAAA,KARZ,yBAQYA,KARZ;AAQmBuB,cAAAA,aARnB,yBAQmBA,aARnB;AAYIP,cAAAA,OAAO,CAACC,GAAR,CAAYM,aAAZ,EAZJ,CAaI;;AAbJ,mBAcQvB,KAdR;AAAA;AAAA;AAAA;;AAeQC,cAAAA,QAAQ,CAACD,KAAD,CAAR;AACAlB,cAAAA,SAAS,CAAC0C,IAAV;AAhBR;;AAAA;AAAA;AAAA,qBAoBwBb,QAAQ,CAAC;AACzBc,gBAAAA,SAAS,EAAE;AACPC,kBAAAA,KAAK,EAAEH,aAAa,CAACI;AADd;AADc,eAAD,CApBhC;;AAAA;AAoBUC,cAAAA,KApBV;AAyBIZ,cAAAA,OAAO,CAACC,GAAR;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACApB,cAAAA,SAAS,GA3Bb,CA6BI;;AACAH,cAAAA,MAAM,CAACwB,IAAP,CAAY;AACRC,gBAAAA,QAAQ,eADA;AAERpB,gBAAAA,KAAK,EAAE;AAAEiB,kBAAAA,EAAE,EAAEC,KAAK,CAACG,IAAN,CAAWpB,QAAX,CAAoBgB;AAA1B;AAFC,eAAZ,EA9BJ,CAkCI;;AACAnB,cAAAA,SAAS,GAnCb,CAqCI;;AACAL,cAAAA,UAAU,CAAC,KAAD,CAAV;AACArB,cAAAA,SAAS,CAAC0C,IAAV;;AAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAboB;AAAA;AAAA;;AAuDpB,sBACI;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,aAAa,EAAE,CAACjB,MAAzB;AAAiC,MAAA,OAAO,EAAEyB;AAA1C;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAEnB,YAA9B;AAAA,iBACKb,KAAK,iBAAI;AAAG,QAAA,KAAK,EAAE;AAAEiC,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAAA,kBAA6BjC,KAAK,CAACkC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADd,EAEKtB,YAAY,iBAAI;AAAG,QAAA,KAAK,EAAE;AAAEqB,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAAA,kBAA6BrB,YAAY,CAACsB;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFrB,eAGI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAmB,QAAA,SAAS,EAAC,0BAA7B;AAAwD,QAAA,IAAI,EAAC,QAA7D;AAAA,4CAA8E,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAErD;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAYH;;GAnEQkB,Y;UAGUrB,S,EACAQ,S,EACET,W,EACYU,O,EACaH,W;;;MAPrCe,Y;;AAqET,SAASoC,QAAT,GAAoB;AAChB,sBACI,QAAC,QAAD;AAAU,IAAA,MAAM,EAAExC,SAAlB;AAAA,2BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MANQwC,Q;AAQT,SAAQA,QAAR","sourcesContent":["import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    CardElement,\r\n    Elements,\r\n    useElements,\r\n    useStripe,\r\n  } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faChevronRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport nProgress from 'nprogress';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport { CURRENT_USER_QUERY } from './User';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport { useCart } from '../lib/cartState';\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n    box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n    border: 1px solid rgba(0, 0, 0, 0.06);\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n`;\r\n\r\nconst Overlay = styled.div `\r\n  &:before {\r\n    content: \"\";\r\n    display: ${props => props.toggleOverlay ? 'block': 'none'};\r\n    background: rgba(0, 0, 0, 0.6);\r\n    position: fixed;\r\n    top: 0;\r\n    left: -860px;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 1031;\r\n  }\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\r\n        checkout(token: $token) {\r\n            id\r\n            charge\r\n            total\r\n            items {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const router = useRouter();\r\n    const elements = useElements();\r\n    const { toggle,closeCart } = useCart();\r\n    const [checkout, {error: graphQLError}] = useMutation(\r\n        CREATE_ORDER_MUTATION,\r\n        {\r\n            refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n        }\r\n    );\r\n    async function handleSubmit(e) {\r\n        //1. Stop the form from submitting and turn the loader one\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        console.log('We gotta do some work...');\r\n        //2. Start the page transition\r\n        nProgress.start();\r\n        //3. Create the payment method via stripe\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement),\r\n        });\r\n        console.log(paymentMethod)\r\n        //4. Handle any errors from stripe (Token comes back here if successful)\r\n        if (error) {\r\n            setError(error);\r\n            nProgress.done();\r\n            return; //stops the checkout from happening\r\n        }\r\n        //5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n        const order = await checkout({\r\n            variables: {\r\n                token: paymentMethod.id\r\n            },\r\n        });\r\n        console.log(`Finished with the order!!`);\r\n        console.log(order);\r\n        closeCart()\r\n\r\n        //6. Change the page to vie the order\r\n        router.push({\r\n            pathname: `/order/[id]`,\r\n            query: { id: order.data.checkout.id },\r\n        });\r\n        //7. Close the cart \r\n        closeCart()\r\n\r\n        //8. Turn the loader off\r\n        setLoading(false);\r\n        nProgress.done();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Overlay toggleOverlay={!toggle} onClick={handleToggle}>\r\n            </Overlay>\r\n            <CheckoutFormStyles onSubmit={handleSubmit}>\r\n                {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n                {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\r\n                <CardElement />\r\n                <button id=\"buyIt\" className=\"btn btn-success checkout\" type=\"submit\">Buy Now <FontAwesomeIcon icon={faChevronRight} /></button>\r\n            </CheckoutFormStyles>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Checkout() {\r\n    return (\r\n        <Elements stripe={stripeLib}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport {Checkout};"]},"metadata":{},"sourceType":"module"}