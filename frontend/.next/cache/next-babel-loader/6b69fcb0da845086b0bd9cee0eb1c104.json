{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\DeleteUser.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nconst DELETE_USER_MUTATION = gql`\n    mutation DELETE_USER_MUTATION($id: ID!) {\n        deleteUser(id: $id) {\n            id\n            name\n        }\n    }\n`;\n\nfunction update(cache, payload) {\n  console.log(payload);\n  console.log('running the update function after delete');\n  cache.evict(cache.identify(payload.data.deleteUser));\n}\n\nexport default function DeleteProduct({\n  id,\n  children\n}) {\n  const [deleteUser, {\n    loading,\n    error\n  }] = useMutation(DELETE_USER_MUTATION, {\n    variables: {\n      id\n    },\n    update\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-warning\",\n    type: \"button\",\n    disabled: loading,\n    onClick: () => {\n      if (confirm('Are you sure you want to delete this item')) {\n        //go ahead and delete it\n        deleteUser().catch(err => alert(err.message));\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/DeleteUser.js"],"names":["useMutation","gql","DELETE_USER_MUTATION","update","cache","payload","console","log","evict","identify","data","deleteUser","DeleteProduct","id","children","loading","error","variables","confirm","catch","err","alert","message"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,oBAAoB,GAAGD,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASE,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAH,EAAAA,KAAK,CAACI,KAAN,CAAYJ,KAAK,CAACK,QAAN,CAAeJ,OAAO,CAACK,IAAR,CAAaC,UAA5B,CAAZ;AACH;;AAED,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAvB,EAAyC;AACpD,QAAM,CAACH,UAAD,EAAa;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAb,IAAmChB,WAAW,CACnDE,oBADmD,EAC7B;AACnBe,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF,KADQ;AAEnBV,IAAAA;AAFmB,GAD6B,CAApD;AAKA,sBACI;AACA,IAAA,SAAS,EAAC,iBADV;AAEA,IAAA,IAAI,EAAC,QAFL;AAGA,IAAA,QAAQ,EAAEY,OAHV;AAIA,IAAA,OAAO,EAAE,MAAM;AACX,UAAGG,OAAO,CAAC,2CAAD,CAAV,EAAwD;AACpD;AACAP,QAAAA,UAAU,GAAGQ,KAAb,CAAoBC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAjC;AACH;AACJ,KATD;AAAA,cAUKR;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nconst DELETE_USER_MUTATION = gql`\r\n    mutation DELETE_USER_MUTATION($id: ID!) {\r\n        deleteUser(id: $id) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nfunction update(cache, payload) {\r\n    console.log(payload);\r\n    console.log('running the update function after delete');\r\n    cache.evict(cache.identify(payload.data.deleteUser))\r\n}\r\n\r\nexport default function DeleteProduct({ id, children }) {\r\n    const [deleteUser, { loading, error }] = useMutation \r\n    (DELETE_USER_MUTATION, {\r\n        variables: { id },\r\n        update,\r\n    });\r\n    return (\r\n        <button \r\n        className=\"btn btn-warning\" \r\n        type=\"button\" \r\n        disabled={loading}\r\n        onClick={() => {\r\n            if(confirm('Are you sure you want to delete this item')){\r\n                //go ahead and delete it\r\n                deleteUser().catch((err) => alert(err.message));\r\n            }\r\n        }}>\r\n            {children}\r\n        </button>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}