{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Checkout.js\";\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { CURRENT_USER_QUERY, useUser } from './User';\nimport { useRouter } from 'next/dist/client/router';\nimport { useCart } from '../lib/cartState';\nimport useForm from '../lib/useForm';\nimport emailjs from 'emailjs-com';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"yxfk2z-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;grid-gap:1rem;height:398px;overflow-y:scroll;input{font-size:15px;margin-right:5px;width:100%;}select{font-size:15px !important;margin-right:5px;width:100%;max-width:none !important;height:37px;option{font-size:15px;}}.side-by-side{display:grid;grid-template-columns:1fr 1fr;grid-gap:22px;}\"]);\nconst SINGLE_ORDER_QUERY = gql`\n\tquery SINGLE_ORDER_QUERY($id: ID!) {\n\t\torder(id: $id) {\n\t\t\tid\n\t\t\tcharge\n\t\t\ttotal\n\t\t\tcreatedAt\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t}\n\t\t\titems {\n\t\t\t\tid\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tprice\n\t\t\t\timage\n\t\t\t\tquantity\n\t\t\t}\n\t\t}\n\t}\n`;\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\n        checkout(token: $token) {\n            id\n            charge\n            total\n            items {\n                id\n                name\n            }\n        }\n    }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const form = useRef();\n  const {\n    0: status,\n    1: setStatus\n  } = useState(undefined);\n  const user = useUser(); // const { inputs, handleChange } = useForm({\n  //     email: '',\n  //     name: '',\n  // });\n\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const router = useRouter();\n  const elements = useElements();\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState(user.email);\n  const {\n    0: postal,\n    1: setPostal\n  } = useState('');\n  const {\n    0: city,\n    1: setCity\n  } = useState('');\n  const {\n    0: country,\n    1: setCountry\n  } = useState('');\n  const {\n    0: line1,\n    1: setLine1\n  } = useState('');\n  const {\n    0: line2,\n    1: setLine2\n  } = useState('');\n  const {\n    0: state,\n    1: setState\n  } = useState('');\n  const {\n    0: shipName,\n    1: setShipName\n  } = useState('');\n  const {\n    0: shipEmail,\n    1: setShipEmail\n  } = useState(user.email);\n  const {\n    0: shipPostal,\n    1: setShipPostal\n  } = useState('');\n  const {\n    0: shipCity,\n    1: setShipCity\n  } = useState('');\n  const {\n    0: shipCountry,\n    1: setShipCountry\n  } = useState('');\n  const {\n    0: shipLine1,\n    1: setShipLine1\n  } = useState('');\n  const {\n    0: shipLine2,\n    1: setShipLine2\n  } = useState('');\n  const {\n    0: shipState,\n    1: setShipState\n  } = useState('');\n  const {\n    closeCart\n  } = useCart();\n  const [checkout, {\n    error: graphQLError\n  }] = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  async function handleSubmit(e) {\n    //1. Stop the form from submitting and turn the loader one\n    e.preventDefault();\n    emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz').then(result => {\n      console.log(result.text);\n      setStatus({\n        type: 'result'\n      });\n    }, error => {\n      console.log(error.text);\n      setStatus({\n        type: 'error'\n      });\n    });\n    setLoading(true);\n    console.log('We gotta do some work...'); //2. Start the page transition\n\n    nProgress.start(); //3. Create the payment method via stripe\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: {\n        email,\n        name,\n        address: {\n          city: city,\n          country: country,\n          line1: line1,\n          line2: line2,\n          postal_code: postal,\n          state: state\n        }\n      }\n    });\n    console.log(paymentMethod); //4. Handle any errors from stripe (Token comes back here if successful)\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return; //stops the checkout from happening\n    } //5. Send the token from step 3 to our keystone server, via a custom mutation!\n\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    });\n    console.log(`Finished with the order!!`);\n    console.log(order); //6. Change the page to vie the order\n\n    router.push({\n      pathname: `/order/[id]`,\n      query: {\n        id: order.data.checkout.id\n      }\n    }); //7. Close the cart \n\n    closeCart(); //8. Turn the loader off\n\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    ref: form,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"hidden\",\n        required: true,\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-by-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Billing Details\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            required: true,\n            placeholder: \"Full Name\",\n            value: name,\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"line1\",\n            required: true,\n            placeholder: \"Address Line1\",\n            value: line1,\n            onChange: e => {\n              setLine1(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"line2\",\n            placeholder: \"Address Line2\",\n            value: line2,\n            onChange: e => {\n              setLine2(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"city\",\n            required: true,\n            placeholder: \"City\",\n            value: city,\n            onChange: e => {\n              setCity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"country\",\n            required: true,\n            placeholder: \"Country\",\n            value: country,\n            onChange: e => {\n              setCountry(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"state\",\n            required: true,\n            placeholder: \"State/County\",\n            value: state,\n            onChange: e => {\n              setState(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"postal\",\n            required: true,\n            placeholder: \"Post Code\",\n            value: postal,\n            onChange: e => {\n              setPostal(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Shipping Details\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipName\",\n            required: true,\n            placeholder: \"Full Name\",\n            value: shipName,\n            onChange: e => {\n              setShipName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipLine1\",\n            required: true,\n            placeholder: \"Address Line1\",\n            value: shipLine1,\n            onChange: e => {\n              setShipLine1(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipLine2\",\n            placeholder: \"Address Line2\",\n            value: shipLine2,\n            onChange: e => {\n              setShipLine2(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipCity\",\n            required: true,\n            placeholder: \"City\",\n            value: shipCity,\n            onChange: e => {\n              setShipCity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipCountry\",\n            required: true,\n            placeholder: \"Country\",\n            value: shipCountry,\n            onChange: e => {\n              setShipCountry(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipState\",\n            required: true,\n            placeholder: \"State/County\",\n            value: shipState,\n            onChange: e => {\n              setShipState(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipPostal\",\n            required: true,\n            placeholder: \"Post Code\",\n            value: shipPostal,\n            onChange: e => {\n              setShipPostal(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          hidden: true,\n          selected: true,\n          children: \"Select Shipping Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"grapefruit\",\n          children: \"Grapefruit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lime\",\n          children: \"Lime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"coconut\",\n          children: \"Coconut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mango\",\n          children: \"Mango\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 12\n        },\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 27\n      }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 12\n        },\n        children: graphQLError.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"buyIt\",\n        className: \"btn btn-success checkout\",\n        type: \"submit\",\n        children: [\"Buy Now \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faChevronRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 95\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 9\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Checkout.js"],"names":["React","useRef","useState","styled","CardElement","Elements","useElements","useStripe","loadStripe","FontAwesomeIcon","faChevronRight","nProgress","gql","useMutation","CURRENT_USER_QUERY","useUser","useRouter","useCart","useForm","emailjs","CheckoutFormStyles","form","SINGLE_ORDER_QUERY","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","status","setStatus","undefined","user","error","setError","loading","setLoading","stripe","router","elements","name","setName","email","setEmail","postal","setPostal","city","setCity","country","setCountry","line1","setLine1","line2","setLine2","state","setState","shipName","setShipName","shipEmail","setShipEmail","shipPostal","setShipPostal","shipCity","setShipCity","shipCountry","setShipCountry","shipLine1","setShipLine1","shipLine2","setShipLine2","shipState","setShipState","closeCart","checkout","graphQLError","refetchQueries","query","handleSubmit","e","preventDefault","sendForm","current","then","result","console","log","text","type","start","paymentMethod","createPaymentMethod","card","getElement","billing_details","address","postal_code","done","order","variables","token","id","push","pathname","data","target","value","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    CardElement,\r\n    Elements,\r\n    useElements,\r\n    useStripe,\r\n  } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faChevronRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport nProgress from 'nprogress';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport { CURRENT_USER_QUERY, useUser } from './User';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport { useCart } from '../lib/cartState';\r\nimport useForm from '../lib/useForm';\r\nimport emailjs from 'emailjs-com';\r\n\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n    box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n    border: 1px solid rgba(0, 0, 0, 0.06);\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    grid-gap: 1rem;\r\n    height: 398px;\r\n    overflow-y: scroll;\r\n    \r\n    input {\r\n        font-size: 15px;\r\n        margin-right: 5px;\r\n        width: 100%;\r\n    }\r\n\r\n    select {\r\n        font-size: 15px !important;\r\n        margin-right: 5px;\r\n        width: 100%;\r\n        max-width: none !important;\r\n        height: 37px;\r\n\r\n        option {\r\n            font-size: 15px;\r\n        }\r\n    }\r\n\r\n\r\n    .side-by-side {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-gap: 22px;\r\n    }\r\n`;\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n\tquery SINGLE_ORDER_QUERY($id: ID!) {\r\n\t\torder(id: $id) {\r\n\t\t\tid\r\n\t\t\tcharge\r\n\t\t\ttotal\r\n\t\t\tcreatedAt\r\n\t\t\tuser {\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t\titems {\r\n\t\t\t\tid\r\n\t\t\t\ttitle\r\n\t\t\t\tdescription\r\n\t\t\t\tprice\r\n\t\t\t\timage\r\n\t\t\t\tquantity\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\r\n        checkout(token: $token) {\r\n            id\r\n            charge\r\n            total\r\n            items {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n\r\n    const form = useRef();\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    const user = useUser();\r\n\r\n    // const { inputs, handleChange } = useForm({\r\n    //     email: '',\r\n    //     name: '',\r\n    // });\r\n\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const router = useRouter();\r\n    const elements = useElements();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState(user.email);\r\n    const [postal, setPostal] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [line1, setLine1] = useState('');\r\n    const [line2, setLine2] = useState('');\r\n    const [state, setState] = useState('');\r\n\r\n    const [shipName, setShipName] = useState('');\r\n    const [shipEmail, setShipEmail] = useState(user.email);\r\n    const [shipPostal, setShipPostal] = useState('');\r\n    const [shipCity, setShipCity] = useState('');\r\n    const [shipCountry, setShipCountry] = useState('');\r\n    const [shipLine1, setShipLine1] = useState('');\r\n    const [shipLine2, setShipLine2] = useState('');\r\n    const [shipState, setShipState] = useState('');\r\n\r\n\r\n    const { closeCart } = useCart();\r\n    const [checkout, {error: graphQLError}] = useMutation(\r\n        CREATE_ORDER_MUTATION,\r\n        {\r\n            refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n        }\r\n    );\r\n\r\n    async function handleSubmit(e) {\r\n        //1. Stop the form from submitting and turn the loader one\r\n        e.preventDefault();\r\n\r\n        emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz')\r\n        .then((result) => {\r\n            console.log(result.text);\r\n            setStatus({type: 'result'});\r\n        }, (error) => {\r\n            console.log(error.text);\r\n            setStatus({type: 'error'})\r\n        });\r\n\r\n        setLoading(true);\r\n        console.log('We gotta do some work...');\r\n        //2. Start the page transition\r\n        nProgress.start();\r\n        //3. Create the payment method via stripe\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement),\r\n            billing_details: {\r\n                email,\r\n                name,\r\n                address: {\r\n                    city: city,\r\n                    country: country,\r\n                    line1: line1,\r\n                    line2: line2,\r\n                    postal_code: postal,\r\n                    state: state\r\n                }\r\n            }\r\n        });\r\n        console.log(paymentMethod)\r\n        //4. Handle any errors from stripe (Token comes back here if successful)\r\n        if (error) {\r\n            setError(error);\r\n            nProgress.done();\r\n            return; //stops the checkout from happening\r\n        }\r\n        //5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n        const order = await checkout({\r\n            variables: {\r\n                token: paymentMethod.id\r\n            },\r\n        });\r\n        console.log(`Finished with the order!!`);\r\n        console.log(order);\r\n        //6. Change the page to vie the order\r\n        router.push({\r\n            pathname: `/order/[id]`,\r\n            query: { id: order.data.checkout.id },\r\n        });\r\n        //7. Close the cart \r\n        closeCart()\r\n\r\n        //8. Turn the loader off\r\n        setLoading(false);\r\n        nProgress.done();\r\n    }\r\n\r\n    return (\r\n        <CheckoutFormStyles ref={form} onSubmit={handleSubmit}>\r\n            <fieldset>\r\n                <input\r\n                    id=\"email\"\r\n                    type=\"hidden\"\r\n                    required\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                    }}\r\n                />\r\n\r\n                <div className=\"side-by-side\">\r\n                    <div>\r\n                        Billing Details\r\n                        <input\r\n                            id=\"name\"\r\n                            required\r\n                            placeholder=\"Full Name\"\r\n                            value={name}\r\n                            onChange={(e) => {\r\n                            setName(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"line1\"\r\n                            required\r\n                            placeholder=\"Address Line1\"\r\n                            value={line1}\r\n                            onChange={(e) => {\r\n                            setLine1(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"line2\"\r\n                            placeholder=\"Address Line2\"\r\n                            value={line2}\r\n                            onChange={(e) => {\r\n                            setLine2(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"city\"\r\n                            required\r\n                            placeholder=\"City\"\r\n                            value={city}\r\n                            onChange={(e) => {\r\n                            setCity(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"country\"\r\n                            required\r\n                            placeholder=\"Country\"\r\n                            value={country}\r\n                            onChange={(e) => {\r\n                            setCountry(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"state\"\r\n                            required\r\n                            placeholder=\"State/County\"\r\n                            value={state}\r\n                            onChange={(e) => {\r\n                            setState(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"postal\"\r\n                            required\r\n                            placeholder=\"Post Code\"\r\n                            value={postal}\r\n                            onChange={(e) => {\r\n                            setPostal(e.target.value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        Shipping Details\r\n                        <input\r\n                            id=\"shipName\"\r\n                            required\r\n                            placeholder=\"Full Name\"\r\n                            value={shipName}\r\n                            onChange={(e) => {\r\n                            setShipName(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipLine1\"\r\n                            required\r\n                            placeholder=\"Address Line1\"\r\n                            value={shipLine1}\r\n                            onChange={(e) => {\r\n                            setShipLine1(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipLine2\"\r\n                            placeholder=\"Address Line2\"\r\n                            value={shipLine2}\r\n                            onChange={(e) => {\r\n                            setShipLine2(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipCity\"\r\n                            required\r\n                            placeholder=\"City\"\r\n                            value={shipCity}\r\n                            onChange={(e) => {\r\n                            setShipCity(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipCountry\"\r\n                            required\r\n                            placeholder=\"Country\"\r\n                            value={shipCountry}\r\n                            onChange={(e) => {\r\n                            setShipCountry(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipState\"\r\n                            required\r\n                            placeholder=\"State/County\"\r\n                            value={shipState}\r\n                            onChange={(e) => {\r\n                            setShipState(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipPostal\"\r\n                            required\r\n                            placeholder=\"Post Code\"\r\n                            value={shipPostal}\r\n                            onChange={(e) => {\r\n                            setShipPostal(e.target.value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <select required>\r\n                    <option value=\"\" disabled hidden selected>Select Shipping Method</option>\r\n                    <option value=\"grapefruit\">Grapefruit</option>\r\n                    <option value=\"lime\">Lime</option>\r\n                    <option value=\"coconut\">Coconut</option>\r\n                    <option value=\"mango\">Mango</option>\r\n                </select>\r\n                {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n                {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\r\n                <CardElement />\r\n                <button id=\"buyIt\" className=\"btn btn-success checkout\" type=\"submit\">Buy Now <FontAwesomeIcon icon={faChevronRight} /></button>\r\n            </fieldset>\r\n        </CheckoutFormStyles>\r\n    );\r\n}\r\n\r\nfunction Checkout() {\r\n    return (\r\n        <Elements stripe={stripeLib}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport {Checkout};"]},"metadata":{},"sourceType":"module"}