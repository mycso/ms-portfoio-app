{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\CreateShippingMethod.js\";\nimport { useState } from \"react\";\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport styled from 'styled-components';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nconst SHIPPING_QUERY = gql`\n    query SHIPPING_QUERY {\n        allShippings {\n            id\n            type\n            amount\n            description\n        }\n    }\n`;\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION ($shipping: ShippingRelateToOneInput!) {\n        checkoutToShipping(\n            data: {\n                shipping: $shipping\n            }\n        ) {\n            id\n            shipping {\n                id\n                type\n                amount\n                description\n            }\n        }\n    }\n`;\nexport default function createShippingMethod({\n  order\n}) {\n  const {\n    inputs,\n    handleChange\n  } = useForm({\n    shipping: {\n      type: '',\n      amount: '',\n      connect: {\n        id: order.id\n      }\n    }\n  });\n\n  async function onChangeValue(e) {\n    setShippingMethod(e.target.value);\n    const order = await checkoutToShipping({\n      variables: {\n        shipping: {\n          type: inputs.type,\n          amount: inputs.amount,\n          connect: {\n            id: order.id\n          }\n        }\n      }\n    });\n  }\n\n  const [checkoutToShipping, {\n    data,\n    error,\n    loading\n  }] = useMutation(CREATE_ORDER_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }]\n  });\n  const {\n    AllShipping\n  } = useQuery(SHIPPING_QUERY);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: \"transcode_profile\",\n    id: \"transcode_profile\",\n    onChange: onChangeValue,\n    value: shippingMethod.type,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"Select Shipping Method\",\n      children: \"Select Shipping Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), AllShipping === null || AllShipping === void 0 ? void 0 : AllShipping.allShippings.map(shippingMethod => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: shippingMethod.id,\n      children: [shippingMethod.type, \" - \", shippingMethod.amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 66\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/CreateShippingMethod.js"],"names":["useState","useMutation","useQuery","gql","useForm","styled","ALL_PRODUCTS_QUERY","SHIPPING_QUERY","CREATE_ORDER_MUTATION","createShippingMethod","order","inputs","handleChange","shipping","type","amount","connect","id","onChangeValue","e","setShippingMethod","target","value","checkoutToShipping","variables","data","error","loading","refetchQueries","query","AllShipping","shippingMethod","allShippings","map"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,kBAAT,QAAmC,YAAnC;AAEA,MAAMC,cAAc,GAAGJ,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMK,qBAAqB,GAAGL,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,eAAe,SAASM,oBAAT,CAA+B;AAACC,EAAAA;AAAD,CAA/B,EAAwC;AAEnD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA2BR,OAAO,CAAC;AACrCS,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAEP,KAAK,CAACO;AAAZ;AAHH;AAD2B,GAAD,CAAxC;;AAQA,iBAAeC,aAAf,CAA6BC,CAA7B,EAAgC;AAE5BC,IAAAA,iBAAiB,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAjB;AAEA,UAAMZ,KAAK,GAAG,MAAMa,kBAAkB,CAAC;AACnCC,MAAAA,SAAS,EAAE;AACPX,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAEH,MAAM,CAACG,IADP;AAENC,UAAAA,MAAM,EAAEJ,MAAM,CAACI,MAFT;AAGNC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,EAAE,EAAEP,KAAK,CAACO;AAAZ;AAHH;AADH;AADwB,KAAD,CAAtC;AASH;;AAED,QAAM,CAACM,kBAAD,EAAqB;AAAEE,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAArB,IAAiD1B,WAAW,CAC9DO,qBAD8D,EAE9D;AACIgB,IAAAA,SAAS,EAAEb,MADf;AAEIiB,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEvB;AAAT,KAAD;AAFpB,GAF8D,CAAlE;AAQA,QAAM;AAAEwB,IAAAA;AAAF,MAAkB5B,QAAQ,CAACK,cAAD,CAAhC;AAEA,sBACI;AACI,IAAA,IAAI,EAAC,mBADT;AAEI,IAAA,EAAE,EAAC,mBAFP;AAGI,IAAA,QAAQ,EAAEW,aAHd;AAII,IAAA,KAAK,EAAEa,cAAc,CAACjB,IAJ1B;AAAA,4BAMQ;AAAQ,MAAA,KAAK,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANR,EAOSgB,WAPT,aAOSA,WAPT,uBAOSA,WAAW,CAAEE,YAAb,CAA0BC,GAA1B,CAA8BF,cAAc,iBAAI;AAAQ,MAAA,KAAK,EAAEA,cAAc,CAACd,EAA9B;AAAA,iBAAmCc,cAAc,CAACjB,IAAlD,SAA2DiB,cAAc,CAAChB,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhD,CAPT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH","sourcesContent":["import { useState } from \"react\";\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport useForm from '../lib/useForm';\r\nimport styled from 'styled-components';\r\nimport { ALL_PRODUCTS_QUERY } from './Products';\r\n\r\nconst SHIPPING_QUERY = gql`\r\n    query SHIPPING_QUERY {\r\n        allShippings {\r\n            id\r\n            type\r\n            amount\r\n            description\r\n        }\r\n    }\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION ($shipping: ShippingRelateToOneInput!) {\r\n        checkoutToShipping(\r\n            data: {\r\n                shipping: $shipping\r\n            }\r\n        ) {\r\n            id\r\n            shipping {\r\n                id\r\n                type\r\n                amount\r\n                description\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function createShippingMethod ({order}) {\r\n\r\n    const { inputs, handleChange } = useForm({\r\n        shipping: {\r\n            type: '',\r\n            amount: '',\r\n            connect: { id: order.id }\r\n        },\r\n    });\r\n    \r\n    async function onChangeValue(e) {\r\n\r\n        setShippingMethod(e.target.value);\r\n\r\n        const order = await checkoutToShipping({\r\n            variables: {\r\n                shipping: {\r\n                    type: inputs.type,\r\n                    amount: inputs.amount,\r\n                    connect: { id: order.id }\r\n                },  \r\n            },\r\n        });\r\n    }\r\n\r\n    const [checkoutToShipping, { data, error, loading }] = useMutation(\r\n        CREATE_ORDER_MUTATION, \r\n        {\r\n            variables: inputs,\r\n            refetchQueries: [{ query: ALL_PRODUCTS_QUERY }],\r\n        }\r\n    );\r\n\r\n    const { AllShipping } = useQuery(SHIPPING_QUERY);\r\n    \r\n    return (\r\n        <select\r\n            name=\"transcode_profile\"\r\n            id=\"transcode_profile\"\r\n            onChange={onChangeValue}\r\n            value={shippingMethod.type}\r\n            >\r\n                <option value=\"Select Shipping Method\">Select Shipping Method</option>\r\n                {AllShipping?.allShippings.map(shippingMethod => <option value={shippingMethod.id}>{shippingMethod.type} - {shippingMethod.amount}</option>)}\r\n        </select>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}