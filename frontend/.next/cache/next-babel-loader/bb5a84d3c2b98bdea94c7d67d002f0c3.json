{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\CreateRating.js\";\nimport { useState } from \"react\";\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport styled from 'styled-components';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nimport Form from './styles/Form';\nimport DisplayError from './ErrorMessage';\nimport Router from 'next/router';\nimport { StarsRating } from \"stars-rating-react-hooks\";\nconst CREATE_PRODUCT_REVIEW_MUTATION = gql`\n    mutation CREATE_PRODUCT_REVIEW_MUTATION (\n        $reviewTitle: String! \n        $comment: String!\n        $stars: Int!\n        $review: ProductRelateToOneInput!\n    ){\n        createProductReview ( \n            data: {\n                reviewTitle: $reviewTitle\n                comment: $comment\n                stars: $stars \n                review: $review\n            }\n        ) {\n            id\n            reviewTitle\n            comment\n            stars\n            review {\n                id\n                name\n                author\n            }\n        }\n    }\n`;\nconst StyledRatingWrapper = styled.div.withConfig({\n  displayName: \"CreateRating__StyledRatingWrapper\",\n  componentId: \"sc-1osbq4v-0\"\n})([\"label .dv-star-rating .dv-star-rating-star{display:inline-block;padding:5px;background:transparent;float:left;}\"]);\nexport default function createProductReview({\n  product\n}) {\n  const {\n    0: selecting,\n    1: setSelecting\n  } = useState(null);\n  const {\n    inputs,\n    handleChange,\n    clearForm\n  } = useForm({\n    reviewTitle: '',\n    comment: '',\n    stars: selecting === null || selecting === void 0 ? void 0 : selecting.selectingValue,\n    review: {\n      connect: {\n        id: product.id\n      }\n    }\n  });\n  const [createProductReview, {\n    data,\n    error,\n    loading\n  }] = useMutation(CREATE_PRODUCT_REVIEW_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }]\n  });\n  console.log(inputs.stars);\n  const config = {\n    totalStars: 5,\n    initialSelectedValue: 1,\n    renderFull: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"star\",\n      src: \"https://img.icons8.com/color/30/000000/filled-star--v1.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this),\n    renderEmpty: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"star\",\n      src: \"https://img.icons8.com/windows/30/000000/filled-star.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this),\n    renderHalf: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"star\",\n      src: \"https://img.icons8.com/color/30/000000/star-half-empty.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(StarsRating, {\n        onSelecting: (isSelecting, selectingValue, e) => {\n          setSelecting({\n            isSelecting,\n            selectingValue\n          });\n        },\n        config: config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: async e => {\n        e.preventDefault(); //Submit the inputfield to the backend\n\n        const res = await createProductReview({\n          variables: {\n            reviewTitle: inputs.reviewTitle,\n            comment: inputs.comment,\n            stars: inputs.stars,\n            review: {\n              connect: {\n                id: product.id\n              }\n            }\n          }\n        }).catch(console.error);\n        console.log(res);\n        clearForm(); // change them to the single item page;\n\n        window.location.reload();\n      },\n      children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        children: /*#__PURE__*/_jsxDEV(StyledRatingWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"stars\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"stars\",\n              name: \"stars\",\n              placeholder: \"Review Stars 1-5\",\n              required: true,\n              value: inputs.stars,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"reviewTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"reviewTitle\",\n              name: \"reviewTitle\",\n              placeholder: \"Review Title\",\n              required: true,\n              value: inputs.reviewTitle,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"comment\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              id: \"comment\",\n              name: \"comment\",\n              placeholder: \"Review Comment\",\n              required: true,\n              value: inputs.comment,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/CreateRating.js"],"names":["useState","useMutation","useQuery","gql","useForm","styled","ALL_PRODUCTS_QUERY","Form","DisplayError","Router","StarsRating","CREATE_PRODUCT_REVIEW_MUTATION","StyledRatingWrapper","div","createProductReview","product","selecting","setSelecting","inputs","handleChange","clearForm","reviewTitle","comment","stars","selectingValue","review","connect","id","data","error","loading","variables","refetchQueries","query","console","log","config","totalStars","initialSelectedValue","renderFull","renderEmpty","renderHalf","isSelecting","e","preventDefault","res","catch","window","location","reload"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport useForm from '../lib/useForm';\r\nimport styled from 'styled-components';\r\nimport { ALL_PRODUCTS_QUERY } from './Products';\r\nimport Form from './styles/Form';\r\nimport DisplayError from './ErrorMessage';\r\nimport Router from 'next/router';\r\nimport { StarsRating } from \"stars-rating-react-hooks\";\r\n\r\nconst CREATE_PRODUCT_REVIEW_MUTATION = gql`\r\n    mutation CREATE_PRODUCT_REVIEW_MUTATION (\r\n        $reviewTitle: String! \r\n        $comment: String!\r\n        $stars: Int!\r\n        $review: ProductRelateToOneInput!\r\n    ){\r\n        createProductReview ( \r\n            data: {\r\n                reviewTitle: $reviewTitle\r\n                comment: $comment\r\n                stars: $stars \r\n                review: $review\r\n            }\r\n        ) {\r\n            id\r\n            reviewTitle\r\n            comment\r\n            stars\r\n            review {\r\n                id\r\n                name\r\n                author\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst StyledRatingWrapper = styled.div`\r\nlabel .dv-star-rating .dv-star-rating-star {\r\n    display: inline-block;\r\n    padding: 5px;\r\n    background: transparent;\r\n    float: left;\r\n}\r\n`;\r\n\r\nexport default function createProductReview ({product}) {\r\n    const [selecting, setSelecting] = useState(null);\r\n\r\n    const { inputs, handleChange, clearForm } = useForm({\r\n        reviewTitle: '',\r\n        comment: '',\r\n        stars: selecting?.selectingValue,\r\n        review: {\r\n            connect: { id: product.id }\r\n        },\r\n    });\r\n\r\n    const [createProductReview, { data, error, loading }] = useMutation(\r\n        CREATE_PRODUCT_REVIEW_MUTATION, \r\n        {\r\n            variables: inputs,\r\n            refetchQueries: [{ query: ALL_PRODUCTS_QUERY }],\r\n        }\r\n    );\r\n\r\n    console.log(inputs.stars);\r\n\r\n    const config = {\r\n        totalStars: 5,\r\n        initialSelectedValue: 1,\r\n        renderFull: (\r\n            <img\r\n            alt=\"star\"\r\n            src=\"https://img.icons8.com/color/30/000000/filled-star--v1.png\"\r\n            />\r\n        ),\r\n        renderEmpty: (\r\n            <img alt=\"star\" src=\"https://img.icons8.com/windows/30/000000/filled-star.png\" />\r\n        ),\r\n        renderHalf: (\r\n            <img\r\n            alt=\"star\"\r\n            src=\"https://img.icons8.com/color/30/000000/star-half-empty.png\"\r\n            />\r\n        )\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            {/* <h3>{selecting?.selectingValue}</h3> */}\r\n            <div>\r\n                <StarsRating\r\n                onSelecting={(isSelecting, selectingValue, e) => {\r\n                    setSelecting({ isSelecting, selectingValue});\r\n                }}\r\n                config={config}\r\n                />\r\n            </div>\r\n            <Form \r\n                onSubmit={async (e) => {\r\n                    e.preventDefault();\r\n                    //Submit the inputfield to the backend\r\n                    const res = await createProductReview({\r\n                        variables: {\r\n                            reviewTitle: inputs.reviewTitle,\r\n                            comment: inputs.comment,\r\n                            stars: inputs.stars,  \r\n                            review: {\r\n                                connect: { id: product.id }\r\n                            },  \r\n                        },\r\n                    }).catch(console.error);\r\n                    console.log(res);\r\n                    clearForm();\r\n                    // change them to the single item page;\r\n                    window.location.reload();\r\n                }}\r\n            >\r\n                <DisplayError error={error} />\r\n                <fieldset disabled={loading} aria-busy={loading}>\r\n                    <StyledRatingWrapper>\r\n                        <label htmlFor=\"stars\">\r\n                            <input \r\n                                type=\"number\" \r\n                                id=\"stars\" \r\n                                name=\"stars\" \r\n                                placeholder=\"Review Stars 1-5\"\r\n                                required\r\n                                value={inputs.stars}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </label>\r\n                        <label htmlFor=\"reviewTitle\">\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"reviewTitle\" \r\n                                name=\"reviewTitle\" \r\n                                placeholder=\"Review Title\"\r\n                                required\r\n                                value={inputs.reviewTitle}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </label>\r\n                        <label htmlFor=\"comment\">\r\n                            <textarea \r\n                                type=\"text\" \r\n                                id=\"comment\" \r\n                                name=\"comment\" \r\n                                placeholder=\"Review Comment\"\r\n                                required\r\n                                value={inputs.comment}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </label>\r\n                        <button type=\"submit\">Submit</button>\r\n                    </StyledRatingWrapper>\r\n                </fieldset>\r\n            </Form>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}