{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nimport { useLazyQuery } from '@apollo/client';\nconst SEARCH_PRODUCTS_QUERY = gql`\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n        searchTerms: allProducts(\n            where: {\n                OR: [\n                    {name_contains_i: $searchTerm}\n                    {description_contains_i: $searchTerm}\n                ]\n            }\n        ) {\n            id\n            name\n            photo {\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nexport default function Search() {\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  });\n  resetIdCounter();\n  const {\n    getMenuProps,\n    getInputProps,\n    getComboboxProps\n  } = useCombobox({\n    items: [],\n\n    onInputValueChange() {\n      console.log('Input changed');\n    },\n\n    onSelectedItemChange() {\n      console.log('Selected Item change!');\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an Item',\n        id: 'search',\n        className: 'loading'\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"Hey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"Hey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"Hey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"Hey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Search.js"],"names":["React","resetIdCounter","useCombobox","DropDown","DropDownItem","SearchStyles","useLazyQuery","SEARCH_PRODUCTS_QUERY","gql","Search","findItems","loading","data","error","fetchPolicy","getMenuProps","getInputProps","getComboboxProps","items","onInputValueChange","console","log","onSelectedItemChange","type","placeholder","id","className"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,MAAMC,qBAAqB,GAAGC,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAqBA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAM,CAACC,SAAD,EAAY;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,GAAZ,IAAsCP,YAAY,CACpDC,qBADoD,EAEpD;AACIO,IAAAA,WAAW,EAAE;AADjB,GAFoD,CAAxD;AAMAb,EAAAA,cAAc;AACd,QAAM;AAAEc,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAoDf,WAAW,CAAC;AAClEgB,IAAAA,KAAK,EAAE,EAD2D;;AAElEC,IAAAA,kBAAkB,GAAG;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KAJiE;;AAKlEC,IAAAA,oBAAoB,GAAG;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AAPiE,GAAD,CAArE;AAUA,sBACI,QAAC,YAAD;AAAA,4BACI,+CAASJ,gBAAgB,EAAzB;AAAA,6BACI,mCAAWD,aAAa,CAAC;AACrBO,QAAAA,IAAI,EAAE,QADe;AAErBC,QAAAA,WAAW,EAAE,oBAFQ;AAGrBC,QAAAA,EAAE,EAAE,QAHiB;AAIrBC,QAAAA,SAAS,EAAE;AAJU,OAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,QAAD,kCAAcX,YAAY,EAA1B;AAAA,8BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH","sourcesContent":["import React from 'react'\r\nimport { resetIdCounter, useCombobox } from 'downshift';\r\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\r\nimport { useLazyQuery } from '@apollo/client';\r\n\r\nconst SEARCH_PRODUCTS_QUERY = gql`\r\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\r\n        searchTerms: allProducts(\r\n            where: {\r\n                OR: [\r\n                    {name_contains_i: $searchTerm}\r\n                    {description_contains_i: $searchTerm}\r\n                ]\r\n            }\r\n        ) {\r\n            id\r\n            name\r\n            photo {\r\n                image {\r\n                    publicUrlTransformed\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function Search() {\r\n    const [findItems, {loading, data, error}] = useLazyQuery(\r\n        SEARCH_PRODUCTS_QUERY,\r\n        {\r\n            fetchPolicy: 'no-cache',\r\n        }\r\n    );\r\n    resetIdCounter();\r\n    const { getMenuProps, getInputProps, getComboboxProps } = useCombobox({\r\n        items: [],\r\n        onInputValueChange() {\r\n            console.log('Input changed')\r\n        },\r\n        onSelectedItemChange() {\r\n            console.log('Selected Item change!')\r\n        }\r\n    });\r\n\r\n    return (\r\n        <SearchStyles>\r\n            <div {...getComboboxProps()}>\r\n                <input {...getInputProps({\r\n                    type: 'search',\r\n                    placeholder: 'Search for an Item',\r\n                    id: 'search',\r\n                    className: 'loading',\r\n                })} />\r\n            </div>\r\n            <DropDown {...getMenuProps()}>\r\n                <DropDownItem>Hey</DropDownItem>\r\n                <DropDownItem>Hey</DropDownItem>\r\n                <DropDownItem>Hey</DropDownItem>\r\n                <DropDownItem>Hey</DropDownItem>\r\n            </DropDown>\r\n        </SearchStyles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}