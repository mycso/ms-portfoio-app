{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\\n        checkout(token: $token) {\\n            id\\n            charge\\n            total\\n            items {\\n                id\\n                name\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SHIPPING_QUERY {\\n        allShippings {\\n            id\\n            type\\n            amount\\n            description\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useRef, useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { CURRENT_USER_QUERY, useUser } from './User';\nimport { useRouter } from 'next/dist/client/router';\nimport { useCart } from '../lib/cartState';\nimport { useCheckoutMethod } from '../lib/checkoutState';\nimport emailjs from 'emailjs-com';\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"yxfk2z-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;grid-gap:1rem;height:398px;overflow-y:scroll;input{font-size:15px;margin-right:5px;width:100%;}select{font-size:15px !important;margin-right:5px;width:100%;max-width:none !important;height:37px;option{font-size:15px;}}.side-by-side{display:grid;grid-template-columns:1fr 1fr;grid-gap:22px;}\"]);\n_c = CheckoutFormStyles;\nvar SHIPPING_QUERY = gql(_templateObject());\nvar CREATE_ORDER_MUTATION = gql(_templateObject2());\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _this = this;\n\n  var form = useRef();\n\n  var _useState = useState(undefined),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var user = useUser();\n\n  var _useState2 = useState(),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var stripe = useStripe();\n  var router = useRouter();\n  var elements = useElements();\n\n  var _useState4 = useState(''),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(user.email),\n      email = _useState5[0],\n      setEmail = _useState5[1];\n\n  var _useState6 = useState(''),\n      postal = _useState6[0],\n      setPostal = _useState6[1];\n\n  var _useState7 = useState(''),\n      city = _useState7[0],\n      setCity = _useState7[1];\n\n  var _useState8 = useState(''),\n      country = _useState8[0],\n      setCountry = _useState8[1];\n\n  var _useState9 = useState(''),\n      line1 = _useState9[0],\n      setLine1 = _useState9[1];\n\n  var _useState10 = useState(''),\n      line2 = _useState10[0],\n      setLine2 = _useState10[1];\n\n  var _useState11 = useState(''),\n      state = _useState11[0],\n      setState = _useState11[1];\n\n  var _useCart = useCart(),\n      closeCart = _useCart.closeCart; // const { \n  //     // States\n  //     shipName, \n  //     shipEmail,\n  //     shipPostal,\n  //     shipCity,\n  //     shipCountry,\n  //     shipLine1,\n  //     shipLine2,\n  //     shipState,\n  //     shippingMethod,\n  //     //Set States\n  //     setShipName,\n  //     setShipEmail,\n  //     setShipPostal,\n  //     setShipCity,\n  //     setShipCountry,\n  //     setShipLine1,\n  //     setShipLine2,\n  //     setShipState,\n  //     setShippingMethod\n  // } = useCheckoutMethod();\n\n\n  var _useContext = useContext(useCheckoutMethod),\n      shipName = _useContext[0],\n      setShipName = _useContext[1]; // const [shipName, setShipName] = useState('');\n\n\n  console.log(shipName, 'test'); // console.log(setShipName);\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      graphQLError = _useMutation2[1].error;\n\n  var _useQuery = useQuery(SHIPPING_QUERY),\n      data = _useQuery.data; // const { Shipping } = data?.allShippings;\n\n\n  console.log(data === null || data === void 0 ? void 0 : data.allShippings);\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod, order, session;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //1. Stop the form from submitting and turn the loader one\n              e.preventDefault();\n              emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz').then(function (result) {\n                console.log(result.text);\n                setStatus({\n                  type: 'result'\n                });\n              }, function (error) {\n                console.log(error.text);\n                setStatus({\n                  type: 'error'\n                });\n              });\n              setLoading(true);\n              console.log('We gotta do some work...'); //2. Start the page transition\n\n              nProgress.start(); //3. Create the payment method via stripe\n\n              _context.next = 7;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement),\n                billing_details: {\n                  email: email,\n                  name: name,\n                  address: {\n                    city: city,\n                    country: country,\n                    line1: line1,\n                    line2: line2,\n                    postal_code: postal,\n                    state: state\n                  }\n                }\n              });\n\n            case 7:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n\n              if (!error) {\n                _context.next = 14;\n                break;\n              }\n\n              setError(error);\n              nProgress.done();\n              return _context.abrupt(\"return\");\n\n            case 14:\n              _context.next = 16;\n              return checkout({\n                variables: {\n                  token: paymentMethod.id // shipping: {\n                  //     type: shippingMethod\n                  // }\n\n                }\n              });\n\n            case 16:\n              order = _context.sent;\n              console.log(\"Finished with the order!!\");\n              console.log(order, \"test\"); // console.log(paymentMethod.id);\n\n              session = {\n                // success_url: 'https://example.com/success',\n                // cancel_url: 'https://example.com/cancel',\n                // payment_method_types: ['card'],\n                // line_items: [\n                //   {price: 'price_H5ggYwtDq4fbrJ', quantity: 2},\n                // ],\n                // mode: 'payment',\n                shipping: {\n                  address: {\n                    city: shipCity,\n                    country: shipPostal,\n                    line1: shipLine1,\n                    line2: shipLine2,\n                    postal_code: shipPostal,\n                    state: shipState\n                  }\n                } // shipping_address_collection: null,\n\n              };\n              console.log(session, \"test\"); //6. Change the page to vie the order\n\n              router.push({\n                pathname: \"/order/[id]\",\n                query: {\n                  id: order.data.checkout.id\n                }\n              }); //7. Close the cart \n\n              closeCart(); //8. Turn the loader off\n\n              setLoading(false);\n              nProgress.done();\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    ref: form,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-by-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"hidden\",\n            required: true,\n            placeholder: \"Email\",\n            value: email,\n            onChange: function onChange(e) {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), \"Billing Details\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            required: true,\n            placeholder: \"Full Name\",\n            value: name,\n            onChange: function onChange(e) {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"line1\",\n            required: true,\n            placeholder: \"Address Line1\",\n            value: line1,\n            onChange: function onChange(e) {\n              setLine1(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"line2\",\n            placeholder: \"Address Line2\",\n            value: line2,\n            onChange: function onChange(e) {\n              setLine2(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"city\",\n            required: true,\n            placeholder: \"City\",\n            value: city,\n            onChange: function onChange(e) {\n              setCity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"country\",\n            required: true,\n            placeholder: \"Country\",\n            value: country,\n            onChange: function onChange(e) {\n              setCountry(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"state\",\n            required: true,\n            placeholder: \"State/County\",\n            value: state,\n            onChange: function onChange(e) {\n              setState(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"postal\",\n            required: true,\n            placeholder: \"Post Code\",\n            value: postal,\n            onChange: function onChange(e) {\n              setPostal(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"hidden\",\n            required: true,\n            placeholder: \"Email\",\n            value: shipEmail,\n            onChange: function onChange(e) {\n              setShipEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this), \"Shipping Details\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipName\",\n            required: true,\n            placeholder: \"Full Name\",\n            value: shipName,\n            onChange: function onChange(e) {\n              setShipName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipLine1\",\n            required: true,\n            placeholder: \"Address Line1\",\n            value: shipLine1,\n            onChange: function onChange(e) {\n              setShipLine1(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipLine2\",\n            placeholder: \"Address Line2\",\n            value: shipLine2,\n            onChange: function onChange(e) {\n              setShipLine2(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipCity\",\n            required: true,\n            placeholder: \"City\",\n            value: shipCity,\n            onChange: function onChange(e) {\n              setShipCity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipCountry\",\n            required: true,\n            placeholder: \"Country\",\n            value: shipCountry,\n            onChange: function onChange(e) {\n              setShipCountry(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipState\",\n            required: true,\n            placeholder: \"State/County\",\n            value: shipState,\n            onChange: function onChange(e) {\n              setShipState(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"shipPostal\",\n            required: true,\n            placeholder: \"Post Code\",\n            value: shipPostal,\n            onChange: function onChange(e) {\n              setShipPostal(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"transcode_profile\",\n        id: \"transcode_profile\",\n        onChange: function onChange(e) {\n          setShippingMethod(e.target.value);\n        },\n        value: shippingMethod,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Select Shipping Method\",\n          children: \"Select Shipping Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 25\n        }, this), data === null || data === void 0 ? void 0 : data.allShippings.map(function (shippingMethod) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: shippingMethod.type,\n            children: [shippingMethod.type, \" - \", shippingMethod.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 67\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 12\n        },\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 27\n      }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 12\n        },\n        children: graphQLError.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"buyIt\",\n        className: \"btn btn-success checkout\",\n        type: \"submit\",\n        children: [\"Buy Now \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faChevronRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 95\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckoutForm, \"dIO6IfwHl5lvSs0maGFQ5Sry2gI=\", false, function () {\n  return [useUser, useStripe, useRouter, useElements, useCart, useMutation, useQuery];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Checkout.js"],"names":["React","useRef","useState","useContext","styled","CardElement","Elements","useElements","useStripe","loadStripe","FontAwesomeIcon","faChevronRight","nProgress","gql","useMutation","useQuery","CURRENT_USER_QUERY","useUser","useRouter","useCart","useCheckoutMethod","emailjs","CheckoutFormStyles","form","SHIPPING_QUERY","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","undefined","status","setStatus","user","error","setError","loading","setLoading","stripe","router","elements","name","setName","email","setEmail","postal","setPostal","city","setCity","country","setCountry","line1","setLine1","line2","setLine2","state","setState","closeCart","shipName","setShipName","console","log","refetchQueries","query","checkout","graphQLError","data","allShippings","handleSubmit","e","preventDefault","sendForm","current","then","result","text","type","start","createPaymentMethod","card","getElement","billing_details","address","postal_code","paymentMethod","done","variables","token","id","order","session","shipping","shipCity","shipPostal","shipLine1","shipLine2","shipState","push","pathname","target","value","shipEmail","setShipEmail","setShipLine1","setShipLine2","setShipCity","shipCountry","setShipCountry","setShipState","setShipPostal","setShippingMethod","shippingMethod","map","amount","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    CardElement,\r\n    Elements,\r\n    useElements,\r\n    useStripe,\r\n  } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faChevronRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport nProgress from 'nprogress';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { CURRENT_USER_QUERY, useUser } from './User';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport { useCart } from '../lib/cartState';\r\nimport { useCheckoutMethod } from '../lib/checkoutState';\r\nimport emailjs from 'emailjs-com';\r\n\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n    box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n    border: 1px solid rgba(0, 0, 0, 0.06);\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    grid-gap: 1rem;\r\n    height: 398px;\r\n    overflow-y: scroll;\r\n    \r\n    input {\r\n        font-size: 15px;\r\n        margin-right: 5px;\r\n        width: 100%;\r\n    }\r\n\r\n    select {\r\n        font-size: 15px !important;\r\n        margin-right: 5px;\r\n        width: 100%;\r\n        max-width: none !important;\r\n        height: 37px;\r\n\r\n        option {\r\n            font-size: 15px;\r\n        }\r\n    }\r\n\r\n\r\n    .side-by-side {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-gap: 22px;\r\n    }\r\n`;\r\n\r\nconst SHIPPING_QUERY = gql`\r\n    query SHIPPING_QUERY {\r\n        allShippings {\r\n            id\r\n            type\r\n            amount\r\n            description\r\n        }\r\n    }\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CREATE_ORDER_MUTATION ($token: String!) {\r\n        checkout(token: $token) {\r\n            id\r\n            charge\r\n            total\r\n            items {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n\r\n    const form = useRef();\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    const user = useUser();\r\n\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const router = useRouter();\r\n    const elements = useElements();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState(user.email);\r\n    const [postal, setPostal] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [line1, setLine1] = useState('');\r\n    const [line2, setLine2] = useState('');\r\n    const [state, setState] = useState('');\r\n\r\n    const { closeCart } = useCart();\r\n\r\n    // const { \r\n    //     // States\r\n    //     shipName, \r\n    //     shipEmail,\r\n    //     shipPostal,\r\n    //     shipCity,\r\n    //     shipCountry,\r\n    //     shipLine1,\r\n    //     shipLine2,\r\n    //     shipState,\r\n    //     shippingMethod,\r\n\r\n    //     //Set States\r\n    //     setShipName,\r\n    //     setShipEmail,\r\n    //     setShipPostal,\r\n    //     setShipCity,\r\n    //     setShipCountry,\r\n    //     setShipLine1,\r\n    //     setShipLine2,\r\n    //     setShipState,\r\n    //     setShippingMethod\r\n    // } = useCheckoutMethod();\r\n\r\n    const [shipName, setShipName] = useContext(useCheckoutMethod);\r\n\r\n\r\n    // const [shipName, setShipName] = useState('');\r\n\r\n    console.log(shipName, 'test');\r\n    // console.log(setShipName);\r\n\r\n    const [checkout, {error: graphQLError}] = useMutation(\r\n        CREATE_ORDER_MUTATION,\r\n        {\r\n            refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n        }\r\n    );\r\n\r\n    const { data } = useQuery(SHIPPING_QUERY);\r\n\r\n    // const { Shipping } = data?.allShippings;\r\n\r\n    console.log(data?.allShippings);\r\n\r\n    async function handleSubmit(e) {\r\n        //1. Stop the form from submitting and turn the loader one\r\n        e.preventDefault();\r\n\r\n        emailjs.sendForm('service_ipz8izo', 'order_6vr15fv', form.current, 'user_uecjPyjaRPSXr3Lncpkcz')\r\n        .then((result) => {\r\n            console.log(result.text);\r\n            setStatus({type: 'result'});\r\n        }, (error) => {\r\n            console.log(error.text);\r\n            setStatus({type: 'error'})\r\n        });\r\n\r\n        setLoading(true);\r\n        console.log('We gotta do some work...');\r\n        //2. Start the page transition\r\n        nProgress.start();\r\n        //3. Create the payment method via stripe\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement),\r\n            billing_details: {\r\n                email,\r\n                name,\r\n                address: {\r\n                    city: city,\r\n                    country: country,\r\n                    line1: line1,\r\n                    line2: line2,\r\n                    postal_code: postal,\r\n                    state: state\r\n                }\r\n            }\r\n        });\r\n        // console.log(paymentMethod)\r\n        //4. Handle any errors from stripe (Token comes back here if successful)\r\n        if (error) {\r\n            setError(error);\r\n            nProgress.done();\r\n            return; //stops the checkout from happening\r\n        }\r\n        //5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n        const order = await checkout({\r\n            variables: {\r\n                token: paymentMethod.id,\r\n                // shipping: {\r\n                //     type: shippingMethod\r\n                // }\r\n            },\r\n        });\r\n        console.log(`Finished with the order!!`);\r\n        console.log(order, \"test\");\r\n        // console.log(paymentMethod.id);\r\n\r\n        const session = {\r\n            // success_url: 'https://example.com/success',\r\n            // cancel_url: 'https://example.com/cancel',\r\n            // payment_method_types: ['card'],\r\n            // line_items: [\r\n            //   {price: 'price_H5ggYwtDq4fbrJ', quantity: 2},\r\n            // ],\r\n            // mode: 'payment',\r\n\r\n            shipping: {\r\n                address: {\r\n                    city: shipCity,\r\n                    country: shipPostal,\r\n                    line1: shipLine1,\r\n                    line2: shipLine2,\r\n                    postal_code: shipPostal,\r\n                    state: shipState\r\n                }\r\n            },\r\n            // shipping_address_collection: null,\r\n        };\r\n\r\n        console.log(session, \"test\");\r\n\r\n        //6. Change the page to vie the order\r\n        router.push({\r\n            pathname: `/order/[id]`,\r\n            query: { id: order.data.checkout.id },\r\n        });\r\n        \r\n        //7. Close the cart \r\n        closeCart()\r\n\r\n        //8. Turn the loader off\r\n        setLoading(false);\r\n        nProgress.done();\r\n    }\r\n\r\n    return (\r\n        <CheckoutFormStyles ref={form} onSubmit={handleSubmit}>\r\n            <fieldset>\r\n                <div className=\"side-by-side\">\r\n                    <div>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"hidden\"\r\n                            required\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={(e) => {\r\n                            setEmail(e.target.value);\r\n                            }}\r\n                        />\r\n                        Billing Details\r\n                        <input\r\n                            id=\"name\"\r\n                            required\r\n                            placeholder=\"Full Name\"\r\n                            value={name}\r\n                            onChange={(e) => {\r\n                            setName(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"line1\"\r\n                            required\r\n                            placeholder=\"Address Line1\"\r\n                            value={line1}\r\n                            onChange={(e) => {\r\n                            setLine1(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"line2\"\r\n                            placeholder=\"Address Line2\"\r\n                            value={line2}\r\n                            onChange={(e) => {\r\n                            setLine2(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"city\"\r\n                            required\r\n                            placeholder=\"City\"\r\n                            value={city}\r\n                            onChange={(e) => {\r\n                            setCity(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"country\"\r\n                            required\r\n                            placeholder=\"Country\"\r\n                            value={country}\r\n                            onChange={(e) => {\r\n                            setCountry(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"state\"\r\n                            required\r\n                            placeholder=\"State/County\"\r\n                            value={state}\r\n                            onChange={(e) => {\r\n                            setState(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"postal\"\r\n                            required\r\n                            placeholder=\"Post Code\"\r\n                            value={postal}\r\n                            onChange={(e) => {\r\n                            setPostal(e.target.value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"hidden\"\r\n                            required\r\n                            placeholder=\"Email\"\r\n                            value={shipEmail}\r\n                            onChange={(e) => {\r\n                            setShipEmail(e.target.value);\r\n                            }}\r\n                        />\r\n                        Shipping Details\r\n                        <input\r\n                            id=\"shipName\"\r\n                            required\r\n                            placeholder=\"Full Name\"\r\n                            value={shipName}\r\n                            onChange={(e) => {\r\n                            setShipName(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipLine1\"\r\n                            required\r\n                            placeholder=\"Address Line1\"\r\n                            value={shipLine1}\r\n                            onChange={(e) => {\r\n                            setShipLine1(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipLine2\"\r\n                            placeholder=\"Address Line2\"\r\n                            value={shipLine2}\r\n                            onChange={(e) => {\r\n                            setShipLine2(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipCity\"\r\n                            required\r\n                            placeholder=\"City\"\r\n                            value={shipCity}\r\n                            onChange={(e) => {\r\n                            setShipCity(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipCountry\"\r\n                            required\r\n                            placeholder=\"Country\"\r\n                            value={shipCountry}\r\n                            onChange={(e) => {\r\n                            setShipCountry(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipState\"\r\n                            required\r\n                            placeholder=\"State/County\"\r\n                            value={shipState}\r\n                            onChange={(e) => {\r\n                            setShipState(e.target.value);\r\n                            }}\r\n                        />\r\n                        <input\r\n                            id=\"shipPostal\"\r\n                            required\r\n                            placeholder=\"Post Code\"\r\n                            value={shipPostal}\r\n                            onChange={(e) => {\r\n                            setShipPostal(e.target.value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <select\r\n                    name=\"transcode_profile\"\r\n                    id=\"transcode_profile\"\r\n                    onChange={(e) => {\r\n                        setShippingMethod(e.target.value);\r\n                    }}\r\n                    value={shippingMethod}\r\n                    >\r\n                        <option value=\"Select Shipping Method\">Select Shipping Method</option>\r\n                        {data?.allShippings.map(shippingMethod => <option value={shippingMethod.type}>{shippingMethod.type} - {shippingMethod.amount}</option>)}\r\n                </select>\r\n\r\n                {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n                {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\r\n                <CardElement />\r\n                <button id=\"buyIt\" className=\"btn btn-success checkout\" type=\"submit\">Buy Now <FontAwesomeIcon icon={faChevronRight} /></button>\r\n            </fieldset>\r\n        </CheckoutFormStyles>\r\n    );\r\n}\r\n\r\nfunction Checkout() {\r\n    return (\r\n        <Elements stripe={stripeLib}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport {Checkout};"]},"metadata":{},"sourceType":"module"}