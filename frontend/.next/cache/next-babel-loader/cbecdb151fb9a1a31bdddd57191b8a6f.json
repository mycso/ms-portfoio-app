{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\pages\\\\order\\\\[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_ORDER_QUERY($id: ID!) {\\n        order: Order(where: { id: $id }) {\\n            id\\n            charge\\n            total\\n            user {\\n                id\\n            }\\n            items {\\n                id\\n                name\\n                description\\n                price\\n                quantity\\n                photo { \\n                    image {\\n                        publicUrlTransformed\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport Head from 'next/head';\nimport formatMoney from '../../lib/formatMoney';\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\nexport default function SingleOrderPage(_ref) {\n  _s();\n\n  var _this = this;\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 22\n  }, this);\n  var order = data.order;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Stax of Stories \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Charge:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.charge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMoney(order.total)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"ItemCount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.items.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: order.items.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo.image.publicUrlTransformed,\n            alt: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Oty: \", item.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Each: \", formatMoney(item.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"SubTotal: \", formatMoney(item.price * item.quantity)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, _this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SingleOrderPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleOrderPage\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/pages/order/[id].js"],"names":["useQuery","gql","ErrorMessage","OrderStyles","Head","formatMoney","SINGLE_ORDER_QUERY","SingleOrderPage","query","variables","id","data","error","loading","order","charge","total","items","length","map","item","photo","image","publicUrlTransformed","title","name","quantity","price","description"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport OrderStyles from '../../components/styles/OrderStyles';\r\nimport Head from 'next/head';\r\nimport formatMoney from '../../lib/formatMoney';\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n    query SINGLE_ORDER_QUERY($id: ID!) {\r\n        order: Order(where: { id: $id }) {\r\n            id\r\n            charge\r\n            total\r\n            user {\r\n                id\r\n            }\r\n            items {\r\n                id\r\n                name\r\n                description\r\n                price\r\n                quantity\r\n                photo { \r\n                    image {\r\n                        publicUrlTransformed\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function SingleOrderPage({ query }) {\r\n    const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\r\n        variables: { id: query.id }\r\n    });\r\n    if(loading) return <p>Loading...</p>;\r\n    if(error) return <ErrorMessage error={error} />;\r\n    const { order } = data;\r\n    \r\n    return (\r\n        <OrderStyles>\r\n            <Head>\r\n                <title>Stax of Stories {order.id}</title>\r\n            </Head>\r\n            <p>\r\n                <span>Order Id:</span>\r\n                <span>{order.id}</span>\r\n            </p>\r\n            <p>\r\n                <span>Charge:</span>\r\n                <span>{order.charge}</span>\r\n            </p>\r\n            <p>\r\n                <span>Order Total:</span>\r\n                <span>{formatMoney(order.total)}</span>\r\n            </p>\r\n            <p>\r\n                <span>ItemCount:</span>\r\n                <span>{order.items.length}</span>\r\n            </p>\r\n            <div className=\"items\">\r\n                {order.items.map((item) => (\r\n                    <div className=\"order-item\" key={item.id}>\r\n                        <img src={item.photo.image.publicUrlTransformed} alt={item.title} />\r\n                        <div className=\"item-details\">\r\n                            <h2>{item.name}</h2>\r\n                            <p>Oty: {item.quantity}</p>\r\n                            <p>Each: {formatMoney(item.price)}</p>\r\n                            <p>SubTotal: {formatMoney(item.price * item.quantity)}</p>\r\n                            <p>{item.description}</p>\r\n                        </div>\r\n                    </div>        \r\n                ))}\r\n            </div>\r\n        </OrderStyles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}