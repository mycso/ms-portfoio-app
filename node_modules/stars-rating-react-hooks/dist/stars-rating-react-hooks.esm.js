import React__default, { useRef, useEffect, createElement, Fragment } from 'react';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var callAllFns = function callAllFns() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }

  return function () {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return fns.forEach(function (fn) {
      return fn && fn.apply(void 0, args);
    });
  };
};

function useStars(config, isDisabled) {
  if (isDisabled === void 0) {
    isDisabled = false;
  }

  var totalStars = config.totalStars,
      _config$initialSelect = config.initialSelectedValue,
      initialSelectedValue = _config$initialSelect === void 0 ? 0 : _config$initialSelect,
      renderFull = config.renderFull,
      _config$renderHalf = config.renderHalf,
      renderHalf = _config$renderHalf === void 0 ? null : _config$renderHalf,
      renderEmpty = config.renderEmpty;

  var _React$useState = React__default.useState(initialSelectedValue),
      selectedValue = _React$useState[0],
      setSelectedValue = _React$useState[1];

  var _React$useState2 = React__default.useState(initialSelectedValue),
      selectingValue = _React$useState2[0],
      setSelecting = _React$useState2[1];

  var _React$useState3 = React__default.useState(false),
      isSelecting = _React$useState3[0],
      setisSelecting = _React$useState3[1];

  var _onClick = function onClick() {
    if (isDisabled) return;
    setSelectedValue(selectingValue);
  };

  var onMouseEnter = function onMouseEnter() {
    if (isDisabled) return;
    setisSelecting(true);
  };

  var onMouseLeave = function onMouseLeave() {
    if (isDisabled) return;
    setSelecting(selectedValue);
    setisSelecting(false);
  };

  var _onMouseMove = function onMouseMove(e, index) {
    if (isDisabled) return;
    var rect = e.target.getBoundingClientRect();
    var xmiddleRelativePosistion = e.pageX - e.target.offsetLeft;

    if (renderHalf !== null && rect.width / 2 <= xmiddleRelativePosistion) {
      setSelecting(index + 0.5);
    } else {
      setSelecting(index);
    }
  };

  var stars = Array.from(Array(totalStars), function (_, i) {
    var shouldRenderHalf = renderHalf !== null ? true : false;
    var sindex = shouldRenderHalf ? i + 0.5 : i + 1;
    var isSelected = sindex <= selectingValue;
    var isHalf = !Number.isInteger(selectingValue) && sindex === selectingValue;
    var render = isSelected ? isHalf ? renderHalf : renderFull : renderEmpty;
    return render;
  });

  function getStarProps(index, elementProps) {
    var shouldRenderHalf = renderHalf !== null ? true : false;
    var i = shouldRenderHalf ? index + 0.5 : index + 1;
    return _extends({}, elementProps, {
      onClick: function onClick(e) {
        return callAllFns(_onClick(), elementProps && elementProps.onClick(e, selectingValue));
      },
      onMouseMove: function onMouseMove(e) {
        return callAllFns(_onMouseMove(e, i), elementProps && elementProps.onMouseMove && elementProps.onMouseMove(e, i));
      }
    });
  }

  function getStarWrapperProps(elementProps) {
    return _extends({}, elementProps, {
      onMouseLeave: callAllFns(elementProps && elementProps.onMouseLeave, onMouseLeave),
      onMouseEnter: callAllFns(elementProps && elementProps.onMouseEnter, onMouseEnter)
    });
  }

  return {
    getStarProps: getStarProps,
    stars: stars,
    getStarWrapperProps: getStarWrapperProps,
    isSelecting: isSelecting,
    selectedValue: selectedValue,
    selectingValue: selectingValue
  };
}

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".StarRating-module_stars__3roiw {\n  cursor: pointer;\n  display: inline-block;\n}\n.StarRating-module_star__MMPKi {\n  display: inline-block;\n}\n";
var styles = {"stars":"StarRating-module_stars__3roiw","star":"StarRating-module_star__MMPKi"};
styleInject(css_248z);

var StarsRating = function StarsRating(props) {
  var _props$isDisabled = props.isDisabled,
      isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled;
  var instance = useStars(props.config, isDisabled);
  var stars = instance.stars,
      getStarProps = instance.getStarProps,
      getStarWrapperProps = instance.getStarWrapperProps,
      isSelecting = instance.isSelecting,
      selectingValue = instance.selectingValue,
      selectedValue = instance.selectedValue;
  var isMountRef = useRef(false);
  useEffect(function () {
    if (props && props.onSelecting && props != null && props.onSelecting) {
      props.onSelecting(isSelecting, selectingValue);
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [isSelecting, selectingValue]);
  useEffect(function () {
    if (isMountRef.current === true && props != null && props.onStarsRated) {
      props.onStarsRated(selectedValue);
    }

    isMountRef.current = true; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [selectedValue]);
  return createElement(Fragment, null, createElement("div", null, createElement("span", Object.assign({
    tabIndex: 0
  }, getStarWrapperProps(), {
    className: styles.stars
  }), stars == null ? void 0 : stars.map(function (e, i) {
    return createElement("span", Object.assign({
      key: i
    }, getStarProps(i), {
      className: styles.star
    }), e);
  }))));
};

export default useStars;
export { StarsRating, useStars };
//# sourceMappingURL=stars-rating-react-hooks.esm.js.map
